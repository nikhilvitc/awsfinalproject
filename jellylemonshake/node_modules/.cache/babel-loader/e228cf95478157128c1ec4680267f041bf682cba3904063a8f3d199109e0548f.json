{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkumar/aws project/ChatRoom-/jellylemonshake/src/components/MessageItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport \"../styles/components/MessageItem.css\";\n\n// Import language support\nimport javascript from \"react-syntax-highlighter/dist/esm/languages/hljs/javascript\";\nimport python from \"react-syntax-highlighter/dist/esm/languages/hljs/python\";\nimport java from \"react-syntax-highlighter/dist/esm/languages/hljs/java\";\nimport cpp from \"react-syntax-highlighter/dist/esm/languages/hljs/cpp\";\nimport csharp from \"react-syntax-highlighter/dist/esm/languages/hljs/csharp\";\nimport php from \"react-syntax-highlighter/dist/esm/languages/hljs/php\";\nimport typescript from \"react-syntax-highlighter/dist/esm/languages/hljs/typescript\";\nimport html from \"react-syntax-highlighter/dist/esm/languages/hljs/xml\";\nimport css from \"react-syntax-highlighter/dist/esm/languages/hljs/css\";\nimport ruby from \"react-syntax-highlighter/dist/esm/languages/hljs/ruby\";\nimport swift from \"react-syntax-highlighter/dist/esm/languages/hljs/swift\";\nimport go from \"react-syntax-highlighter/dist/esm/languages/hljs/go\";\n\n// Register languages\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nSyntaxHighlighter.registerLanguage(\"javascript\", javascript);\nSyntaxHighlighter.registerLanguage(\"python\", python);\nSyntaxHighlighter.registerLanguage(\"java\", java);\nSyntaxHighlighter.registerLanguage(\"cpp\", cpp);\nSyntaxHighlighter.registerLanguage(\"csharp\", csharp);\nSyntaxHighlighter.registerLanguage(\"php\", php);\nSyntaxHighlighter.registerLanguage(\"typescript\", typescript);\nSyntaxHighlighter.registerLanguage(\"html\", html);\nSyntaxHighlighter.registerLanguage(\"css\", css);\nSyntaxHighlighter.registerLanguage(\"ruby\", ruby);\nSyntaxHighlighter.registerLanguage(\"swift\", swift);\nSyntaxHighlighter.registerLanguage(\"go\", go);\nfunction MessageItem(_ref) {\n  _s();\n  let {\n    message,\n    isCurrentUser,\n    onTagMessage,\n    isHovered,\n    isHighlighted,\n    // All matching search results\n    isActiveHighlight,\n    // Currently selected result\n    onMouseEnter,\n    onMouseLeave,\n    roomColor\n  } = _ref;\n  // Add state for copy button feedback\n  const [copied, setCopied] = useState(false);\n  // Add state for code/output toggle\n  const [showOutput, setShowOutput] = useState(false);\n  // Add state for loading while code is being executed\n  const [executingCode, setExecutingCode] = useState(false);\n  // Add state to store code execution output\n  const [outputLines, setOutputLines] = useState([]);\n  // Add state for user input in terminal\n  const [userInput, setUserInput] = useState(\"\");\n  // Add state to track if code needs input\n  const [awaitingInput, setAwaitingInput] = useState(false);\n  // Reference for terminal input\n  const terminalInputRef = useRef(null);\n  // Reference for output container scrolling\n  const outputContainerRef = useRef(null);\n  // Add this for message animation reference\n  const messageRef = useRef(null);\n\n  // Scroll to bottom of output whenever it changes\n  useEffect(() => {\n    if (outputContainerRef.current) {\n      outputContainerRef.current.scrollTop = outputContainerRef.current.scrollHeight;\n    }\n  }, [outputLines]);\n\n  // Focus input when awaiting input\n  useEffect(() => {\n    if (awaitingInput && terminalInputRef.current) {\n      terminalInputRef.current.focus();\n    }\n  }, [awaitingInput]);\n  // Create a useEffect to handle message appearance animation reset\n  useEffect(() => {\n    if (messageRef.current) {\n      messageRef.current.style.animation = \"none\";\n      void messageRef.current.offsetWidth; // Trigger reflow\n      messageRef.current.style.animation = \"\";\n    }\n  }, [message.id]);\n\n  // Function to handle code copying\n  const copyCodeToClipboard = () => {\n    navigator.clipboard.writeText(message.text).then(() => {\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000); // Reset after 2 seconds\n    }).catch(err => {\n      console.error(\"Failed to copy code:\", err);\n    });\n  };\n\n  // Function to execute code - uses the actual code from message.text\n  const executeCode = async () => {\n    if (showOutput) {\n      // Switch back to code view\n      setShowOutput(false);\n      return;\n    }\n\n    // Start execution\n    setExecutingCode(true);\n    setOutputLines([{\n      text: `Compiling ${message.language} code...`,\n      type: \"info\"\n    }]);\n    setShowOutput(true);\n    try {\n      // Here we would send the actual code to a compiler API\n      const codeToExecute = message.text;\n\n      // Simulate API call with timeout\n      setTimeout(() => {\n        // For JavaScript, we can actually execute it in the browser\n        if (message.language === \"javascript\") {\n          try {\n            // For demo purposes only\n            // eslint-disable-next-line no-new-func\n            const result = new Function(`\n              try {\n                return (function() {\n                  ${codeToExecute}\n                  return \"Code executed successfully\";\n                })();\n              } catch (error) {\n                return \"Error: \" + error.message;\n              }\n            `)();\n            setOutputLines([{\n              text: \"Execution result:\",\n              type: \"info\"\n            }, {\n              text: result,\n              type: \"success\"\n            }]);\n          } catch (error) {\n            setOutputLines([{\n              text: \"Execution error:\",\n              type: \"error\"\n            }, {\n              text: error.message,\n              type: \"error\"\n            }]);\n          }\n        } else {\n          // For other languages, we'd connect to a proper backend compiler\n          setOutputLines([{\n            text: `Ready to execute ${message.language} code:`,\n            type: \"info\"\n          }, {\n            text: codeToExecute.slice(0, 100) + \"...\",\n            type: \"info\"\n          }, {\n            text: \"Compiler backend required for this language\",\n            type: \"info\"\n          }, {\n            text: \"Would you like to provide input for this program?\",\n            type: \"input\"\n          }]);\n          setAwaitingInput(true);\n        }\n        setExecutingCode(false);\n      }, 1500);\n    } catch (error) {\n      setOutputLines(prev => [...prev, {\n        text: `Error executing code: ${error.message}`,\n        type: \"error\"\n      }]);\n      setExecutingCode(false);\n    }\n  };\n\n  // Handle user input submission\n  const handleInputSubmit = e => {\n    e.preventDefault();\n    if (!userInput.trim()) return;\n\n    // Add user input to output display\n    setOutputLines(prev => [...prev, {\n      text: `> ${userInput}`,\n      type: \"command\"\n    }]);\n\n    // For demo, just acknowledge the input\n    setOutputLines(prev => [...prev, {\n      text: `Input \"${userInput}\" sent to the program`,\n      type: \"info\"\n    }]);\n\n    // Clear input field\n    setUserInput(\"\");\n  };\n\n  // Format timestamp\n  const formattedTime = message.timestamp ? new Date(message.timestamp).toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  }) : \"\";\n  /*sohamghosh-jellylemonshake-23bps1146 */\n  // Generate a unique ID for the message if it doesn't have one\n  const messageId = message.id || new Date(message.timestamp).getTime();\n\n  // Function to format message text with mentions\n  const formatMessageWithMentions = text => {\n    if (!text) return \"\";\n\n    // Pattern to match @username format\n    const mentionPattern = /@([a-zA-Z0-9_]+)/g;\n\n    // Split the text by mention pattern and create parts array\n    const parts = [];\n    let lastIndex = 0;\n    let match;\n    while ((match = mentionPattern.exec(text)) !== null) {\n      // Add text before the match\n      if (match.index > lastIndex) {\n        parts.push(text.substring(lastIndex, match.index));\n      }\n\n      // Add the mention as a special span element\n      parts.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"user-mention\",\n        children: match[0]\n      }, `mention-${match.index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this));\n      lastIndex = match.index + match[0].length;\n    }\n\n    // Add any remaining text\n    if (lastIndex < text.length) {\n      parts.push(text.substring(lastIndex));\n    }\n    return parts.length > 0 ? parts : text;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message-item ${isCurrentUser ? \"current-user\" : \"\"} ${isHovered ? \"hovered\" : \"\"} ${isHighlighted ? \"highlighted\" : \"\"} ${isActiveHighlight ? \"active-highlight\" : \"\"}`,\n    onMouseEnter: () => onMouseEnter(messageId),\n    onMouseLeave: onMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message-sender-name ${isCurrentUser ? \"right\" : \"left\"}`,\n      style: {\n        color: message.color || (isCurrentUser ? \"var(--light-text)\" : \"var(--secondary-color)\")\n      },\n      children: [message.senderName, isCurrentUser && \" (You)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messageRef,\n      className: `message-bubble ${message.isCode ? \"code-message\" : \"\"} ${executingCode ? \"code-executing\" : \"\"}`,\n      style: {\n        backgroundColor: message.isCode ? \"#282a36\" : isCurrentUser ? roomColor || \"var(--primary-color)\" : \"var(--background-light)\",\n        borderColor: isHighlighted ? roomColor || \"#1e88e5\" : \"transparent\",\n        borderWidth: isHighlighted ? \"2px\" : \"0\",\n        boxShadow: isActiveHighlight ? `0 0 8px ${roomColor || \"#1e88e5\"}` : \"none\"\n      },\n      children: [isHovered && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tag-button\",\n        onClick: () => onTagMessage(message),\n        title: \"Reply to this message\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), message.replyTo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"12\",\n          height: \"12\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n            points: \"9 14 4 9 9 4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M20 20v-7a4 4 0 0 0-4-4H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reply-text\",\n          children: [message.replyTo.sender, \":\", \" \", message.replyTo.text.length > 30 ? message.replyTo.text.substring(0, 30) + \"...\" : message.replyTo.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), message.isCode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-toggle-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-toggle-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `code-toggle-option ${!showOutput ? \"active\" : \"\"}`,\n            onClick: () => setShowOutput(false),\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `code-toggle-option ${showOutput ? \"active\" : \"\"}`,\n            onClick: executeCode,\n            children: executingCode ? \"Running...\" : \"Output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code-toggle-slider\",\n            style: {\n              transform: showOutput ? \"translateX(100%)\" : \"translateX(0)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), message.isCode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-container\",\n        children: [!showOutput ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n          language: message.language || \"javascript\",\n          style: dracula,\n          customStyle: {\n            margin: 0,\n            padding: \"12px 15px\",\n            borderRadius: \"var(--border-radius)\",\n            fontSize: \"0.9rem\",\n            backgroundColor: \"transparent\",\n            overflow: \"auto\",\n            maxWidth: \"100%\",\n            width: \"100%\",\n            wordBreak: \"normal\",\n            wordWrap: \"normal\",\n            whiteSpace: \"pre\"\n          },\n          wrapLongLines: false,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-output\",\n          children: executingCode ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code-loading\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Executing code...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terminal-output\",\n              ref: outputContainerRef,\n              children: outputLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `output-line ${line.type}-line`,\n                children: line.text\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 21\n            }, this), awaitingInput && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleInputSubmit,\n              className: \"terminal-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"terminal-prompt\",\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"terminal-input\",\n                value: userInput,\n                onChange: e => setUserInput(e.target.value),\n                ref: terminalInputRef,\n                placeholder: \"Type your input here...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"terminal-submit\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"14\",\n                  height: \"14\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"22\",\n                    y1: \"2\",\n                    x2: \"11\",\n                    y2: \"13\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n                    points: \"22 2 15 22 11 13 2 9 22 2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time code-time\",\n          children: formattedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          style: {\n            color: isCurrentUser ? \"white\" : message.color || \"var(--text-color)\",\n            whiteSpace: \"pre-wrap\" // This preserves whitespace and line breaks\n          },\n          children: formatMessageWithMentions(message.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: formattedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), message.isCode && message.language && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-language-badge\",\n          children: message.language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"code-action-button\",\n            onClick: copyCodeToClipboard,\n            title: \"Copy code\",\n            children: copied ? /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M20 6L9 17l-5-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                x: \"9\",\n                y: \"9\",\n                width: \"13\",\n                height: \"13\",\n                rx: \"2\",\n                ry: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageItem, \"QEQJC8RrwNq29/Ft2fKzKjragl8=\");\n_c = MessageItem;\nexport default MessageItem;\nvar _c;\n$RefreshReg$(_c, \"MessageItem\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Light","SyntaxHighlighter","dracula","javascript","python","java","cpp","csharp","php","typescript","html","css","ruby","swift","go","jsxDEV","_jsxDEV","Fragment","_Fragment","registerLanguage","MessageItem","_ref","_s","message","isCurrentUser","onTagMessage","isHovered","isHighlighted","isActiveHighlight","onMouseEnter","onMouseLeave","roomColor","copied","setCopied","showOutput","setShowOutput","executingCode","setExecutingCode","outputLines","setOutputLines","userInput","setUserInput","awaitingInput","setAwaitingInput","terminalInputRef","outputContainerRef","messageRef","current","scrollTop","scrollHeight","focus","style","animation","offsetWidth","id","copyCodeToClipboard","navigator","clipboard","writeText","text","then","setTimeout","catch","err","console","error","executeCode","language","type","codeToExecute","result","Function","slice","prev","handleInputSubmit","e","preventDefault","trim","formattedTime","timestamp","Date","toLocaleTimeString","hour","minute","messageId","getTime","formatMessageWithMentions","mentionPattern","parts","lastIndex","match","exec","index","push","substring","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","color","senderName","ref","isCode","backgroundColor","borderColor","borderWidth","boxShadow","onClick","title","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","replyTo","points","sender","transform","customStyle","margin","padding","borderRadius","fontSize","overflow","maxWidth","wordBreak","wordWrap","whiteSpace","wrapLongLines","map","line","onSubmit","value","onChange","target","placeholder","x1","y1","x2","y2","x","y","rx","ry","_c","$RefreshReg$"],"sources":["/Users/nikhilkumar/aws project/ChatRoom-/jellylemonshake/src/components/MessageItem.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { dracula } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport \"../styles/components/MessageItem.css\";\r\n\r\n// Import language support\r\nimport javascript from \"react-syntax-highlighter/dist/esm/languages/hljs/javascript\";\r\nimport python from \"react-syntax-highlighter/dist/esm/languages/hljs/python\";\r\nimport java from \"react-syntax-highlighter/dist/esm/languages/hljs/java\";\r\nimport cpp from \"react-syntax-highlighter/dist/esm/languages/hljs/cpp\";\r\nimport csharp from \"react-syntax-highlighter/dist/esm/languages/hljs/csharp\";\r\nimport php from \"react-syntax-highlighter/dist/esm/languages/hljs/php\";\r\nimport typescript from \"react-syntax-highlighter/dist/esm/languages/hljs/typescript\";\r\nimport html from \"react-syntax-highlighter/dist/esm/languages/hljs/xml\";\r\nimport css from \"react-syntax-highlighter/dist/esm/languages/hljs/css\";\r\nimport ruby from \"react-syntax-highlighter/dist/esm/languages/hljs/ruby\";\r\nimport swift from \"react-syntax-highlighter/dist/esm/languages/hljs/swift\";\r\nimport go from \"react-syntax-highlighter/dist/esm/languages/hljs/go\";\r\n\r\n// Register languages\r\nSyntaxHighlighter.registerLanguage(\"javascript\", javascript);\r\nSyntaxHighlighter.registerLanguage(\"python\", python);\r\nSyntaxHighlighter.registerLanguage(\"java\", java);\r\nSyntaxHighlighter.registerLanguage(\"cpp\", cpp);\r\nSyntaxHighlighter.registerLanguage(\"csharp\", csharp);\r\nSyntaxHighlighter.registerLanguage(\"php\", php);\r\nSyntaxHighlighter.registerLanguage(\"typescript\", typescript);\r\nSyntaxHighlighter.registerLanguage(\"html\", html);\r\nSyntaxHighlighter.registerLanguage(\"css\", css);\r\nSyntaxHighlighter.registerLanguage(\"ruby\", ruby);\r\nSyntaxHighlighter.registerLanguage(\"swift\", swift);\r\nSyntaxHighlighter.registerLanguage(\"go\", go);\r\n\r\nfunction MessageItem({\r\n  message,\r\n  isCurrentUser,\r\n  onTagMessage,\r\n  isHovered,\r\n  isHighlighted, // All matching search results\r\n  isActiveHighlight, // Currently selected result\r\n  onMouseEnter,\r\n  onMouseLeave,\r\n  roomColor,\r\n}) {\r\n  // Add state for copy button feedback\r\n  const [copied, setCopied] = useState(false);\r\n  // Add state for code/output toggle\r\n  const [showOutput, setShowOutput] = useState(false);\r\n  // Add state for loading while code is being executed\r\n  const [executingCode, setExecutingCode] = useState(false);\r\n  // Add state to store code execution output\r\n  const [outputLines, setOutputLines] = useState([]);\r\n  // Add state for user input in terminal\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  // Add state to track if code needs input\r\n  const [awaitingInput, setAwaitingInput] = useState(false);\r\n  // Reference for terminal input\r\n  const terminalInputRef = useRef(null);\r\n  // Reference for output container scrolling\r\n  const outputContainerRef = useRef(null);\r\n  // Add this for message animation reference\r\n  const messageRef = useRef(null);\r\n\r\n  // Scroll to bottom of output whenever it changes\r\n  useEffect(() => {\r\n    if (outputContainerRef.current) {\r\n      outputContainerRef.current.scrollTop =\r\n        outputContainerRef.current.scrollHeight;\r\n    }\r\n  }, [outputLines]);\r\n\r\n  // Focus input when awaiting input\r\n  useEffect(() => {\r\n    if (awaitingInput && terminalInputRef.current) {\r\n      terminalInputRef.current.focus();\r\n    }\r\n  }, [awaitingInput]);\r\n  // Create a useEffect to handle message appearance animation reset\r\n  useEffect(() => {\r\n    if (messageRef.current) {\r\n      messageRef.current.style.animation = \"none\";\r\n      void messageRef.current.offsetWidth; // Trigger reflow\r\n      messageRef.current.style.animation = \"\";\r\n    }\r\n  }, [message.id]);\r\n\r\n  // Function to handle code copying\r\n  const copyCodeToClipboard = () => {\r\n    navigator.clipboard\r\n      .writeText(message.text)\r\n      .then(() => {\r\n        setCopied(true);\r\n        setTimeout(() => setCopied(false), 2000); // Reset after 2 seconds\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Failed to copy code:\", err);\r\n      });\r\n  };\r\n\r\n  // Function to execute code - uses the actual code from message.text\r\n  const executeCode = async () => {\r\n    if (showOutput) {\r\n      // Switch back to code view\r\n      setShowOutput(false);\r\n      return;\r\n    }\r\n\r\n    // Start execution\r\n    setExecutingCode(true);\r\n    setOutputLines([\r\n      { text: `Compiling ${message.language} code...`, type: \"info\" },\r\n    ]);\r\n    setShowOutput(true);\r\n\r\n    try {\r\n      // Here we would send the actual code to a compiler API\r\n      const codeToExecute = message.text;\r\n\r\n      // Simulate API call with timeout\r\n      setTimeout(() => {\r\n        // For JavaScript, we can actually execute it in the browser\r\n        if (message.language === \"javascript\") {\r\n          try {\r\n            // For demo purposes only\r\n            // eslint-disable-next-line no-new-func\r\n            const result = new Function(`\r\n              try {\r\n                return (function() {\r\n                  ${codeToExecute}\r\n                  return \"Code executed successfully\";\r\n                })();\r\n              } catch (error) {\r\n                return \"Error: \" + error.message;\r\n              }\r\n            `)();\r\n            setOutputLines([\r\n              { text: \"Execution result:\", type: \"info\" },\r\n              { text: result, type: \"success\" },\r\n            ]);\r\n          } catch (error) {\r\n            setOutputLines([\r\n              { text: \"Execution error:\", type: \"error\" },\r\n              { text: error.message, type: \"error\" },\r\n            ]);\r\n          }\r\n        } else {\r\n          // For other languages, we'd connect to a proper backend compiler\r\n          setOutputLines([\r\n            {\r\n              text: `Ready to execute ${message.language} code:`,\r\n              type: \"info\",\r\n            },\r\n            { text: codeToExecute.slice(0, 100) + \"...\", type: \"info\" },\r\n            {\r\n              text: \"Compiler backend required for this language\",\r\n              type: \"info\",\r\n            },\r\n            {\r\n              text: \"Would you like to provide input for this program?\",\r\n              type: \"input\",\r\n            },\r\n          ]);\r\n          setAwaitingInput(true);\r\n        }\r\n        setExecutingCode(false);\r\n      }, 1500);\r\n    } catch (error) {\r\n      setOutputLines((prev) => [\r\n        ...prev,\r\n        {\r\n          text: `Error executing code: ${error.message}`,\r\n          type: \"error\",\r\n        },\r\n      ]);\r\n      setExecutingCode(false);\r\n    }\r\n  };\r\n\r\n  // Handle user input submission\r\n  const handleInputSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!userInput.trim()) return;\r\n\r\n    // Add user input to output display\r\n    setOutputLines((prev) => [\r\n      ...prev,\r\n      {\r\n        text: `> ${userInput}`,\r\n        type: \"command\",\r\n      },\r\n    ]);\r\n\r\n    // For demo, just acknowledge the input\r\n    setOutputLines((prev) => [\r\n      ...prev,\r\n      {\r\n        text: `Input \"${userInput}\" sent to the program`,\r\n        type: \"info\",\r\n      },\r\n    ]);\r\n\r\n    // Clear input field\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  // Format timestamp\r\n  const formattedTime = message.timestamp\r\n    ? new Date(message.timestamp).toLocaleTimeString([], {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      })\r\n    : \"\";\r\n/*sohamghosh-jellylemonshake-23bps1146 */\r\n  // Generate a unique ID for the message if it doesn't have one\r\n  const messageId = message.id || new Date(message.timestamp).getTime();\r\n\r\n  // Function to format message text with mentions\r\n  const formatMessageWithMentions = (text) => {\r\n    if (!text) return \"\";\r\n\r\n    // Pattern to match @username format\r\n    const mentionPattern = /@([a-zA-Z0-9_]+)/g;\r\n\r\n    // Split the text by mention pattern and create parts array\r\n    const parts = [];\r\n    let lastIndex = 0;\r\n    let match;\r\n\r\n    while ((match = mentionPattern.exec(text)) !== null) {\r\n      // Add text before the match\r\n      if (match.index > lastIndex) {\r\n        parts.push(text.substring(lastIndex, match.index));\r\n      }\r\n\r\n      // Add the mention as a special span element\r\n      parts.push(\r\n        <span key={`mention-${match.index}`} className=\"user-mention\">\r\n          {match[0]}\r\n        </span>\r\n      );\r\n\r\n      lastIndex = match.index + match[0].length;\r\n    }\r\n\r\n    // Add any remaining text\r\n    if (lastIndex < text.length) {\r\n      parts.push(text.substring(lastIndex));\r\n    }\r\n\r\n    return parts.length > 0 ? parts : text;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`message-item ${isCurrentUser ? \"current-user\" : \"\"} ${\r\n        isHovered ? \"hovered\" : \"\"\r\n      } ${isHighlighted ? \"highlighted\" : \"\"} ${\r\n        isActiveHighlight ? \"active-highlight\" : \"\"\r\n      }`}\r\n      onMouseEnter={() => onMouseEnter(messageId)}\r\n      onMouseLeave={onMouseLeave}\r\n    >\r\n      {/*sohamghosh-jellylemonshake-23bps1146 *//* Always show sender name above message bubble */}\r\n      <div\r\n        className={`message-sender-name ${isCurrentUser ? \"right\" : \"left\"}`}\r\n        style={{\r\n          color:\r\n            message.color ||\r\n            (isCurrentUser ? \"var(--light-text)\" : \"var(--secondary-color)\"),\r\n        }}\r\n      >\r\n        {message.senderName}\r\n        {isCurrentUser && \" (You)\"}\r\n      </div>\r\n\r\n      <div\r\n        ref={messageRef}\r\n        className={`message-bubble ${message.isCode ? \"code-message\" : \"\"} ${\r\n          executingCode ? \"code-executing\" : \"\"\r\n        }`}\r\n        style={{\r\n          backgroundColor: message.isCode\r\n            ? \"#282a36\"\r\n            : isCurrentUser\r\n            ? roomColor || \"var(--primary-color)\"\r\n            : \"var(--background-light)\",\r\n          borderColor: isHighlighted ? roomColor || \"#1e88e5\" : \"transparent\",\r\n          borderWidth: isHighlighted ? \"2px\" : \"0\",\r\n          boxShadow: isActiveHighlight\r\n            ? `0 0 8px ${roomColor || \"#1e88e5\"}`\r\n            : \"none\",\r\n        }}\r\n      >\r\n        {/* Show tag button when hovered - MOVED INSIDE THE MESSAGE BUBBLE */}\r\n        {isHovered && (\r\n          <button\r\n            className=\"tag-button\"\r\n            onClick={() => onTagMessage(message)}\r\n            title=\"Reply to this message\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path>\r\n            </svg>\r\n          </button>\r\n        )}\r\n\r\n        {/* Show reply info if this message is a reply */}\r\n        {message.replyTo && (\r\n          <div className=\"reply-indicator\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"12\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <polyline points=\"9 14 4 9 9 4\"></polyline>\r\n              <path d=\"M20 20v-7a4 4 0 0 0-4-4H4\"></path>\r\n            </svg>\r\n            <span className=\"reply-text\">\r\n              {message.replyTo.sender}:{\" \"}\r\n              {message.replyTo.text.length > 30\r\n                ? message.replyTo.text.substring(0, 30) + \"...\"\r\n                : message.replyTo.text}\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        {/* Code/Output toggle switch for code messages */}\r\n        {message.isCode && (\r\n          <div className=\"code-toggle-container\">\r\n            <div className=\"code-toggle-switch\">\r\n              <button\r\n                className={`code-toggle-option ${!showOutput ? \"active\" : \"\"}`}\r\n                onClick={() => setShowOutput(false)}\r\n              >\r\n                Code\r\n              </button>\r\n              <button\r\n                className={`code-toggle-option ${showOutput ? \"active\" : \"\"}`}\r\n                onClick={executeCode}\r\n              >\r\n                {executingCode ? \"Running...\" : \"Output\"}\r\n              </button>\r\n              <div\r\n                className=\"code-toggle-slider\"\r\n                style={{\r\n                  transform: showOutput ? \"translateX(100%)\" : \"translateX(0)\",\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {message.isCode ? (\r\n          <div className=\"code-container\">\r\n            {/* Show either code or interactive output based on toggle state */}\r\n            {!showOutput ? (\r\n              <SyntaxHighlighter\r\n                language={message.language || \"javascript\"}\r\n                style={dracula}\r\n                customStyle={{\r\n                  margin: 0,\r\n                  padding: \"12px 15px\",\r\n                  borderRadius: \"var(--border-radius)\",\r\n                  fontSize: \"0.9rem\",\r\n                  backgroundColor: \"transparent\",\r\n                  overflow: \"auto\",\r\n                  maxWidth: \"100%\",\r\n                  width: \"100%\",\r\n                  wordBreak: \"normal\",\r\n                  wordWrap: \"normal\",\r\n                  whiteSpace: \"pre\",\r\n                }}\r\n                wrapLongLines={false}\r\n              >\r\n                {message.text}\r\n              </SyntaxHighlighter>\r\n            ) : (\r\n              <div className=\"code-output\">\r\n                {executingCode ? (\r\n                  <div className=\"code-loading\">\r\n                    <div className=\"loading-spinner\"></div>\r\n                    <span>Executing code...</span>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"terminal-output\" ref={outputContainerRef}>\r\n                      {outputLines.map((line, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className={`output-line ${line.type}-line`}\r\n                        >\r\n                          {line.text}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n\r\n                    {awaitingInput && (\r\n                      <form\r\n                        onSubmit={handleInputSubmit}\r\n                        className=\"terminal-input-container\"\r\n                      >\r\n                        <span className=\"terminal-prompt\">$</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"terminal-input\"\r\n                          value={userInput}\r\n                          onChange={(e) => setUserInput(e.target.value)}\r\n                          ref={terminalInputRef}\r\n                          placeholder=\"Type your input here...\"\r\n                        />\r\n                        <button type=\"submit\" className=\"terminal-submit\">\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"14\"\r\n                            height=\"14\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"2\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                          >\r\n                            <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n                            <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n                          </svg>\r\n                        </button>\r\n                      </form>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n            <div className=\"message-time code-time\">{formattedTime}</div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div\r\n              className=\"message-text\"\r\n              style={{\r\n                color: isCurrentUser\r\n                  ? \"white\"\r\n                  : message.color || \"var(--text-color)\",\r\n                whiteSpace: \"pre-wrap\", // This preserves whitespace and line breaks\r\n              }}\r\n            >\r\n              {formatMessageWithMentions(message.text)}\r\n            </div>\r\n            <div className=\"message-time\">{formattedTime}</div>\r\n          </>\r\n        )}\r\n\r\n        { /*sohamghosh-jellylemonshake-23bps1146 Code options with language badge first, then copy button */}\r\n        {message.isCode && message.language && (\r\n          <div className=\"code-options-container\">\r\n            <div className=\"code-language-badge\">{message.language}</div>\r\n            <div className=\"code-action-buttons\">\r\n              <button\r\n                className=\"code-action-button\"\r\n                onClick={copyCodeToClipboard}\r\n                title=\"Copy code\"\r\n              >\r\n                {copied ? (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <path d=\"M20 6L9 17l-5-5\"></path>\r\n                  </svg>\r\n                ) : (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <rect\r\n                      x=\"9\"\r\n                      y=\"9\"\r\n                      width=\"13\"\r\n                      height=\"13\"\r\n                      rx=\"2\"\r\n                      ry=\"2\"\r\n                    ></rect>\r\n                    <path d=\"M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1\"></path>\r\n                  </svg>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}