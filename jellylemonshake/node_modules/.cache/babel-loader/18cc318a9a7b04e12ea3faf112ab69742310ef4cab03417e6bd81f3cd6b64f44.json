{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkumar/aws project/ChatRoom-/jellylemonshake/src/components/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const session = supabase.auth.getSession();\n    if (session) {\n      setUser(session.user);\n    } else {\n      // Guest mode: generate random guest user\n      const guest = localStorage.getItem('guestUser');\n      if (guest) {\n        setUser(JSON.parse(guest));\n      } else {\n        const guestUser = {\n          id: 'guest-' + Math.random().toString(36).substring(2, 10),\n          username: 'Guest' + Math.floor(Math.random() * 10000),\n          isGuest: true\n        };\n        localStorage.setItem('guestUser', JSON.stringify(guestUser));\n        setUser(guestUser);\n      }\n    }\n    setLoading(false);\n    // Listen for auth changes\n    const {\n      data: listener\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (session && session.user) {\n        setUser(session.user);\n        localStorage.removeItem('guestUser');\n      } else {\n        setUser(null);\n      }\n    });\n    return () => {\n      var _listener$subscriptio;\n      listener === null || listener === void 0 ? void 0 : (_listener$subscriptio = listener.subscription) === null || _listener$subscriptio === void 0 ? void 0 : _listener$subscriptio.unsubscribe();\n    };\n  }, []);\n  const login = async (email, password) => {\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n    setUser(data.user);\n    localStorage.removeItem('guestUser');\n    return data.user;\n  };\n  const signup = async (email, password) => {\n    const {\n      data,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password\n    });\n    if (error) throw error;\n    setUser(data.user);\n    localStorage.removeItem('guestUser');\n    return data.user;\n  };\n  const logout = async () => {\n    await supabase.auth.signOut();\n    setUser(null);\n    // Optionally, re-enable guest mode\n    const guestUser = {\n      id: 'guest-' + Math.random().toString(36).substring(2, 10),\n      username: 'Guest' + Math.floor(Math.random() * 10000),\n      isGuest: true\n    };\n    localStorage.setItem('guestUser', JSON.stringify(guestUser));\n    setUser(guestUser);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      signup,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","supabase","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","loading","setLoading","session","auth","getSession","guest","localStorage","getItem","JSON","parse","guestUser","id","Math","random","toString","substring","username","floor","isGuest","setItem","stringify","data","listener","onAuthStateChange","_event","removeItem","_listener$subscriptio","subscription","unsubscribe","login","email","password","error","signInWithPassword","signup","signUp","logout","signOut","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/nikhilkumar/aws project/ChatRoom-/jellylemonshake/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const session = supabase.auth.getSession();\r\n    if (session) {\r\n      setUser(session.user);\r\n    } else {\r\n      // Guest mode: generate random guest user\r\n      const guest = localStorage.getItem('guestUser');\r\n      if (guest) {\r\n        setUser(JSON.parse(guest));\r\n      } else {\r\n        const guestUser = {\r\n          id: 'guest-' + Math.random().toString(36).substring(2, 10),\r\n          username: 'Guest' + Math.floor(Math.random() * 10000),\r\n          isGuest: true,\r\n        };\r\n        localStorage.setItem('guestUser', JSON.stringify(guestUser));\r\n        setUser(guestUser);\r\n      }\r\n    }\r\n    setLoading(false);\r\n    // Listen for auth changes\r\n    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {\r\n      if (session && session.user) {\r\n        setUser(session.user);\r\n        localStorage.removeItem('guestUser');\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    });\r\n    return () => {\r\n      listener?.subscription?.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    const { data, error } = await supabase.auth.signInWithPassword({ email, password });\r\n    if (error) throw error;\r\n    setUser(data.user);\r\n    localStorage.removeItem('guestUser');\r\n    return data.user;\r\n  };\r\n\r\n  const signup = async (email, password) => {\r\n    const { data, error } = await supabase.auth.signUp({ email, password });\r\n    if (error) throw error;\r\n    setUser(data.user);\r\n    localStorage.removeItem('guestUser');\r\n    return data.user;\r\n  };\r\n\r\n  const logout = async () => {\r\n    await supabase.auth.signOut();\r\n    setUser(null);\r\n    // Optionally, re-enable guest mode\r\n    const guestUser = {\r\n      id: 'guest-' + Math.random().toString(36).substring(2, 10),\r\n      username: 'Guest' + Math.floor(Math.random() * 10000),\r\n      isGuest: true,\r\n    };\r\n    localStorage.setItem('guestUser', JSON.stringify(guestUser));\r\n    setUser(guestUser);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, signup, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}