{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkumar/aws project/ChatRoom-/jellylemonshake/src/components/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport MessageItem from \"./MessageItem\";\nimport { useAuth } from \"./AuthContext\";\nimport \"../styles/components/ChatRoom.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatRoom() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    isAuthenticated,\n    user: authUser,\n    logout,\n    avatarVersion\n  } = useAuth();\n\n  // [All state variables and refs remain the same]\n  const [user, setUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [participants, setParticipants] = useState([]);\n  const [roomInfo, setRoomInfo] = useState(null);\n  const [joinedRooms, setJoinedRooms] = useState([]);\n  const [expandedRooms, setExpandedRooms] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [allRoomsParticipants, setAllRoomsParticipants] = useState({});\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [hoveredMessageId, setHoveredMessageId] = useState(null);\n  const [taggedMessage, setTaggedMessage] = useState(null);\n  const [isAttachmentOn, setIsAttachmentOn] = useState(false);\n  const [isEmojiOn, setIsEmojiOn] = useState(false);\n  const [isCodeOn, setIsCodeOn] = useState(false);\n  const [isAtBottom, setIsAtBottom] = useState(true);\n  const [showScrollButton, setShowScrollButton] = useState(false);\n  const [messagesUpdated, setMessagesUpdated] = useState(false);\n  // Drag and drop states\n  const [draggedRoom, setDraggedRoom] = useState(null);\n  const [dragOverRoom, setDragOverRoom] = useState(null);\n  // Enhanced drag and drop states for animations\n  const [draggedItemRect, setDraggedItemRect] = useState(null);\n  const [roomOrder, setRoomOrder] = useState([]);\n  const [dragStartIndex, setDragStartIndex] = useState(null);\n  const [dragDirection, setDragDirection] = useState(null);\n  // Code language states\n  const [showLanguageSelector, setShowLanguageSelector] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(\"javascript\");\n  // Mention feature states\n  const [showMentionList, setShowMentionList] = useState(false);\n  const [mentionFilter, setMentionFilter] = useState(\"\");\n  const [mentionStartPosition, setMentionStartPosition] = useState(null);\n  const [filteredParticipants, setFilteredParticipants] = useState([]);\n  // New state for unread message counts\n  const [unreadCounts, setUnreadCounts] = useState({});\n  // Room saving states\n  const [isRoomSaved, setIsRoomSaved] = useState(false);\n  const [showLoginPrompt, setShowLoginPrompt] = useState(false);\n  // User dropup menu state\n  const [userDropupOpen, setUserDropupOpen] = useState(false);\n  // Search feature states\n  const [highlightedMessageIds, setHighlightedMessageIds] = useState([]);\n  const [currentSearchResultIndex, setCurrentSearchResultIndex] = useState(0);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  // Add this new state for scroll button animation\n  const [scrollButtonHiding, setScrollButtonHiding] = useState(false);\n  // Add these new states for animation controls\n  const [emojiPickerHiding, setEmojiPickerHiding] = useState(false);\n  const [languageSelectorHiding, setLanguageSelectorHiding] = useState(false);\n  const [taggedMessageHiding, setTaggedMessageHiding] = useState(false);\n\n  // [All refs and constant declarations remain the same]\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  const participantRefs = useRef({});\n  const fileInputRef = useRef(null);\n  const emojiPickerRef = useRef(null);\n  const messageInputRef = useRef(null);\n  const languageSelectorRef = useRef(null);\n  const mentionListRef = useRef(null);\n  const prevMessagesLengthRef = useRef(0);\n  const prevMessageCountsRef = useRef({});\n  const userMenuRef = useRef(null);\n  const searchContainerRef = useRef(null);\n  const roomsListRef = useRef(null);\n  //const messagePollingRef = useRef(null);\n\n  // Supported coding languages\n  const codeLanguages = [{\n    id: \"javascript\",\n    name: \"JavaScript\"\n  }, {\n    id: \"python\",\n    name: \"Python\"\n  }, {\n    id: \"java\",\n    name: \"Java\"\n  }, {\n    id: \"cpp\",\n    name: \"C++\"\n  }, {\n    id: \"csharp\",\n    name: \"C#\"\n  }, {\n    id: \"php\",\n    name: \"PHP\"\n  }, {\n    id: \"ruby\",\n    name: \"Ruby\"\n  }, {\n    id: \"swift\",\n    name: \"Swift\"\n  }, {\n    id: \"go\",\n    name: \"Go\"\n  }, {\n    id: \"typescript\",\n    name: \"TypeScript\"\n  }, {\n    id: \"html\",\n    name: \"HTML\"\n  }, {\n    id: \"css\",\n    name: \"CSS\"\n  }];\n\n  // Common emojis for the picker\n  const commonEmojis = [\"😊\", \"😂\", \"❤️\", \"👍\", \"🎉\", \"😎\", \"😢\", \"🤔\", \"👋\", \"🙏\", \"🔥\", \"✨\", \"💯\", \"🤣\", \"😊\", \"🥳\", \"👏\", \"💪\", \"🤦‍♂️\", \"🤷‍♀️\"];\n\n  // Update roomOrder when joinedRooms changes\n  useEffect(() => {\n    if (joinedRooms.length > 0) {\n      setRoomOrder(joinedRooms.map(room => room.roomId));\n    }\n  }, [joinedRooms]);\n\n  // Search feature functions\n  const toggleSearch = useCallback(() => {\n    setIsSearchOpen(prevIsOpen => {\n      if (prevIsOpen) {\n        // Clear search when closing\n        setSearchQuery(\"\");\n        setSearchResults([]);\n        setHighlightedMessageIds([]);\n      }\n      return !prevIsOpen;\n    });\n  }, []);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target) && !event.target.closest(\".emoji-button\") // Use closest instead of classList.contains\n      ) {\n        setShowEmojiPicker(false);\n        setIsEmojiOn(false);\n      }\n      if (isSearchOpen && searchContainerRef.current && !searchContainerRef.current.contains(event.target) && !event.target.closest(\".search-button\")) {\n        toggleSearch();\n      }\n    }\n    if (isSearchOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isSearchOpen, toggleSearch]);\n  const handleSearch = e => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    if (query.trim()) {\n      const results = messages.filter(message => message.text.toLowerCase().includes(query.toLowerCase()));\n      setSearchResults(results);\n\n      // Extract all matching message IDs\n      const matchingIds = results.map(message => message.id || new Date(message.timestamp).getTime());\n      setHighlightedMessageIds(matchingIds);\n\n      // Reset to first result\n      setCurrentSearchResultIndex(0);\n\n      // If there are results, scroll to the first one\n      if (results.length > 0) {\n        scrollToMessage(results[0]);\n      }\n    } else {\n      setSearchResults([]);\n      setHighlightedMessageIds([]);\n    }\n  };\n  const navigateSearchResults = direction => {\n    if (searchResults.length <= 1) return;\n    let newIndex;\n    if (direction === \"next\") {\n      newIndex = (currentSearchResultIndex + 1) % searchResults.length;\n    } else {\n      newIndex = (currentSearchResultIndex - 1 + searchResults.length) % searchResults.length;\n    }\n    setCurrentSearchResultIndex(newIndex);\n    scrollToMessage(searchResults[newIndex]);\n  };\n  const scrollToMessage = message => {\n    const messageId = message.id || new Date(message.timestamp).getTime();\n    setTimeout(() => {\n      const messageElements = messagesContainerRef.current.querySelectorAll(\".message-item\");\n      const matchIndex = messages.findIndex(m => (m.id || new Date(m.timestamp).getTime()) === messageId);\n      if (matchIndex >= 0 && messageElements[matchIndex]) {\n        messageElements[matchIndex].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"center\"\n        });\n      }\n    }, 100);\n  };\n\n  // Check if room is saved for this user\n  useEffect(() => {\n    if (isAuthenticated && roomId) {\n      const savedRooms = JSON.parse(localStorage.getItem(\"savedRooms\") || \"[]\");\n      const roomExists = savedRooms.some(room => room.id === roomId);\n      setIsRoomSaved(roomExists);\n    }\n  }, [isAuthenticated, roomId]);\n\n  // Handle clicks outside the user menu\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\n        setUserDropupOpen(false);\n      }\n    };\n    if (userDropupOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [userDropupOpen]);\n\n  // User menu logout handler\n  const handleMenuLogout = () => {\n    logout();\n    navigate(\"/\");\n  };\n\n  // Toggle room saving\n  const toggleSaveRoom = () => {\n    if (!isAuthenticated) {\n      setShowLoginPrompt(true);\n      return;\n    }\n    const savedRooms = JSON.parse(localStorage.getItem(\"savedRooms\") || \"[]\");\n    if (isRoomSaved) {\n      const updatedRooms = savedRooms.filter(room => room.id !== roomId);\n      localStorage.setItem(\"savedRooms\", JSON.stringify(updatedRooms));\n      setIsRoomSaved(false);\n    } else {\n      const newRoom = {\n        id: roomId,\n        name: (roomInfo === null || roomInfo === void 0 ? void 0 : roomInfo.name) || `Room #${roomId}`,\n        lastActive: new Date().toISOString()\n      };\n      localStorage.setItem(\"savedRooms\", JSON.stringify([...savedRooms, newRoom]));\n      setIsRoomSaved(true);\n    }\n  };\n\n  // Function to get a contrasting text color based on background color\n  const getContrastingColor = backgroundColor => {\n    // Convert to hex if it's a CSS variable\n    if (backgroundColor.startsWith(\"var(\")) {\n      return \"#FFFFFF\"; // Default to white for CSS variables\n    }\n\n    // Remove # if present\n    const hex = backgroundColor.replace(/^#/, \"\");\n\n    // Handle shorthand hex\n    const rgb = hex.length === 3 ? [parseInt(hex[0] + hex[0], 16), parseInt(hex[1] + hex[1], 16), parseInt(hex[2] + hex[2], 16)] : [parseInt(hex.substr(0, 2), 16), parseInt(hex.substr(2, 2), 16), parseInt(hex.substr(4, 2), 16)];\n\n    // Calculate luminance - determines if color is light or dark\n    const luminance = (0.299 * rgb[0] + 0.587 * rgb[1] + 0.114 * rgb[2]) / 255;\n    return luminance > 0.5 ? \"#333333\" : \"#FFFFFF\";\n  };\n\n  // Updated function to adjust textarea height with scrollbar handling\n  const adjustTextareaHeight = () => {\n    const textarea = messageInputRef.current;\n    if (!textarea) return;\n\n    // Reset height to calculate proper scrollHeight\n    textarea.style.height = \"auto\";\n\n    // Set new height based on content\n    const newHeight = textarea.scrollHeight;\n    textarea.style.height = `${newHeight}px`;\n\n    // Only show scrollbar when content exceeds max-height (120px)\n    if (newHeight > 120) {\n      textarea.style.overflowY = \"auto\";\n    } else {\n      textarea.style.overflowY = \"hidden\";\n    }\n  };\n\n  // Auto-resize textarea when content changes\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [messageInput]);\n\n  // IMPROVED: Function to handle scroll events with better threshold\n  const handleScroll = () => {\n    if (!messagesContainerRef.current) return;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = messagesContainerRef.current;\n\n    // Increase threshold to 100 pixels for more natural detection of \"at bottom\"\n    const atBottom = scrollHeight - scrollTop - clientHeight < 100;\n    setIsAtBottom(atBottom);\n    // Handle button visibility with animation\n    if (!atBottom && !showScrollButton) {\n      setShowScrollButton(true);\n      setScrollButtonHiding(false);\n    } else if (atBottom && showScrollButton) {\n      setScrollButtonHiding(true);\n      setTimeout(() => {\n        setShowScrollButton(false);\n        setScrollButtonHiding(false);\n      }, 300); // Duration of the hide animation\n    }\n  };\n\n  // Function to scroll to bottom manually\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    setScrollButtonHiding(true);\n    setTimeout(() => {\n      setShowScrollButton(false);\n      setScrollButtonHiding(false);\n    }, 300);\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setIsAtBottom(true);\n  };\n\n  // Function to generate random color\n  const generateRandomColor = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16).padStart(6, \"0\");\n  };\n\n  // Function to generate room color palette\n  const generateRoomPalette = baseColor => {\n    // Convert hex to RGB\n    const r = parseInt(baseColor.slice(1, 3), 16);\n    const g = parseInt(baseColor.slice(3, 5), 16);\n    const b = parseInt(baseColor.slice(5, 7), 16);\n\n    // Generate a lighter shade for backgrounds\n    const lighterShade = `rgba(${r}, ${g}, ${b}, 0.1)`;\n\n    // Generate a darker shade for accents\n    const darkerShade = `rgba(${r}, ${g}, ${b}, 0.8)`;\n\n    // Generate a mid shade for borders\n    const midShade = `rgba(${r}, ${g}, ${b}, 0.5)`;\n    return {\n      baseColor,\n      lighterShade,\n      darkerShade,\n      midShade\n    };\n  };\n\n  // Enhanced drag start function\n  const handleDragStart = (e, roomId, index) => {\n    // Store initial position for animation\n    const rect = e.currentTarget.getBoundingClientRect();\n    setDraggedItemRect(rect);\n    setDragStartIndex(index);\n\n    // Create a ghost element for better dragging visuals\n    const ghost = e.currentTarget.cloneNode(true);\n    ghost.style.position = \"absolute\";\n    ghost.style.top = \"-1000px\";\n    ghost.style.opacity = \"0\";\n    document.body.appendChild(ghost);\n    e.dataTransfer.setDragImage(ghost, 0, 0);\n\n    // Clean up ghost element after drag starts\n    setTimeout(() => {\n      document.body.removeChild(ghost);\n    }, 0);\n\n    // Set data for drag operation\n    e.dataTransfer.setData(\"text/plain\", roomId);\n    e.currentTarget.classList.add(\"dragging\");\n    setDraggedRoom(roomId);\n  };\n\n  // Improved drag over handler with real-time reordering\n  const handleDragOver = (e, roomId, index) => {\n    e.preventDefault();\n    if (draggedRoom === roomId) return;\n    setDragOverRoom(roomId);\n\n    // Determine drag direction (up or down)\n    if (dragStartIndex !== null) {\n      const newDirection = index > dragStartIndex ? \"down\" : \"up\";\n      if (newDirection !== dragDirection) {\n        setDragDirection(newDirection);\n      }\n    }\n\n    // Preview new order immediately for animation\n    const currentItems = [...roomOrder];\n    const draggedIndex = currentItems.indexOf(draggedRoom);\n    if (draggedIndex !== -1 && draggedIndex !== index) {\n      // Remove from current position\n      currentItems.splice(draggedIndex, 1);\n      // Insert at new position\n      currentItems.splice(index, 0, draggedRoom);\n\n      // Update the preview order immediately for animation\n      setRoomOrder(currentItems);\n    }\n  };\n\n  // Enhanced drop handler\n  const handleDrop = (e, targetRoomId) => {\n    e.preventDefault();\n    const sourceRoomId = e.dataTransfer.getData(\"text/plain\");\n\n    // Use the current preview order to make the change permanent\n    const newRooms = joinedRooms.slice();\n    // Sort the rooms according to the new order\n    newRooms.sort((a, b) => {\n      const indexA = roomOrder.indexOf(a.roomId);\n      const indexB = roomOrder.indexOf(b.roomId);\n      return indexA - indexB;\n    });\n\n    // Update state and localStorage\n    setJoinedRooms(newRooms);\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(newRooms));\n\n    // Reset drag states\n    setDraggedRoom(null);\n    setDragOverRoom(null);\n    setDraggedItemRect(null);\n    setDragStartIndex(null);\n    setDragDirection(null);\n  };\n\n  // Improved drag end handler\n  const handleDragEnd = e => {\n    e.currentTarget.classList.remove(\"dragging\");\n\n    // Reset to original order if drag operation was canceled\n    if (draggedRoom) {\n      const originalOrder = joinedRooms.map(room => room.roomId);\n      setRoomOrder(originalOrder);\n    }\n\n    // Reset all drag states\n    setDraggedRoom(null);\n    setDragOverRoom(null);\n    setDraggedItemRect(null);\n    setDragStartIndex(null);\n    setDragDirection(null);\n  };\n\n  // Mock message polling interval\n  const messagePollingRef = useRef(null);\n\n  // FIXED: Handle mention input detection\n  const handleMentionDetection = (text, cursorPosition) => {\n    // If there's no text or no @ in the text at all, hide the mention list\n    if (!text || !text.includes(\"@\")) {\n      setShowMentionList(false);\n      return;\n    }\n\n    // Get the text up to the cursor position\n    const textToCursor = text.substring(0, cursorPosition);\n\n    // Use regex to find an ongoing mention\n    // This matches @ preceded by start of text or whitespace,\n    // followed by any non-whitespace characters, up to the end of the string\n    const mentionRegex = /(^|\\s)@(\\S*)$/;\n    const match = textToCursor.match(mentionRegex);\n    if (!match) {\n      // No ongoing mention found at the cursor position\n      setShowMentionList(false);\n      return;\n    }\n\n    // We found an ongoing mention\n    const mentionStart = match.index + (match[1] || \"\").length; // Account for potential whitespace\n    const mentionText = match[2]; // Text after @ without the @ itself\n\n    setMentionStartPosition(mentionStart);\n    setMentionFilter(mentionText);\n\n    // Filter participants based on the mention text\n    const filtered = participants.filter(participant => participant.username.toLowerCase().includes(mentionText.toLowerCase()));\n    setFilteredParticipants(filtered);\n    setShowMentionList(filtered.length > 0);\n  };\n\n  // Handle selecting a user from mention list\n  const handleSelectMention = username => {\n    if (mentionStartPosition === null) return;\n    const beforeMention = messageInput.substring(0, mentionStartPosition);\n    const afterMention = messageInput.substring(messageInputRef.current.selectionStart);\n\n    // Insert the username with a space after it\n    const newText = `${beforeMention}@${username} ${afterMention}`;\n    setMessageInput(newText);\n\n    // Close mention list\n    setShowMentionList(false);\n\n    // Focus back on input and place cursor after the mention\n    setTimeout(() => {\n      if (messageInputRef.current) {\n        messageInputRef.current.focus();\n        const newCursorPos = mentionStartPosition + username.length + 2; // +2 for @ and space\n        messageInputRef.current.selectionStart = newCursorPos;\n        messageInputRef.current.selectionEnd = newCursorPos;\n      }\n    }, 0);\n  };\n\n  // Handle language selection for code formatting\n  const handleLanguageSelect = langId => {\n    setSelectedLanguage(langId);\n    setShowLanguageSelector(false);\n  };\n\n  // Initialize room data from localStorage\n  useEffect(() => {\n    const userData = localStorage.getItem(\"chatUser\");\n    if (!userData) {\n      navigate(\"/\");\n      return;\n    }\n    const parsedUser = JSON.parse(userData);\n\n    // Assign a random color to the user if they don't have one\n    if (!parsedUser.color) {\n      parsedUser.color = generateRandomColor();\n      localStorage.setItem(\"chatUser\", JSON.stringify(parsedUser));\n    }\n    if (parsedUser.roomId !== roomId) {\n      // Update the active room\n      localStorage.setItem(\"chatUser\", JSON.stringify({\n        ...parsedUser,\n        roomId\n      }));\n    }\n    setUser(parsedUser);\n\n    // Get all joined rooms\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n    setJoinedRooms(userRooms);\n\n    // Get room data from localStorage\n    const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n    const room = rooms[roomId];\n    if (!room) {\n      setError(\"Room not found\");\n      setLoading(false);\n      return;\n    }\n\n    // Assign a random color to the room if it doesn't have one\n    if (!room.color) {\n      room.color = generateRandomColor();\n      rooms[roomId] = room;\n      localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\n    }\n    setRoomInfo(room);\n    setParticipants(room.participants);\n\n    // Get participants for all rooms\n    const roomParticipantsMap = {};\n    userRooms.forEach(userRoom => {\n      const currentRoom = rooms[userRoom.roomId];\n      if (currentRoom && currentRoom.participants) {\n        roomParticipantsMap[userRoom.roomId] = currentRoom.participants;\n      }\n    });\n    setAllRoomsParticipants(roomParticipantsMap);\n\n    // Get messages for this room\n    const allMessages = JSON.parse(localStorage.getItem(\"chatMessages\") || \"{}\");\n    const roomMessages = allMessages[roomId] || [];\n    setMessages(roomMessages);\n    prevMessagesLengthRef.current = roomMessages.length;\n\n    // Initialize previous message counts for each room for unread tracking\n    const prevCounts = {};\n    userRooms.forEach(userRoom => {\n      const roomMessages = allMessages[userRoom.roomId] || [];\n      prevCounts[userRoom.roomId] = roomMessages.length;\n    });\n    prevMessageCountsRef.current = prevCounts;\n    setLoading(false);\n\n    // Set up polling for new messages and participants (simulating real-time)\n    messagePollingRef.current = setInterval(() => {\n      const updatedMessages = JSON.parse(localStorage.getItem(\"chatMessages\") || \"{}\")[roomId] || [];\n\n      // IMPROVED: Check for new messages and set flag instead of directly scrolling\n      if (updatedMessages.length > prevMessagesLengthRef.current) {\n        setMessages(updatedMessages);\n        prevMessagesLengthRef.current = updatedMessages.length;\n        setMessagesUpdated(true);\n      }\n\n      // Check for new messages in other rooms and track unread counts\n      const allMessages = JSON.parse(localStorage.getItem(\"chatMessages\") || \"{}\");\n      joinedRooms.forEach(room => {\n        if (room.roomId !== roomId) {\n          // Only for rooms other than current\n          const roomMessages = allMessages[room.roomId] || [];\n          const prevCount = prevMessageCountsRef.current[room.roomId] || 0;\n          if (roomMessages.length > prevCount) {\n            // Increment unread count by the number of new messages\n            setUnreadCounts(prev => ({\n              ...prev,\n              [room.roomId]: (prev[room.roomId] || 0) + (roomMessages.length - prevCount)\n            }));\n\n            // Update the previous count reference\n            prevMessageCountsRef.current = {\n              ...prevMessageCountsRef.current,\n              [room.roomId]: roomMessages.length\n            };\n          }\n        }\n      });\n\n      // Update participants for all rooms\n      const updatedRooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n\n      // Update active room participants\n      const updatedRoom = updatedRooms[roomId];\n      if (updatedRoom && JSON.stringify(updatedRoom.participants) !== JSON.stringify(participants)) {\n        setParticipants(updatedRoom.participants);\n      }\n\n      // Update all room participants\n      const updatedRoomParticipantsMap = {};\n      userRooms.forEach(userRoom => {\n        const currentRoom = updatedRooms[userRoom.roomId];\n        if (currentRoom && currentRoom.participants) {\n          updatedRoomParticipantsMap[userRoom.roomId] = currentRoom.participants;\n        }\n      });\n      setAllRoomsParticipants(updatedRoomParticipantsMap);\n\n      // Update joined rooms\n      const updatedUserRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n      if (JSON.stringify(updatedUserRooms) !== JSON.stringify(joinedRooms)) {\n        setJoinedRooms(updatedUserRooms);\n      }\n    }, 1000);\n    return () => {\n      if (messagePollingRef.current) {\n        clearInterval(messagePollingRef.current);\n      }\n    };\n  }, [roomId, navigate]);\n\n  // Handle clicks outside panels\n  useEffect(() => {\n    function handleClickOutside(event) {\n      let clickedInsideAnyPanel = false;\n      let clickedOnAnyToggleButton = false;\n\n      // Check if clicked on any toggle button\n      if (event.target.classList.contains(\"toggle-users-btn\") || event.target.classList.contains(\"users-icon\")) {\n        clickedOnAnyToggleButton = true;\n      }\n\n      // Check if clicked inside any participant panel\n      Object.keys(participantRefs.current).forEach(roomId => {\n        const ref = participantRefs.current[roomId];\n        if (ref && ref.contains(event.target)) {\n          clickedInsideAnyPanel = true;\n        }\n      });\n\n      // If clicked outside all panels and not on a toggle button, close all panels\n      if (!clickedInsideAnyPanel && !clickedOnAnyToggleButton) {\n        setExpandedRooms({});\n      }\n\n      // Close emoji picker if clicked outside\n      if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target) && !event.target.classList.contains(\"emoji-button\")) {\n        setShowEmojiPicker(false);\n        setIsEmojiOn(false);\n      }\n\n      // Close language selector if clicked outside\n      // Inside your useEffect that handles outside clicks\n      if (languageSelectorRef.current && !languageSelectorRef.current.contains(event.target) && !event.target.closest(\".code-button\") // Use closest for better detection\n      ) {\n        // Start animation before hiding\n        setLanguageSelectorHiding(true);\n        setTimeout(() => {\n          setShowLanguageSelector(false);\n          setIsCodeOn(false);\n          setLanguageSelectorHiding(false);\n        }, 300);\n      }\n\n      // Close mention list if clicked outside\n      if (showMentionList && mentionListRef.current && !mentionListRef.current.contains(event.target) && event.target !== messageInputRef.current) {\n        setShowMentionList(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [showLanguageSelector, showMentionList]);\n\n  // NEW: Initial scroll to bottom on mount\n  useEffect(() => {\n    if (messagesContainerRef.current && !loading) {\n      setTimeout(() => {\n        var _messagesEndRef$curre2;\n        (_messagesEndRef$curre2 = messagesEndRef.current) === null || _messagesEndRef$curre2 === void 0 ? void 0 : _messagesEndRef$curre2.scrollIntoView({\n          behavior: \"auto\"\n        });\n        setIsAtBottom(true);\n      }, 100);\n    }\n  }, [loading]);\n\n  // IMPROVED: Only scroll when messages updated AND user is at bottom\n  useEffect(() => {\n    if (messagesUpdated && isAtBottom) {\n      var _messagesEndRef$curre3;\n      (_messagesEndRef$curre3 = messagesEndRef.current) === null || _messagesEndRef$curre3 === void 0 ? void 0 : _messagesEndRef$curre3.scrollIntoView({\n        behavior: \"smooth\"\n      });\n      setMessagesUpdated(false);\n    }\n  }, [messagesUpdated, isAtBottom]);\n\n  // Update last activity when sending messages or switching rooms\n  useEffect(() => {\n    // Update last activity timestamp for this room\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n    const updatedRooms = userRooms.map(room => {\n      if (room.roomId === roomId) {\n        return {\n          ...room,\n          lastActivity: new Date().toISOString()\n        };\n      }\n      return room;\n    });\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\n  }, [roomId]);\n\n  // Handle tagging a message\n  const handleTagMessage = message => {\n    setTaggedMessage(message);\n  };\n\n  // Clear the tagged message\n  const clearTaggedMessage = () => {\n    setTaggedMessageHiding(true);\n    setTimeout(() => {\n      setTaggedMessage(null);\n      setTaggedMessageHiding(false);\n    }, 300); // Match the animation duration\n  };\n  const sendMessage = e => {\n    var _fileInputRef$current, _fileInputRef$current2, _fileInputRef$current3, _fileInputRef$current4;\n    e.preventDefault();\n    if (!messageInput.trim() && !((_fileInputRef$current = fileInputRef.current) !== null && _fileInputRef$current !== void 0 && (_fileInputRef$current2 = _fileInputRef$current.files) !== null && _fileInputRef$current2 !== void 0 && _fileInputRef$current2.length)) return;\n    const newMessage = {\n      text: messageInput,\n      sender: user.username,\n      senderName: user.username,\n      color: user.color,\n      timestamp: new Date().toISOString(),\n      attachment: (_fileInputRef$current3 = fileInputRef.current) !== null && _fileInputRef$current3 !== void 0 && (_fileInputRef$current4 = _fileInputRef$current3.files) !== null && _fileInputRef$current4 !== void 0 && _fileInputRef$current4.length ? fileInputRef.current.files[0].name : null,\n      replyTo: taggedMessage ? {\n        id: taggedMessage.id || new Date(taggedMessage.timestamp).getTime(),\n        text: taggedMessage.text,\n        sender: taggedMessage.sender\n      } : null,\n      // Add code-related properties if code mode is on\n      isCode: isCodeOn,\n      language: isCodeOn ? selectedLanguage : null\n    };\n\n    // Add message to localStorage\n    const allMessages = JSON.parse(localStorage.getItem(\"chatMessages\") || \"{}\");\n    const roomMessages = allMessages[roomId] || [];\n    roomMessages.push(newMessage);\n    allMessages[roomId] = roomMessages;\n    localStorage.setItem(\"chatMessages\", JSON.stringify(allMessages));\n\n    // Update last activity for this room\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n    const updatedRooms = userRooms.map(room => {\n      if (room.roomId === roomId) {\n        return {\n          ...room,\n          lastActivity: new Date().toISOString()\n        };\n      }\n      return room;\n    });\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\n\n    // Update state\n    setMessages([...messages, newMessage]);\n    prevMessagesLengthRef.current = messages.length + 1;\n    setMessageInput(\"\");\n\n    // Clear tagged message *after* the message is sent\n    setTaggedMessage(null);\n\n    // Clear any file selections\n    if (fileInputRef.current) fileInputRef.current.value = \"\";\n\n    // Hide emoji picker and reset button states\n    setShowEmojiPicker(false);\n    setIsEmojiOn(false);\n    setIsCodeOn(false);\n    setShowLanguageSelector(false);\n\n    // Ensure we scroll to bottom after sending a message\n    setIsAtBottom(true);\n    setTimeout(() => {\n      var _messagesEndRef$curre4;\n      (_messagesEndRef$curre4 = messagesEndRef.current) === null || _messagesEndRef$curre4 === void 0 ? void 0 : _messagesEndRef$curre4.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }, 100);\n  };\n\n  // Updated handle input change to detect mentions\n  const handleInputChange = e => {\n    const newValue = e.target.value;\n\n    // Special check for @ removal - explicitly handle this case\n    if (messageInput.includes(\"@\") && !newValue.includes(\"@\")) {\n      setShowMentionList(false);\n    }\n    setMessageInput(newValue);\n\n    // Check for mention context\n    if (!isCodeOn) {\n      // Don't process mentions in code mode\n      handleMentionDetection(newValue, e.target.selectionStart);\n    } else {\n      setShowMentionList(false);\n    }\n  };\n\n  // Handle keydown in the message input - modified for textarea\n  const handleKeyDown = e => {\n    // Handle mention list navigation with arrow keys\n    if (showMentionList && filteredParticipants.length > 0) {\n      if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\n        e.preventDefault();\n        // Could implement selected index logic here if needed\n        return;\n      }\n      if (e.key === \"Enter\" || e.key === \"Tab\") {\n        e.preventDefault();\n        // Select the first (or currently selected) user from the filtered list\n        handleSelectMention(filteredParticipants[0].username);\n        return;\n      }\n      if (e.key === \"Escape\") {\n        e.preventDefault();\n        setShowMentionList(false);\n        return;\n      }\n    }\n\n    // Send message on Enter without shift key\n    if (e.key === \"Enter\" && !e.shiftKey && !showMentionList) {\n      e.preventDefault();\n      sendMessage(new Event(\"submit\"));\n    }\n    // Allow new line with Shift+Enter (default behavior)\n  };\n  const handleAttachmentClick = () => {\n    setIsAttachmentOn(true);\n    fileInputRef.current.click();\n    // Reset when file is selected or dialog is closed\n    setTimeout(() => setIsAttachmentOn(false), 500);\n  };\n  const handleFileSelected = e => {\n    if (e.target.files.length > 0) {\n      // For a real application, you would upload the file to a server here\n      // For this demo, we'll just add the filename to the message\n      const file = e.target.files[0];\n      const formData = new FormData();\n      formData.append(\"attachment\", file);\n\n      // Create a message with the file attachment\n      const newMessage = {\n        text: `Shared file: ${file.name}`,\n        sender: user.username,\n        senderName: user.username,\n        color: user.color,\n        // Include user's color\n        timestamp: new Date().toISOString(),\n        attachment: file.name,\n        replyTo: taggedMessage ? {\n          id: taggedMessage.id || new Date(taggedMessage.timestamp).getTime(),\n          text: taggedMessage.text,\n          sender: taggedMessage.sender\n        } : null\n      };\n\n      // Add message to localStorage\n      const allMessages = JSON.parse(localStorage.getItem(\"chatMessages\") || \"{}\");\n      const roomMessages = allMessages[roomId] || [];\n      roomMessages.push(newMessage);\n      allMessages[roomId] = roomMessages;\n      localStorage.setItem(\"chatMessages\", JSON.stringify(allMessages));\n\n      // Update state\n      setMessages([...messages, newMessage]);\n      prevMessagesLengthRef.current = messages.length + 1;\n\n      // Clear tagged message\n      setTaggedMessage(null);\n\n      // Clear the file input\n      fileInputRef.current.value = \"\";\n\n      // Ensure we scroll to bottom after sending a file\n      setIsAtBottom(true);\n      setTimeout(() => {\n        var _messagesEndRef$curre5;\n        (_messagesEndRef$curre5 = messagesEndRef.current) === null || _messagesEndRef$curre5 === void 0 ? void 0 : _messagesEndRef$curre5.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }, 100);\n    }\n  };\n  const handleEmojiClick = e => {\n    // Add event parameter\n    e.stopPropagation();\n    if (showEmojiPicker) {\n      // Start exit animation\n      setEmojiPickerHiding(true);\n      setTimeout(() => {\n        setShowEmojiPicker(false);\n        setIsEmojiOn(false);\n        setEmojiPickerHiding(false);\n      }, 300); // Increased to ensure animation completes\n    } else {\n      setShowEmojiPicker(true);\n      setIsEmojiOn(true);\n      // Close other trays\n      setShowLanguageSelector(false);\n      setShowMentionList(false);\n    }\n  };\n  const insertEmoji = emoji => {\n    setMessageInput(prevInput => prevInput + emoji);\n    // Don't close immediately to allow multiple emoji selection\n    if (messageInputRef.current) {\n      messageInputRef.current.focus();\n    }\n  };\n  const handleCodeClick = e => {\n    // Add event parameter and stop propagation\n    e.stopPropagation();\n    if (showLanguageSelector) {\n      // Start exit animation\n      setLanguageSelectorHiding(true);\n      setTimeout(() => {\n        setShowLanguageSelector(false);\n        setIsCodeOn(false);\n        setLanguageSelectorHiding(false);\n      }, 300); // Match the animation duration\n    } else {\n      setShowLanguageSelector(true);\n      setIsCodeOn(true);\n      // Close other trays\n      setShowEmojiPicker(false);\n      setIsEmojiOn(false);\n      setShowMentionList(false);\n    }\n  };\n\n  // Function to leave room from the sidebar\n  const handleLeaveRoomFromSidebar = roomIdToLeave => {\n    // Remove user from participants in the room to leave\n    const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n    const roomToLeave = rooms[roomIdToLeave];\n    if (roomToLeave) {\n      roomToLeave.participants = roomToLeave.participants.filter(p => p.username !== user.username);\n      rooms[roomIdToLeave] = roomToLeave;\n      localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\n    }\n\n    // Get all joined rooms\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n\n    // Remove the room from joined rooms\n    const updatedRooms = userRooms.filter(room => room.roomId !== roomIdToLeave);\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\n\n    // Update state to reflect changes\n    setJoinedRooms(updatedRooms);\n\n    // If the user is currently in the room they're leaving, navigate to another room\n    if (roomIdToLeave === roomId) {\n      // Find the next available room\n      if (updatedRooms.length > 0) {\n        const nextRoom = updatedRooms[0];\n\n        // Update active user info\n        localStorage.setItem(\"chatUser\", JSON.stringify({\n          ...user,\n          roomId: nextRoom.roomId,\n          joinedAt: new Date().toISOString()\n        }));\n\n        // Navigate to next room\n        navigate(`/room/${nextRoom.roomId}`);\n      } else {\n        // No rooms left, go to home\n        navigate(\"/\");\n      }\n    }\n  };\n  const leaveRoom = () => {\n    // Remove user from participants\n    const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n    const room = rooms[roomId];\n    if (room) {\n      room.participants = room.participants.filter(p => p.username !== user.username);\n      rooms[roomId] = room;\n      localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\n    }\n\n    // Get all joined rooms BEFORE removing the current one\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n\n    // Find the current room to see its position\n    const currentRoomIndex = userRooms.findIndex(room => room.roomId === roomId);\n\n    // Get a copy of the rooms without the current one\n    const updatedRooms = userRooms.filter(room => room.roomId !== roomId);\n\n    // Save the updated rooms list to localStorage\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\n\n    // Check if we have any rooms left to navigate to\n    if (updatedRooms.length > 0) {\n      console.log(\"Found other rooms, switching...\");\n\n      // Try to stay at the same index if possible, otherwise take the last room\n      const nextIndex = Math.min(currentRoomIndex, updatedRooms.length - 1);\n      const nextRoom = updatedRooms[nextIndex];\n\n      // Set the active user's roomId to the next room\n      localStorage.setItem(\"chatUser\", JSON.stringify({\n        ...user,\n        roomId: nextRoom.roomId,\n        joinedAt: new Date().toISOString()\n      }));\n\n      // Update last activity timestamp for the next room\n      const roomsWithUpdatedActivity = updatedRooms.map(room => {\n        if (room.roomId === nextRoom.roomId) {\n          return {\n            ...room,\n            lastActivity: new Date().toISOString()\n          };\n        }\n        return room;\n      });\n      localStorage.setItem(\"joinedRooms\", JSON.stringify(roomsWithUpdatedActivity));\n\n      // Use window.location instead of navigate for a guaranteed page change\n      navigate(`/room/${nextRoom.roomId}`);\n      return; // Exit function early to prevent navigate(\"/\") from executing\n    }\n\n    // Only reach here if no rooms are left\n    console.log(\"No rooms left, going to home page\");\n    navigate(\"/\");\n  };\n  const switchRoom = newRoomId => {\n    // Update active user info\n    localStorage.setItem(\"chatUser\", JSON.stringify({\n      ...user,\n      roomId: newRoomId\n    }));\n\n    // Reset unread count for this room\n    setUnreadCounts(prev => ({\n      ...prev,\n      [newRoomId]: 0\n    }));\n\n    // Update last activity for the new room\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n    const updatedRooms = userRooms.map(room => {\n      if (room.roomId === newRoomId) {\n        return {\n          ...room,\n          lastActivity: new Date().toISOString()\n        };\n      }\n      return room;\n    });\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\n\n    // Clear tagged message when switching rooms\n    setTaggedMessage(null);\n\n    // Navigate to new room\n    navigate(`/room/${newRoomId}`);\n  };\n  const goToHome = () => {\n    navigate(\"/\");\n  };\n  const copyRoomLink = () => {\n    const roomLink = `${window.location.origin}/room/${roomId}`;\n    navigator.clipboard.writeText(roomLink).then(() => {\n      alert(\"Room link copied to clipboard!\");\n    }).catch(err => {\n      console.error(\"Failed to copy room link:\", err);\n    });\n  };\n\n  // UPDATED: Simplified toggleParticipants function\n  const toggleParticipants = (roomId, e) => {\n    e.stopPropagation();\n\n    // Simply toggle the expanded state\n    setExpandedRooms(prev => ({\n      ...prev,\n      [roomId]: !prev[roomId]\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading chat room...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1284,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1289,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Generate palette based on room color\n  const roomPalette = roomInfo !== null && roomInfo !== void 0 && roomInfo.color ? generateRoomPalette(roomInfo.color) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-room-button\",\n          onClick: goToHome,\n          title: \"Join or Create Room\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"14\",\n            height: \"14\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"3\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"12\",\n              y1: \"5\",\n              x2: \"12\",\n              y2: \"19\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"5\",\n              y1: \"12\",\n              x2: \"19\",\n              y2: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rooms-sidebar\",\n        children: joinedRooms.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-rooms-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No rooms joined yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: goToHome,\n            className: \"join-room-btn\",\n            children: \"Join a Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1331,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"rooms-list-sidebar\",\n          ref: roomsListRef,\n          children: joinedRooms.slice().sort((a, b) => {\n            const indexA = roomOrder.indexOf(a.roomId);\n            const indexB = roomOrder.indexOf(b.roomId);\n            return indexA - indexB;\n          }).map((room, index) => {\n            var _rooms$room$roomId, _rooms$room$roomId2, _allRoomsParticipants, _allRoomsParticipants2, _allRoomsParticipants3;\n            // Get room data including color\n            const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: `room-item-sidebar ${room.roomId === roomId ? \"active\" : \"\"} ${draggedRoom === room.roomId ? \"dragging\" : \"\"} ${dragOverRoom === room.roomId ? \"drag-over\" : \"\"} ${dragDirection === \"up\" ? \"shift-up\" : \"\"} ${dragDirection === \"down\" ? \"shift-down\" : \"\"}`,\n                draggable: \"true\",\n                onDragStart: e => handleDragStart(e, room.roomId, index),\n                onDragOver: e => handleDragOver(e, room.roomId, index),\n                onDrop: e => handleDrop(e, room.roomId),\n                onDragEnd: handleDragEnd,\n                style: {\n                  transition: draggedRoom ? \"transform 0.3s ease, opacity 0.3s ease\" : \"none\",\n                  zIndex: draggedRoom === room.roomId ? \"10\" : \"1\",\n                  position: \"relative\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"room-item-content\",\n                  onClick: () => switchRoom(room.roomId),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"room-item-avatar\",\n                    style: {\n                      backgroundColor: ((_rooms$room$roomId = rooms[room.roomId]) === null || _rooms$room$roomId === void 0 ? void 0 : _rooms$room$roomId.color) || \"var(--primary-color)\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"unread-count\",\n                      style: {\n                        color: getContrastingColor(((_rooms$room$roomId2 = rooms[room.roomId]) === null || _rooms$room$roomId2 === void 0 ? void 0 : _rooms$room$roomId2.color) || \"var(--primary-color)\")\n                      },\n                      children: unreadCounts[room.roomId] > 99 ? \"99+\" : unreadCounts[room.roomId] || 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1390,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1382,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"room-item-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"room-item-name\",\n                      children: [\"Room #\", room.roomId, room.isPrivate && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"private-badge mini\",\n                        children: \"P\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1408,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1405,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"room-item-info\",\n                      children: [((_allRoomsParticipants = allRoomsParticipants[room.roomId]) === null || _allRoomsParticipants === void 0 ? void 0 : _allRoomsParticipants.length) || 0, \" \", \"users\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1411,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1404,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1378,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `toggle-users-btn ${expandedRooms[room.roomId] ? \"active\" : \"\"}`,\n                  onClick: e => toggleParticipants(room.roomId, e),\n                  title: expandedRooms[room.roomId] ? \"Hide users\" : \"Show users\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"users-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1429,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1418,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"leave-room-btn\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleLeaveRoomFromSidebar(room.roomId);\n                  },\n                  title: \"Leave Room\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"14\",\n                    height: \"14\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"3\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"18\",\n                      y1: \"6\",\n                      x2: \"6\",\n                      y2: \"18\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1452,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"6\",\n                      y1: \"6\",\n                      x2: \"18\",\n                      y2: \"18\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1453,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1441,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1433,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1353,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `participants-panel ${expandedRooms[room.roomId] ? \"active\" : \"\"}`,\n                ref: el => participantRefs.current[room.roomId] = el,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"participants-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"Participants (\", ((_allRoomsParticipants2 = allRoomsParticipants[room.roomId]) === null || _allRoomsParticipants2 === void 0 ? void 0 : _allRoomsParticipants2.length) || 0, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1469,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"close-participants\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      toggleParticipants(room.roomId, e);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      width: \"12\",\n                      height: \"12\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                        x1: \"18\",\n                        y1: \"6\",\n                        x2: \"6\",\n                        y2: \"18\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1491,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                        x1: \"6\",\n                        y1: \"6\",\n                        x2: \"18\",\n                        y2: \"18\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1492,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1480,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1473,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1468,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"participants-list\",\n                  children: (_allRoomsParticipants3 = allRoomsParticipants[room.roomId]) === null || _allRoomsParticipants3 === void 0 ? void 0 : _allRoomsParticipants3.map((participant, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: `participant-item ${participant.username === user.username ? \"current-user\" : \"\"}`,\n                    style: {\n                      \"--item-index\": index\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"participant-avatar\",\n                      style: {\n                        backgroundColor: participant.avatar ? \"transparent\" : participant.color || \"var(--accent-color)\"\n                      },\n                      children: participant.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `${participant.avatar}${participant.avatar.includes(\"?\") ? \"&\" : \"?\"}v=${avatarVersion}`,\n                        alt: participant.username,\n                        className: \"participant-avatar-img\",\n                        onError: e => {\n                          e.target.style.display = \"none\";\n                          // Show fallback first letter avatar\n                          const parent = e.target.parentNode;\n                          if (!parent.querySelector(\".participant-avatar-fallback\")) {\n                            const fallback = document.createElement(\"div\");\n                            fallback.className = \"participant-avatar-fallback\";\n                            fallback.innerText = participant.username.charAt(0).toUpperCase();\n                            parent.appendChild(fallback);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1518,\n                        columnNumber: 37\n                      }, this) : participant.username.charAt(0).toUpperCase()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1508,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"participant-name\",\n                      style: {\n                        color: participant.color || \"rgba(255, 255, 255, 0.9)\"\n                      },\n                      children: [participant.username, \" \", participant.username === user.username ? \"(You)\" : \"\", participant.isCreator && \" (Creator)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1551,\n                      columnNumber: 33\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1499,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1496,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1460,\n                columnNumber: 23\n              }, this)]\n            }, room.roomId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1352,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1338,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-footer\",\n        ref: userMenuRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          onMouseEnter: () => setUserDropupOpen(true),\n          onMouseLeave: () => setUserDropupOpen(false),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"user-menu-button\",\n            onClick: () => setUserDropupOpen(!userDropupOpen),\n            children: isAuthenticated && authUser !== null && authUser !== void 0 && authUser.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: authUser.avatar,\n              alt: \"Profile\",\n              className: \"user-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1588,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              style: {\n                backgroundColor: (user === null || user === void 0 ? void 0 : user.color) || \"var(--accent-color)\"\n              },\n              children: user === null || user === void 0 ? void 0 : user.username.charAt(0).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1594,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-name\",\n            style: {\n              color: (user === null || user === void 0 ? void 0 : user.color) || \"rgba(255, 255, 255, 0.9)\"\n            },\n            children: isAuthenticated ? (authUser === null || authUser === void 0 ? void 0 : authUser.name) || (user === null || user === void 0 ? void 0 : user.username) : user === null || user === void 0 ? void 0 : user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1605,\n            columnNumber: 13\n          }, this), userDropupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar-dropup-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebar-user-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-name\",\n                children: isAuthenticated ? authUser === null || authUser === void 0 ? void 0 : authUser.name : user === null || user === void 0 ? void 0 : user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1617,\n                columnNumber: 19\n              }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-email\",\n                children: authUser === null || authUser === void 0 ? void 0 : authUser.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1621,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1616,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/profile\",\n              className: \"sidebar-menu-item\",\n              onClick: () => setUserDropupOpen(false),\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1641,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"7\",\n                  r: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1642,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1630,\n                columnNumber: 19\n              }, this), \"Profile\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sidebar-menu-item logout\",\n              onClick: handleMenuLogout,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1662,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"16 17 21 12 16 7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1663,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"12\",\n                  x2: \"9\",\n                  y2: \"12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1664,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1651,\n                columnNumber: 19\n              }, this), \"Log Out\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1647,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1615,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1578,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1577,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      style: roomPalette ? {\n        \"--room-base-color\": roomPalette.baseColor,\n        \"--room-lighter-color\": roomPalette.lighterShade,\n        \"--room-darker-color\": roomPalette.darkerShade,\n        \"--room-mid-color\": roomPalette.midShade,\n        background: roomPalette.lighterShade\n      } : {},\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Room #\", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1690,\n            columnNumber: 13\n          }, this), (roomInfo === null || roomInfo === void 0 ? void 0 : roomInfo.isPrivate) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"private-badge\",\n            children: \"Private\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1692,\n            columnNumber: 15\n          }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `save-room-button ${isRoomSaved ? \"saved\" : \"\"}`,\n            onClick: toggleSaveRoom,\n            title: isRoomSaved ? \"Unsave this room\" : \"Save this room\",\n            children: isRoomSaved ? /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"18\",\n              height: \"18\",\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1713,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1702,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"18\",\n              height: \"18\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1727,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1716,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1696,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1689,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"search-button\",\n              onClick: toggleSearch,\n              title: \"Search messages\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"18\",\n                height: \"18\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"11\",\n                  cy: \"11\",\n                  r: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1753,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"16.65\",\n                  y2: \"16.65\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1754,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1742,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1737,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: searchContainerRef,\n              className: `search-input-container ${isSearchOpen ? \"active\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"search-icon\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"11\",\n                  cy: \"11\",\n                  r: \"8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1775,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"16.65\",\n                  y2: \"16.65\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1776,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1763,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"search-input\",\n                placeholder: \"Search messages...\",\n                value: searchQuery,\n                onChange: handleSearch,\n                autoFocus: isSearchOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1779,\n                columnNumber: 17\n              }, this), searchQuery && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"search-counter\",\n                  children: searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"result-count\",\n                    children: [currentSearchResultIndex + 1, \" of\", \" \", searchResults.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1792,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"no-results\",\n                    children: \"No results\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1797,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1790,\n                  columnNumber: 21\n                }, this), searchResults.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"search-navigation\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"search-nav-button\",\n                    onClick: () => navigateSearchResults(\"prev\"),\n                    title: \"Previous result\",\n                    disabled: searchResults.length <= 1,\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      width: \"16\",\n                      height: \"16\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n                        points: \"18 15 12 9 6 15\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1820,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1809,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1803,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"search-nav-button\",\n                    onClick: () => navigateSearchResults(\"next\"),\n                    title: \"Next result\",\n                    disabled: searchResults.length <= 1,\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      width: \"16\",\n                      height: \"16\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      strokeWidth: \"2\",\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n                        points: \"6 9 12 15 18 9\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1840,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1829,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1823,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1802,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1757,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1736,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: copyRoomLink,\n            className: \"copy-button\",\n            children: \"Share Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1850,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: leaveRoom,\n            className: \"leave-button\",\n            children: \"Leave Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1853,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1734,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          style: {\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-list\",\n            ref: messagesContainerRef,\n            onScroll: handleScroll,\n            style: {\n              overflowAnchor: \"none\"\n            },\n            children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-messages\",\n              children: \"No messages yet. Start the conversation!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1870,\n              columnNumber: 17\n            }, this) : messages.map((message, index) => {\n              var _searchResults$curren, _searchResults$curren2;\n              return /*#__PURE__*/_jsxDEV(MessageItem, {\n                message: message,\n                isCurrentUser: message.sender === user.username,\n                onTagMessage: handleTagMessage,\n                isHovered: hoveredMessageId === (message.id || new Date(message.timestamp).getTime()),\n                isHighlighted: highlightedMessageIds.includes(message.id || new Date(message.timestamp).getTime()),\n                isActiveHighlight: searchResults.length > 0 && currentSearchResultIndex >= 0 && (message.id || new Date(message.timestamp).getTime()) === (((_searchResults$curren = searchResults[currentSearchResultIndex]) === null || _searchResults$curren === void 0 ? void 0 : _searchResults$curren.id) || new Date((_searchResults$curren2 = searchResults[currentSearchResultIndex]) === null || _searchResults$curren2 === void 0 ? void 0 : _searchResults$curren2.timestamp).getTime()),\n                onMouseEnter: id => setHoveredMessageId(id),\n                onMouseLeave: () => setHoveredMessageId(null),\n                roomColor: roomInfo === null || roomInfo === void 0 ? void 0 : roomInfo.color\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1875,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1902,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1863,\n            columnNumber: 13\n          }, this), showScrollButton && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `scroll-down-button ${scrollButtonHiding ? \"hiding\" : \"\"}`,\n            onClick: scrollToBottom,\n            title: \"Scroll to latest messages\",\n            style: {\n              backgroundColor: (roomPalette === null || roomPalette === void 0 ? void 0 : roomPalette.baseColor) || \"var(--primary-color)\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"white\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"6 9 12 15 18 9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1928,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1917,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1906,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: sendMessage,\n            className: \"message-form\",\n            children: [taggedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `tagged-message-preview ${taggedMessageHiding ? \"hiding\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tagged-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"16\",\n                  height: \"16\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                    points: \"9 14 4 9 9 4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1952,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M20 20v-7a4 4 0 0 0-4-4H4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1953,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1941,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [taggedMessage.sender, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1956,\n                    columnNumber: 23\n                  }, this), \" \", taggedMessage.text.substring(0, 7) + \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1955,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1940,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-tag\",\n                onClick: clearTaggedMessage,\n                title: \"Cancel reply\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"16\",\n                  height: \"16\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"18\",\n                    y1: \"6\",\n                    x2: \"6\",\n                    y2: \"18\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1976,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"6\",\n                    y1: \"6\",\n                    x2: \"18\",\n                    y2: \"18\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1977,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1965,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1960,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1935,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-tools\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `tool-button attachment-button ${isAttachmentOn ? \"active\" : \"\"}`,\n                onClick: handleAttachmentClick,\n                title: \"Attach File\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"20\",\n                  height: \"20\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M21.44 11.05l-9.19 9.19a6 6 0 01-8.49-8.49l9.19-9.19a4 4 0 015.66 5.66l-9.2 9.19a2 2 0 01-2.83-2.83l8.49-8.48\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2003,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1992,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1984,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `tool-button emoji-button ${isEmojiOn ? \"active\" : \"\"}`,\n                onClick: handleEmojiClick,\n                title: \"Insert Emoji\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"emoji-button-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"20\",\n                    height: \"20\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    pointerEvents: \"none\" /* This prevents the SVG from capturing clicks */,\n                    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                      cx: \"12\",\n                      cy: \"12\",\n                      r: \"10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2028,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M8 14s1.5 2 4 2 4-2 4-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2029,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"9\",\n                      y1: \"9\",\n                      x2: \"9.01\",\n                      y2: \"9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2030,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"15\",\n                      y1: \"9\",\n                      x2: \"15.01\",\n                      y2: \"9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2031,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2016,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2015,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2007,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `tool-button code-button ${isCodeOn ? \"active\" : \"\"}`,\n                onClick: handleCodeClick,\n                title: \"Insert Code\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"code-button-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"20\",\n                    height: \"20\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    pointerEvents: \"none\" // Prevent SVG from capturing clicks\n                    ,\n                    children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                      points: \"16 18 22 12 16 6\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2057,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                      points: \"8 6 2 12 8 18\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2058,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2045,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2044,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2036,\n                columnNumber: 17\n              }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `emoji-picker ${emojiPickerHiding ? \"hiding\" : \"\"}`,\n                ref: emojiPickerRef,\n                children: commonEmojis.map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"emoji-item\",\n                  onClick: () => insertEmoji(emoji),\n                  children: emoji\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2072,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2065,\n                columnNumber: 19\n              }, this), showLanguageSelector && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `language-selector ${languageSelectorHiding ? \"hiding\" : \"\"}`,\n                ref: languageSelectorRef,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"language-dropdown\",\n                  children: codeLanguages.map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: `language-option ${selectedLanguage === lang.id ? \"selected\" : \"\"}`,\n                    onClick: () => handleLanguageSelect(lang.id),\n                    children: lang.name\n                  }, lang.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2094,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2092,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2086,\n                columnNumber: 19\n              }, this), showMentionList && filteredParticipants.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mention-list\",\n                ref: mentionListRef,\n                children: filteredParticipants.map(participant => /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"mention-item\",\n                  onClick: () => handleSelectMention(participant.username),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mention-avatar\",\n                    style: {\n                      backgroundColor: participant.color || \"var(--accent-color)\"\n                    },\n                    children: participant.username.charAt(0).toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2121,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mention-name\",\n                    children: participant.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2130,\n                    columnNumber: 25\n                  }, this)]\n                }, participant.username, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2113,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                ref: fileInputRef,\n                style: {\n                  display: \"none\"\n                },\n                onChange: handleFileSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1983,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-input-container ${isCodeOn ? \"code-mode\" : \"\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: messageInputRef,\n                value: messageInput,\n                onChange: handleInputChange,\n                onKeyDown: handleKeyDown,\n                placeholder: isCodeOn ? \"Type or paste code here...\" : \"Type a message... (use @ to mention)\",\n                className: `message-input ${isCodeOn ? \"code-input\" : \"\"}`,\n                rows: \"1\",\n                style: {\n                  overflowY: \"hidden\",\n                  backgroundColor: isCodeOn ? \"#282a36\" : \"\",\n                  color: isCodeOn ? \"white\" : \"\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"send-button\",\n              style: {\n                backgroundColor: (roomPalette === null || roomPalette === void 0 ? void 0 : roomPalette.baseColor) || \"var(--primary-color)\"\n              },\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1932,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1860,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1859,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1674,\n      columnNumber: 7\n    }, this), showLoginPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-prompt-overlay\",\n      onClick: () => setShowLoginPrompt(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-prompt-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Save your favorite rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sign up or log in to save rooms and access them easily from your profile.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-prompt-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            className: \"prompt-button register\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"prompt-button login\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prompt-button cancel\",\n            onClick: () => setShowLoginPrompt(false),\n            children: \"Not Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2194,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1303,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoom, \"bovVVeZUnzJUFEz9LKS04aQSnKY=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","useNavigate","Link","MessageItem","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatRoom","_s","roomId","navigate","isAuthenticated","user","authUser","logout","avatarVersion","setUser","messages","setMessages","messageInput","setMessageInput","participants","setParticipants","roomInfo","setRoomInfo","joinedRooms","setJoinedRooms","expandedRooms","setExpandedRooms","loading","setLoading","error","setError","allRoomsParticipants","setAllRoomsParticipants","showEmojiPicker","setShowEmojiPicker","hoveredMessageId","setHoveredMessageId","taggedMessage","setTaggedMessage","isAttachmentOn","setIsAttachmentOn","isEmojiOn","setIsEmojiOn","isCodeOn","setIsCodeOn","isAtBottom","setIsAtBottom","showScrollButton","setShowScrollButton","messagesUpdated","setMessagesUpdated","draggedRoom","setDraggedRoom","dragOverRoom","setDragOverRoom","draggedItemRect","setDraggedItemRect","roomOrder","setRoomOrder","dragStartIndex","setDragStartIndex","dragDirection","setDragDirection","showLanguageSelector","setShowLanguageSelector","selectedLanguage","setSelectedLanguage","showMentionList","setShowMentionList","mentionFilter","setMentionFilter","mentionStartPosition","setMentionStartPosition","filteredParticipants","setFilteredParticipants","unreadCounts","setUnreadCounts","isRoomSaved","setIsRoomSaved","showLoginPrompt","setShowLoginPrompt","userDropupOpen","setUserDropupOpen","highlightedMessageIds","setHighlightedMessageIds","currentSearchResultIndex","setCurrentSearchResultIndex","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearchOpen","setIsSearchOpen","scrollButtonHiding","setScrollButtonHiding","emojiPickerHiding","setEmojiPickerHiding","languageSelectorHiding","setLanguageSelectorHiding","taggedMessageHiding","setTaggedMessageHiding","messagesEndRef","messagesContainerRef","participantRefs","fileInputRef","emojiPickerRef","messageInputRef","languageSelectorRef","mentionListRef","prevMessagesLengthRef","prevMessageCountsRef","userMenuRef","searchContainerRef","roomsListRef","codeLanguages","id","name","commonEmojis","length","map","room","toggleSearch","prevIsOpen","handleClickOutside","event","current","contains","target","closest","document","addEventListener","removeEventListener","handleSearch","e","query","value","trim","results","filter","message","text","toLowerCase","includes","matchingIds","Date","timestamp","getTime","scrollToMessage","navigateSearchResults","direction","newIndex","messageId","setTimeout","messageElements","querySelectorAll","matchIndex","findIndex","m","scrollIntoView","behavior","block","savedRooms","JSON","parse","localStorage","getItem","roomExists","some","handleMenuLogout","toggleSaveRoom","updatedRooms","setItem","stringify","newRoom","lastActive","toISOString","getContrastingColor","backgroundColor","startsWith","hex","replace","rgb","parseInt","substr","luminance","adjustTextareaHeight","textarea","style","height","newHeight","scrollHeight","overflowY","handleScroll","scrollTop","clientHeight","atBottom","scrollToBottom","_messagesEndRef$curre","generateRandomColor","Math","floor","random","toString","padStart","generateRoomPalette","baseColor","r","slice","g","b","lighterShade","darkerShade","midShade","handleDragStart","index","rect","currentTarget","getBoundingClientRect","ghost","cloneNode","position","top","opacity","body","appendChild","dataTransfer","setDragImage","removeChild","setData","classList","add","handleDragOver","preventDefault","newDirection","currentItems","draggedIndex","indexOf","splice","handleDrop","targetRoomId","sourceRoomId","getData","newRooms","sort","a","indexA","indexB","handleDragEnd","remove","originalOrder","messagePollingRef","handleMentionDetection","cursorPosition","textToCursor","substring","mentionRegex","match","mentionStart","mentionText","filtered","participant","username","handleSelectMention","beforeMention","afterMention","selectionStart","newText","focus","newCursorPos","selectionEnd","handleLanguageSelect","langId","userData","parsedUser","color","userRooms","rooms","roomParticipantsMap","forEach","userRoom","currentRoom","allMessages","roomMessages","prevCounts","setInterval","updatedMessages","prevCount","prev","updatedRoom","updatedRoomParticipantsMap","updatedUserRooms","clearInterval","clickedInsideAnyPanel","clickedOnAnyToggleButton","Object","keys","ref","_messagesEndRef$curre2","_messagesEndRef$curre3","lastActivity","handleTagMessage","clearTaggedMessage","sendMessage","_fileInputRef$current","_fileInputRef$current2","_fileInputRef$current3","_fileInputRef$current4","files","newMessage","sender","senderName","attachment","replyTo","isCode","language","push","_messagesEndRef$curre4","handleInputChange","newValue","handleKeyDown","key","shiftKey","Event","handleAttachmentClick","click","handleFileSelected","file","formData","FormData","append","_messagesEndRef$curre5","handleEmojiClick","stopPropagation","insertEmoji","emoji","prevInput","handleCodeClick","handleLeaveRoomFromSidebar","roomIdToLeave","roomToLeave","p","nextRoom","joinedAt","leaveRoom","currentRoomIndex","console","log","nextIndex","min","roomsWithUpdatedActivity","switchRoom","newRoomId","goToHome","copyRoomLink","roomLink","window","location","origin","navigator","clipboard","writeText","then","alert","catch","err","toggleParticipants","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","roomPalette","title","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","_rooms$room$roomId","_rooms$room$roomId2","_allRoomsParticipants","_allRoomsParticipants2","_allRoomsParticipants3","draggable","onDragStart","onDragOver","onDrop","onDragEnd","transition","zIndex","isPrivate","el","avatar","src","alt","onError","display","parent","parentNode","querySelector","fallback","createElement","innerText","charAt","toUpperCase","isCreator","onMouseEnter","onMouseLeave","email","to","d","cx","cy","points","background","type","placeholder","onChange","autoFocus","disabled","onScroll","overflowAnchor","_searchResults$curren","_searchResults$curren2","isCurrentUser","onTagMessage","isHovered","isHighlighted","isActiveHighlight","roomColor","onSubmit","pointerEvents","lang","onKeyDown","rows","_c","$RefreshReg$"],"sources":["/Users/nikhilkumar/aws project/ChatRoom-/jellylemonshake/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport MessageItem from \"./MessageItem\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport \"../styles/components/ChatRoom.css\";\r\n\r\nfunction ChatRoom() {\r\n  const { roomId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated, user: authUser, logout, avatarVersion } = useAuth();\r\n\r\n  // [All state variables and refs remain the same]\r\n  const [user, setUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n  const [participants, setParticipants] = useState([]);\r\n  const [roomInfo, setRoomInfo] = useState(null);\r\n  const [joinedRooms, setJoinedRooms] = useState([]);\r\n  const [expandedRooms, setExpandedRooms] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [allRoomsParticipants, setAllRoomsParticipants] = useState({});\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [hoveredMessageId, setHoveredMessageId] = useState(null);\r\n  const [taggedMessage, setTaggedMessage] = useState(null);\r\n  const [isAttachmentOn, setIsAttachmentOn] = useState(false);\r\n  const [isEmojiOn, setIsEmojiOn] = useState(false);\r\n  const [isCodeOn, setIsCodeOn] = useState(false);\r\n  const [isAtBottom, setIsAtBottom] = useState(true);\r\n  const [showScrollButton, setShowScrollButton] = useState(false);\r\n  const [messagesUpdated, setMessagesUpdated] = useState(false);\r\n  // Drag and drop states\r\n  const [draggedRoom, setDraggedRoom] = useState(null);\r\n  const [dragOverRoom, setDragOverRoom] = useState(null);\r\n  // Enhanced drag and drop states for animations\r\n  const [draggedItemRect, setDraggedItemRect] = useState(null);\r\n  const [roomOrder, setRoomOrder] = useState([]);\r\n  const [dragStartIndex, setDragStartIndex] = useState(null);\r\n  const [dragDirection, setDragDirection] = useState(null);\r\n  // Code language states\r\n  const [showLanguageSelector, setShowLanguageSelector] = useState(false);\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"javascript\");\r\n  // Mention feature states\r\n  const [showMentionList, setShowMentionList] = useState(false);\r\n  const [mentionFilter, setMentionFilter] = useState(\"\");\r\n  const [mentionStartPosition, setMentionStartPosition] = useState(null);\r\n  const [filteredParticipants, setFilteredParticipants] = useState([]);\r\n  // New state for unread message counts\r\n  const [unreadCounts, setUnreadCounts] = useState({});\r\n  // Room saving states\r\n  const [isRoomSaved, setIsRoomSaved] = useState(false);\r\n  const [showLoginPrompt, setShowLoginPrompt] = useState(false);\r\n  // User dropup menu state\r\n  const [userDropupOpen, setUserDropupOpen] = useState(false);\r\n  // Search feature states\r\n  const [highlightedMessageIds, setHighlightedMessageIds] = useState([]);\r\n  const [currentSearchResultIndex, setCurrentSearchResultIndex] = useState(0);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  // Add this new state for scroll button animation\r\n  const [scrollButtonHiding, setScrollButtonHiding] = useState(false);\r\n  // Add these new states for animation controls\r\n  const [emojiPickerHiding, setEmojiPickerHiding] = useState(false);\r\n  const [languageSelectorHiding, setLanguageSelectorHiding] = useState(false);\r\n  const [taggedMessageHiding, setTaggedMessageHiding] = useState(false);\r\n\r\n  // [All refs and constant declarations remain the same]\r\n  const messagesEndRef = useRef(null);\r\n  const messagesContainerRef = useRef(null);\r\n  const participantRefs = useRef({});\r\n  const fileInputRef = useRef(null);\r\n  const emojiPickerRef = useRef(null);\r\n  const messageInputRef = useRef(null);\r\n  const languageSelectorRef = useRef(null);\r\n  const mentionListRef = useRef(null);\r\n  const prevMessagesLengthRef = useRef(0);\r\n  const prevMessageCountsRef = useRef({});\r\n  const userMenuRef = useRef(null);\r\n  const searchContainerRef = useRef(null);\r\n  const roomsListRef = useRef(null);\r\n  //const messagePollingRef = useRef(null);\r\n\r\n  // Supported coding languages\r\n  const codeLanguages = [\r\n    { id: \"javascript\", name: \"JavaScript\" },\r\n    { id: \"python\", name: \"Python\" },\r\n    { id: \"java\", name: \"Java\" },\r\n    { id: \"cpp\", name: \"C++\" },\r\n    { id: \"csharp\", name: \"C#\" },\r\n    { id: \"php\", name: \"PHP\" },\r\n    { id: \"ruby\", name: \"Ruby\" },\r\n    { id: \"swift\", name: \"Swift\" },\r\n    { id: \"go\", name: \"Go\" },\r\n    { id: \"typescript\", name: \"TypeScript\" },\r\n    { id: \"html\", name: \"HTML\" },\r\n    { id: \"css\", name: \"CSS\" },\r\n  ];\r\n\r\n  // Common emojis for the picker\r\n  const commonEmojis = [\r\n    \"😊\",\r\n    \"😂\",\r\n    \"❤️\",\r\n    \"👍\",\r\n    \"🎉\",\r\n    \"😎\",\r\n    \"😢\",\r\n    \"🤔\",\r\n    \"👋\",\r\n    \"🙏\",\r\n    \"🔥\",\r\n    \"✨\",\r\n    \"💯\",\r\n    \"🤣\",\r\n    \"😊\",\r\n    \"🥳\",\r\n    \"👏\",\r\n    \"💪\",\r\n    \"🤦‍♂️\",\r\n    \"🤷‍♀️\",\r\n  ];\r\n\r\n  // Update roomOrder when joinedRooms changes\r\n  useEffect(() => {\r\n    if (joinedRooms.length > 0) {\r\n      setRoomOrder(joinedRooms.map((room) => room.roomId));\r\n    }\r\n  }, [joinedRooms]);\r\n\r\n  // Search feature functions\r\n  const toggleSearch = useCallback(() => {\r\n    setIsSearchOpen((prevIsOpen) => {\r\n      if (prevIsOpen) {\r\n        // Clear search when closing\r\n        setSearchQuery(\"\");\r\n        setSearchResults([]);\r\n        setHighlightedMessageIds([]);\r\n      }\r\n      return !prevIsOpen;\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (\r\n        emojiPickerRef.current &&\r\n        !emojiPickerRef.current.contains(event.target) &&\r\n        !event.target.closest(\".emoji-button\") // Use closest instead of classList.contains\r\n      ) {\r\n        setShowEmojiPicker(false);\r\n        setIsEmojiOn(false);\r\n      }\r\n\r\n      if (\r\n        isSearchOpen &&\r\n        searchContainerRef.current &&\r\n        !searchContainerRef.current.contains(event.target) &&\r\n        !event.target.closest(\".search-button\")\r\n      ) {\r\n        toggleSearch();\r\n      }\r\n    }\r\n\r\n    if (isSearchOpen) {\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [isSearchOpen, toggleSearch]);\r\n\r\n  const handleSearch = (e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query);\r\n\r\n    if (query.trim()) {\r\n      const results = messages.filter((message) =>\r\n        message.text.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n      setSearchResults(results);\r\n\r\n      // Extract all matching message IDs\r\n      const matchingIds = results.map(\r\n        (message) => message.id || new Date(message.timestamp).getTime()\r\n      );\r\n      setHighlightedMessageIds(matchingIds);\r\n\r\n      // Reset to first result\r\n      setCurrentSearchResultIndex(0);\r\n\r\n      // If there are results, scroll to the first one\r\n      if (results.length > 0) {\r\n        scrollToMessage(results[0]);\r\n      }\r\n    } else {\r\n      setSearchResults([]);\r\n      setHighlightedMessageIds([]);\r\n    }\r\n  };\r\n\r\n  const navigateSearchResults = (direction) => {\r\n    if (searchResults.length <= 1) return;\r\n\r\n    let newIndex;\r\n    if (direction === \"next\") {\r\n      newIndex = (currentSearchResultIndex + 1) % searchResults.length;\r\n    } else {\r\n      newIndex =\r\n        (currentSearchResultIndex - 1 + searchResults.length) %\r\n        searchResults.length;\r\n    }\r\n\r\n    setCurrentSearchResultIndex(newIndex);\r\n    scrollToMessage(searchResults[newIndex]);\r\n  };\r\n\r\n  const scrollToMessage = (message) => {\r\n    const messageId = message.id || new Date(message.timestamp).getTime();\r\n\r\n    setTimeout(() => {\r\n      const messageElements =\r\n        messagesContainerRef.current.querySelectorAll(\".message-item\");\r\n      const matchIndex = messages.findIndex(\r\n        (m) => (m.id || new Date(m.timestamp).getTime()) === messageId\r\n      );\r\n\r\n      if (matchIndex >= 0 && messageElements[matchIndex]) {\r\n        messageElements[matchIndex].scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"center\",\r\n        });\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  // Check if room is saved for this user\r\n  useEffect(() => {\r\n    if (isAuthenticated && roomId) {\r\n      const savedRooms = JSON.parse(localStorage.getItem(\"savedRooms\") || \"[]\");\r\n      const roomExists = savedRooms.some((room) => room.id === roomId);\r\n      setIsRoomSaved(roomExists);\r\n    }\r\n  }, [isAuthenticated, roomId]);\r\n\r\n  // Handle clicks outside the user menu\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\r\n        setUserDropupOpen(false);\r\n      }\r\n    };\r\n\r\n    if (userDropupOpen) {\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [userDropupOpen]);\r\n\r\n  // User menu logout handler\r\n  const handleMenuLogout = () => {\r\n    logout();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  // Toggle room saving\r\n  const toggleSaveRoom = () => {\r\n    if (!isAuthenticated) {\r\n      setShowLoginPrompt(true);\r\n      return;\r\n    }\r\n\r\n    const savedRooms = JSON.parse(localStorage.getItem(\"savedRooms\") || \"[]\");\r\n\r\n    if (isRoomSaved) {\r\n      const updatedRooms = savedRooms.filter((room) => room.id !== roomId);\r\n      localStorage.setItem(\"savedRooms\", JSON.stringify(updatedRooms));\r\n      setIsRoomSaved(false);\r\n    } else {\r\n      const newRoom = {\r\n        id: roomId,\r\n        name: roomInfo?.name || `Room #${roomId}`,\r\n        lastActive: new Date().toISOString(),\r\n      };\r\n      localStorage.setItem(\r\n        \"savedRooms\",\r\n        JSON.stringify([...savedRooms, newRoom])\r\n      );\r\n      setIsRoomSaved(true);\r\n    }\r\n  };\r\n\r\n  // Function to get a contrasting text color based on background color\r\n  const getContrastingColor = (backgroundColor) => {\r\n    // Convert to hex if it's a CSS variable\r\n    if (backgroundColor.startsWith(\"var(\")) {\r\n      return \"#FFFFFF\"; // Default to white for CSS variables\r\n    }\r\n\r\n    // Remove # if present\r\n    const hex = backgroundColor.replace(/^#/, \"\");\r\n\r\n    // Handle shorthand hex\r\n    const rgb =\r\n      hex.length === 3\r\n        ? [\r\n            parseInt(hex[0] + hex[0], 16),\r\n            parseInt(hex[1] + hex[1], 16),\r\n            parseInt(hex[2] + hex[2], 16),\r\n          ]\r\n        : [\r\n            parseInt(hex.substr(0, 2), 16),\r\n            parseInt(hex.substr(2, 2), 16),\r\n            parseInt(hex.substr(4, 2), 16),\r\n          ];\r\n\r\n    // Calculate luminance - determines if color is light or dark\r\n    const luminance = (0.299 * rgb[0] + 0.587 * rgb[1] + 0.114 * rgb[2]) / 255;\r\n    return luminance > 0.5 ? \"#333333\" : \"#FFFFFF\";\r\n  };\r\n\r\n  // Updated function to adjust textarea height with scrollbar handling\r\n  const adjustTextareaHeight = () => {\r\n    const textarea = messageInputRef.current;\r\n    if (!textarea) return;\r\n\r\n    // Reset height to calculate proper scrollHeight\r\n    textarea.style.height = \"auto\";\r\n\r\n    // Set new height based on content\r\n    const newHeight = textarea.scrollHeight;\r\n    textarea.style.height = `${newHeight}px`;\r\n\r\n    // Only show scrollbar when content exceeds max-height (120px)\r\n    if (newHeight > 120) {\r\n      textarea.style.overflowY = \"auto\";\r\n    } else {\r\n      textarea.style.overflowY = \"hidden\";\r\n    }\r\n  };\r\n\r\n  // Auto-resize textarea when content changes\r\n  useEffect(() => {\r\n    adjustTextareaHeight();\r\n  }, [messageInput]);\r\n\r\n  // IMPROVED: Function to handle scroll events with better threshold\r\n  const handleScroll = () => {\r\n    if (!messagesContainerRef.current) return;\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } =\r\n      messagesContainerRef.current;\r\n\r\n    // Increase threshold to 100 pixels for more natural detection of \"at bottom\"\r\n    const atBottom = scrollHeight - scrollTop - clientHeight < 100;\r\n\r\n    setIsAtBottom(atBottom);\r\n    // Handle button visibility with animation\r\n    if (!atBottom && !showScrollButton) {\r\n      setShowScrollButton(true);\r\n      setScrollButtonHiding(false);\r\n    } else if (atBottom && showScrollButton) {\r\n      setScrollButtonHiding(true);\r\n      setTimeout(() => {\r\n        setShowScrollButton(false);\r\n        setScrollButtonHiding(false);\r\n      }, 300); // Duration of the hide animation\r\n    }\r\n  };\r\n\r\n  // Function to scroll to bottom manually\r\n  const scrollToBottom = () => {\r\n    setScrollButtonHiding(true);\r\n    setTimeout(() => {\r\n      setShowScrollButton(false);\r\n      setScrollButtonHiding(false);\r\n    }, 300);\r\n\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    setIsAtBottom(true);\r\n  };\r\n\r\n  // Function to generate random color\r\n  const generateRandomColor = () => {\r\n    return (\r\n      \"#\" +\r\n      Math.floor(Math.random() * 16777215)\r\n        .toString(16)\r\n        .padStart(6, \"0\")\r\n    );\r\n  };\r\n\r\n  // Function to generate room color palette\r\n  const generateRoomPalette = (baseColor) => {\r\n    // Convert hex to RGB\r\n    const r = parseInt(baseColor.slice(1, 3), 16);\r\n    const g = parseInt(baseColor.slice(3, 5), 16);\r\n    const b = parseInt(baseColor.slice(5, 7), 16);\r\n\r\n    // Generate a lighter shade for backgrounds\r\n    const lighterShade = `rgba(${r}, ${g}, ${b}, 0.1)`;\r\n\r\n    // Generate a darker shade for accents\r\n    const darkerShade = `rgba(${r}, ${g}, ${b}, 0.8)`;\r\n\r\n    // Generate a mid shade for borders\r\n    const midShade = `rgba(${r}, ${g}, ${b}, 0.5)`;\r\n\r\n    return {\r\n      baseColor,\r\n      lighterShade,\r\n      darkerShade,\r\n      midShade,\r\n    };\r\n  };\r\n\r\n  // Enhanced drag start function\r\n  const handleDragStart = (e, roomId, index) => {\r\n    // Store initial position for animation\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    setDraggedItemRect(rect);\r\n    setDragStartIndex(index);\r\n\r\n    // Create a ghost element for better dragging visuals\r\n    const ghost = e.currentTarget.cloneNode(true);\r\n    ghost.style.position = \"absolute\";\r\n    ghost.style.top = \"-1000px\";\r\n    ghost.style.opacity = \"0\";\r\n    document.body.appendChild(ghost);\r\n    e.dataTransfer.setDragImage(ghost, 0, 0);\r\n\r\n    // Clean up ghost element after drag starts\r\n    setTimeout(() => {\r\n      document.body.removeChild(ghost);\r\n    }, 0);\r\n\r\n    // Set data for drag operation\r\n    e.dataTransfer.setData(\"text/plain\", roomId);\r\n    e.currentTarget.classList.add(\"dragging\");\r\n    setDraggedRoom(roomId);\r\n  };\r\n\r\n  // Improved drag over handler with real-time reordering\r\n  const handleDragOver = (e, roomId, index) => {\r\n    e.preventDefault();\r\n\r\n    if (draggedRoom === roomId) return;\r\n\r\n    setDragOverRoom(roomId);\r\n\r\n    // Determine drag direction (up or down)\r\n    if (dragStartIndex !== null) {\r\n      const newDirection = index > dragStartIndex ? \"down\" : \"up\";\r\n      if (newDirection !== dragDirection) {\r\n        setDragDirection(newDirection);\r\n      }\r\n    }\r\n\r\n    // Preview new order immediately for animation\r\n    const currentItems = [...roomOrder];\r\n    const draggedIndex = currentItems.indexOf(draggedRoom);\r\n\r\n    if (draggedIndex !== -1 && draggedIndex !== index) {\r\n      // Remove from current position\r\n      currentItems.splice(draggedIndex, 1);\r\n      // Insert at new position\r\n      currentItems.splice(index, 0, draggedRoom);\r\n\r\n      // Update the preview order immediately for animation\r\n      setRoomOrder(currentItems);\r\n    }\r\n  };\r\n\r\n  // Enhanced drop handler\r\n  const handleDrop = (e, targetRoomId) => {\r\n    e.preventDefault();\r\n    const sourceRoomId = e.dataTransfer.getData(\"text/plain\");\r\n\r\n    // Use the current preview order to make the change permanent\r\n    const newRooms = joinedRooms.slice();\r\n    // Sort the rooms according to the new order\r\n    newRooms.sort((a, b) => {\r\n      const indexA = roomOrder.indexOf(a.roomId);\r\n      const indexB = roomOrder.indexOf(b.roomId);\r\n      return indexA - indexB;\r\n    });\r\n\r\n    // Update state and localStorage\r\n    setJoinedRooms(newRooms);\r\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(newRooms));\r\n\r\n    // Reset drag states\r\n    setDraggedRoom(null);\r\n    setDragOverRoom(null);\r\n    setDraggedItemRect(null);\r\n    setDragStartIndex(null);\r\n    setDragDirection(null);\r\n  };\r\n\r\n  // Improved drag end handler\r\n  const handleDragEnd = (e) => {\r\n    e.currentTarget.classList.remove(\"dragging\");\r\n\r\n    // Reset to original order if drag operation was canceled\r\n    if (draggedRoom) {\r\n      const originalOrder = joinedRooms.map((room) => room.roomId);\r\n      setRoomOrder(originalOrder);\r\n    }\r\n\r\n    // Reset all drag states\r\n    setDraggedRoom(null);\r\n    setDragOverRoom(null);\r\n    setDraggedItemRect(null);\r\n    setDragStartIndex(null);\r\n    setDragDirection(null);\r\n  };\r\n\r\n  // Mock message polling interval\r\n  const messagePollingRef = useRef(null);\r\n\r\n  // FIXED: Handle mention input detection\r\n  const handleMentionDetection = (text, cursorPosition) => {\r\n    // If there's no text or no @ in the text at all, hide the mention list\r\n    if (!text || !text.includes(\"@\")) {\r\n      setShowMentionList(false);\r\n      return;\r\n    }\r\n\r\n    // Get the text up to the cursor position\r\n    const textToCursor = text.substring(0, cursorPosition);\r\n\r\n    // Use regex to find an ongoing mention\r\n    // This matches @ preceded by start of text or whitespace,\r\n    // followed by any non-whitespace characters, up to the end of the string\r\n    const mentionRegex = /(^|\\s)@(\\S*)$/;\r\n    const match = textToCursor.match(mentionRegex);\r\n\r\n    if (!match) {\r\n      // No ongoing mention found at the cursor position\r\n      setShowMentionList(false);\r\n      return;\r\n    }\r\n\r\n    // We found an ongoing mention\r\n    const mentionStart = match.index + (match[1] || \"\").length; // Account for potential whitespace\r\n    const mentionText = match[2]; // Text after @ without the @ itself\r\n\r\n    setMentionStartPosition(mentionStart);\r\n    setMentionFilter(mentionText);\r\n\r\n    // Filter participants based on the mention text\r\n    const filtered = participants.filter((participant) =>\r\n      participant.username.toLowerCase().includes(mentionText.toLowerCase())\r\n    );\r\n\r\n    setFilteredParticipants(filtered);\r\n    setShowMentionList(filtered.length > 0);\r\n  };\r\n\r\n  // Handle selecting a user from mention list\r\n  const handleSelectMention = (username) => {\r\n    if (mentionStartPosition === null) return;\r\n\r\n    const beforeMention = messageInput.substring(0, mentionStartPosition);\r\n    const afterMention = messageInput.substring(\r\n      messageInputRef.current.selectionStart\r\n    );\r\n\r\n    // Insert the username with a space after it\r\n    const newText = `${beforeMention}@${username} ${afterMention}`;\r\n    setMessageInput(newText);\r\n\r\n    // Close mention list\r\n    setShowMentionList(false);\r\n\r\n    // Focus back on input and place cursor after the mention\r\n    setTimeout(() => {\r\n      if (messageInputRef.current) {\r\n        messageInputRef.current.focus();\r\n        const newCursorPos = mentionStartPosition + username.length + 2; // +2 for @ and space\r\n        messageInputRef.current.selectionStart = newCursorPos;\r\n        messageInputRef.current.selectionEnd = newCursorPos;\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  // Handle language selection for code formatting\r\n  const handleLanguageSelect = (langId) => {\r\n    setSelectedLanguage(langId);\r\n    setShowLanguageSelector(false);\r\n  };\r\n\r\n  // Initialize room data from localStorage\r\n  useEffect(() => {\r\n    const userData = localStorage.getItem(\"chatUser\");\r\n\r\n    if (!userData) {\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n\r\n    const parsedUser = JSON.parse(userData);\r\n\r\n    // Assign a random color to the user if they don't have one\r\n    if (!parsedUser.color) {\r\n      parsedUser.color = generateRandomColor();\r\n      localStorage.setItem(\"chatUser\", JSON.stringify(parsedUser));\r\n    }\r\n\r\n    if (parsedUser.roomId !== roomId) {\r\n      // Update the active room\r\n      localStorage.setItem(\r\n        \"chatUser\",\r\n        JSON.stringify({\r\n          ...parsedUser,\r\n          roomId,\r\n        })\r\n      );\r\n    }\r\n\r\n    setUser(parsedUser);\r\n\r\n    // Get all joined rooms\r\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n    setJoinedRooms(userRooms);\r\n\r\n    // Get room data from localStorage\r\n    const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\r\n    const room = rooms[roomId];\r\n\r\n    if (!room) {\r\n      setError(\"Room not found\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Assign a random color to the room if it doesn't have one\r\n    if (!room.color) {\r\n      room.color = generateRandomColor();\r\n      rooms[roomId] = room;\r\n      localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\r\n    }\r\n\r\n    setRoomInfo(room);\r\n    setParticipants(room.participants);\r\n\r\n    // Get participants for all rooms\r\n    const roomParticipantsMap = {};\r\n    userRooms.forEach((userRoom) => {\r\n      const currentRoom = rooms[userRoom.roomId];\r\n      if (currentRoom && currentRoom.participants) {\r\n        roomParticipantsMap[userRoom.roomId] = currentRoom.participants;\r\n      }\r\n    });\r\n    setAllRoomsParticipants(roomParticipantsMap);\r\n\r\n    // Get messages for this room\r\n    const allMessages = JSON.parse(\r\n      localStorage.getItem(\"chatMessages\") || \"{}\"\r\n    );\r\n    const roomMessages = allMessages[roomId] || [];\r\n    setMessages(roomMessages);\r\n    prevMessagesLengthRef.current = roomMessages.length;\r\n\r\n    // Initialize previous message counts for each room for unread tracking\r\n    const prevCounts = {};\r\n    userRooms.forEach((userRoom) => {\r\n      const roomMessages = allMessages[userRoom.roomId] || [];\r\n      prevCounts[userRoom.roomId] = roomMessages.length;\r\n    });\r\n    prevMessageCountsRef.current = prevCounts;\r\n\r\n    setLoading(false);\r\n\r\n    // Set up polling for new messages and participants (simulating real-time)\r\n    messagePollingRef.current = setInterval(() => {\r\n      const updatedMessages =\r\n        JSON.parse(localStorage.getItem(\"chatMessages\") || \"{}\")[roomId] || [];\r\n\r\n      // IMPROVED: Check for new messages and set flag instead of directly scrolling\r\n      if (updatedMessages.length > prevMessagesLengthRef.current) {\r\n        setMessages(updatedMessages);\r\n        prevMessagesLengthRef.current = updatedMessages.length;\r\n        setMessagesUpdated(true);\r\n      }\r\n\r\n      // Check for new messages in other rooms and track unread counts\r\n      const allMessages = JSON.parse(\r\n        localStorage.getItem(\"chatMessages\") || \"{}\"\r\n      );\r\n      joinedRooms.forEach((room) => {\r\n        if (room.roomId !== roomId) {\r\n          // Only for rooms other than current\r\n          const roomMessages = allMessages[room.roomId] || [];\r\n          const prevCount = prevMessageCountsRef.current[room.roomId] || 0;\r\n\r\n          if (roomMessages.length > prevCount) {\r\n            // Increment unread count by the number of new messages\r\n            setUnreadCounts((prev) => ({\r\n              ...prev,\r\n              [room.roomId]:\r\n                (prev[room.roomId] || 0) + (roomMessages.length - prevCount),\r\n            }));\r\n\r\n            // Update the previous count reference\r\n            prevMessageCountsRef.current = {\r\n              ...prevMessageCountsRef.current,\r\n              [room.roomId]: roomMessages.length,\r\n            };\r\n          }\r\n        }\r\n      });\r\n\r\n      // Update participants for all rooms\r\n      const updatedRooms = JSON.parse(\r\n        localStorage.getItem(\"chatRooms\") || \"{}\"\r\n      );\r\n\r\n      // Update active room participants\r\n      const updatedRoom = updatedRooms[roomId];\r\n      if (\r\n        updatedRoom &&\r\n        JSON.stringify(updatedRoom.participants) !==\r\n          JSON.stringify(participants)\r\n      ) {\r\n        setParticipants(updatedRoom.participants);\r\n      }\r\n\r\n      // Update all room participants\r\n      const updatedRoomParticipantsMap = {};\r\n      userRooms.forEach((userRoom) => {\r\n        const currentRoom = updatedRooms[userRoom.roomId];\r\n        if (currentRoom && currentRoom.participants) {\r\n          updatedRoomParticipantsMap[userRoom.roomId] =\r\n            currentRoom.participants;\r\n        }\r\n      });\r\n      setAllRoomsParticipants(updatedRoomParticipantsMap);\r\n\r\n      // Update joined rooms\r\n      const updatedUserRooms = JSON.parse(\r\n        localStorage.getItem(\"joinedRooms\") || \"[]\"\r\n      );\r\n      if (JSON.stringify(updatedUserRooms) !== JSON.stringify(joinedRooms)) {\r\n        setJoinedRooms(updatedUserRooms);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      if (messagePollingRef.current) {\r\n        clearInterval(messagePollingRef.current);\r\n      }\r\n    };\r\n  }, [roomId, navigate]);\r\n\r\n  // Handle clicks outside panels\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      let clickedInsideAnyPanel = false;\r\n      let clickedOnAnyToggleButton = false;\r\n\r\n      // Check if clicked on any toggle button\r\n      if (\r\n        event.target.classList.contains(\"toggle-users-btn\") ||\r\n        event.target.classList.contains(\"users-icon\")\r\n      ) {\r\n        clickedOnAnyToggleButton = true;\r\n      }\r\n\r\n      // Check if clicked inside any participant panel\r\n      Object.keys(participantRefs.current).forEach((roomId) => {\r\n        const ref = participantRefs.current[roomId];\r\n        if (ref && ref.contains(event.target)) {\r\n          clickedInsideAnyPanel = true;\r\n        }\r\n      });\r\n\r\n      // If clicked outside all panels and not on a toggle button, close all panels\r\n      if (!clickedInsideAnyPanel && !clickedOnAnyToggleButton) {\r\n        setExpandedRooms({});\r\n      }\r\n\r\n      // Close emoji picker if clicked outside\r\n      if (\r\n        emojiPickerRef.current &&\r\n        !emojiPickerRef.current.contains(event.target) &&\r\n        !event.target.classList.contains(\"emoji-button\")\r\n      ) {\r\n        setShowEmojiPicker(false);\r\n        setIsEmojiOn(false);\r\n      }\r\n\r\n      // Close language selector if clicked outside\r\n      // Inside your useEffect that handles outside clicks\r\n      if (\r\n        languageSelectorRef.current &&\r\n        !languageSelectorRef.current.contains(event.target) &&\r\n        !event.target.closest(\".code-button\") // Use closest for better detection\r\n      ) {\r\n        // Start animation before hiding\r\n        setLanguageSelectorHiding(true);\r\n        setTimeout(() => {\r\n          setShowLanguageSelector(false);\r\n          setIsCodeOn(false);\r\n          setLanguageSelectorHiding(false);\r\n        }, 300);\r\n      }\r\n\r\n      // Close mention list if clicked outside\r\n      if (\r\n        showMentionList &&\r\n        mentionListRef.current &&\r\n        !mentionListRef.current.contains(event.target) &&\r\n        event.target !== messageInputRef.current\r\n      ) {\r\n        setShowMentionList(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [showLanguageSelector, showMentionList]);\r\n\r\n  // NEW: Initial scroll to bottom on mount\r\n  useEffect(() => {\r\n    if (messagesContainerRef.current && !loading) {\r\n      setTimeout(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"auto\" });\r\n        setIsAtBottom(true);\r\n      }, 100);\r\n    }\r\n  }, [loading]);\r\n\r\n  // IMPROVED: Only scroll when messages updated AND user is at bottom\r\n  useEffect(() => {\r\n    if (messagesUpdated && isAtBottom) {\r\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n      setMessagesUpdated(false);\r\n    }\r\n  }, [messagesUpdated, isAtBottom]);\r\n\r\n  // Update last activity when sending messages or switching rooms\r\n  useEffect(() => {\r\n    // Update last activity timestamp for this room\r\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n    const updatedRooms = userRooms.map((room) => {\r\n      if (room.roomId === roomId) {\r\n        return { ...room, lastActivity: new Date().toISOString() };\r\n      }\r\n      return room;\r\n    });\r\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\r\n  }, [roomId]);\r\n\r\n  // Handle tagging a message\r\n  const handleTagMessage = (message) => {\r\n    setTaggedMessage(message);\r\n  };\r\n\r\n  // Clear the tagged message\r\n  const clearTaggedMessage = () => {\r\n    setTaggedMessageHiding(true);\r\n    setTimeout(() => {\r\n      setTaggedMessage(null);\r\n      setTaggedMessageHiding(false);\r\n    }, 300); // Match the animation duration\r\n  };\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!messageInput.trim() && !fileInputRef.current?.files?.length) return;\r\n\r\n    const newMessage = {\r\n      text: messageInput,\r\n      sender: user.username,\r\n      senderName: user.username,\r\n      color: user.color,\r\n      timestamp: new Date().toISOString(),\r\n      attachment: fileInputRef.current?.files?.length\r\n        ? fileInputRef.current.files[0].name\r\n        : null,\r\n      replyTo: taggedMessage\r\n        ? {\r\n            id: taggedMessage.id || new Date(taggedMessage.timestamp).getTime(),\r\n            text: taggedMessage.text,\r\n            sender: taggedMessage.sender,\r\n          }\r\n        : null,\r\n      // Add code-related properties if code mode is on\r\n      isCode: isCodeOn,\r\n      language: isCodeOn ? selectedLanguage : null,\r\n    };\r\n\r\n    // Add message to localStorage\r\n    const allMessages = JSON.parse(\r\n      localStorage.getItem(\"chatMessages\") || \"{}\"\r\n    );\r\n    const roomMessages = allMessages[roomId] || [];\r\n    roomMessages.push(newMessage);\r\n    allMessages[roomId] = roomMessages;\r\n    localStorage.setItem(\"chatMessages\", JSON.stringify(allMessages));\r\n\r\n    // Update last activity for this room\r\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n    const updatedRooms = userRooms.map((room) => {\r\n      if (room.roomId === roomId) {\r\n        return { ...room, lastActivity: new Date().toISOString() };\r\n      }\r\n      return room;\r\n    });\r\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\r\n\r\n    // Update state\r\n    setMessages([...messages, newMessage]);\r\n    prevMessagesLengthRef.current = messages.length + 1;\r\n    setMessageInput(\"\");\r\n\r\n    // Clear tagged message *after* the message is sent\r\n    setTaggedMessage(null);\r\n\r\n    // Clear any file selections\r\n    if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n\r\n    // Hide emoji picker and reset button states\r\n    setShowEmojiPicker(false);\r\n    setIsEmojiOn(false);\r\n    setIsCodeOn(false);\r\n    setShowLanguageSelector(false);\r\n\r\n    // Ensure we scroll to bottom after sending a message\r\n    setIsAtBottom(true);\r\n    setTimeout(() => {\r\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, 100);\r\n  };\r\n\r\n  // Updated handle input change to detect mentions\r\n  const handleInputChange = (e) => {\r\n    const newValue = e.target.value;\r\n\r\n    // Special check for @ removal - explicitly handle this case\r\n    if (messageInput.includes(\"@\") && !newValue.includes(\"@\")) {\r\n      setShowMentionList(false);\r\n    }\r\n\r\n    setMessageInput(newValue);\r\n\r\n    // Check for mention context\r\n    if (!isCodeOn) {\r\n      // Don't process mentions in code mode\r\n      handleMentionDetection(newValue, e.target.selectionStart);\r\n    } else {\r\n      setShowMentionList(false);\r\n    }\r\n  };\r\n\r\n  // Handle keydown in the message input - modified for textarea\r\n  const handleKeyDown = (e) => {\r\n    // Handle mention list navigation with arrow keys\r\n    if (showMentionList && filteredParticipants.length > 0) {\r\n      if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n        e.preventDefault();\r\n        // Could implement selected index logic here if needed\r\n        return;\r\n      }\r\n\r\n      if (e.key === \"Enter\" || e.key === \"Tab\") {\r\n        e.preventDefault();\r\n        // Select the first (or currently selected) user from the filtered list\r\n        handleSelectMention(filteredParticipants[0].username);\r\n        return;\r\n      }\r\n\r\n      if (e.key === \"Escape\") {\r\n        e.preventDefault();\r\n        setShowMentionList(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Send message on Enter without shift key\r\n    if (e.key === \"Enter\" && !e.shiftKey && !showMentionList) {\r\n      e.preventDefault();\r\n      sendMessage(new Event(\"submit\"));\r\n    }\r\n    // Allow new line with Shift+Enter (default behavior)\r\n  };\r\n\r\n  const handleAttachmentClick = () => {\r\n    setIsAttachmentOn(true);\r\n    fileInputRef.current.click();\r\n    // Reset when file is selected or dialog is closed\r\n    setTimeout(() => setIsAttachmentOn(false), 500);\r\n  };\r\n\r\n  const handleFileSelected = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      // For a real application, you would upload the file to a server here\r\n      // For this demo, we'll just add the filename to the message\r\n      const file = e.target.files[0];\r\n      const formData = new FormData();\r\n      formData.append(\"attachment\", file);\r\n\r\n      // Create a message with the file attachment\r\n      const newMessage = {\r\n        text: `Shared file: ${file.name}`,\r\n        sender: user.username,\r\n        senderName: user.username,\r\n        color: user.color, // Include user's color\r\n        timestamp: new Date().toISOString(),\r\n        attachment: file.name,\r\n        replyTo: taggedMessage\r\n          ? {\r\n              id:\r\n                taggedMessage.id || new Date(taggedMessage.timestamp).getTime(),\r\n              text: taggedMessage.text,\r\n              sender: taggedMessage.sender,\r\n            }\r\n          : null,\r\n      };\r\n\r\n      // Add message to localStorage\r\n      const allMessages = JSON.parse(\r\n        localStorage.getItem(\"chatMessages\") || \"{}\"\r\n      );\r\n      const roomMessages = allMessages[roomId] || [];\r\n      roomMessages.push(newMessage);\r\n      allMessages[roomId] = roomMessages;\r\n      localStorage.setItem(\"chatMessages\", JSON.stringify(allMessages));\r\n\r\n      // Update state\r\n      setMessages([...messages, newMessage]);\r\n      prevMessagesLengthRef.current = messages.length + 1;\r\n\r\n      // Clear tagged message\r\n      setTaggedMessage(null);\r\n\r\n      // Clear the file input\r\n      fileInputRef.current.value = \"\";\r\n\r\n      // Ensure we scroll to bottom after sending a file\r\n      setIsAtBottom(true);\r\n      setTimeout(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  const handleEmojiClick = (e) => {\r\n    // Add event parameter\r\n    e.stopPropagation();\r\n    if (showEmojiPicker) {\r\n      // Start exit animation\r\n      setEmojiPickerHiding(true);\r\n      setTimeout(() => {\r\n        setShowEmojiPicker(false);\r\n        setIsEmojiOn(false);\r\n        setEmojiPickerHiding(false);\r\n      }, 300); // Increased to ensure animation completes\r\n    } else {\r\n      setShowEmojiPicker(true);\r\n      setIsEmojiOn(true);\r\n      // Close other trays\r\n      setShowLanguageSelector(false);\r\n      setShowMentionList(false);\r\n    }\r\n  };\r\n\r\n  const insertEmoji = (emoji) => {\r\n    setMessageInput((prevInput) => prevInput + emoji);\r\n    // Don't close immediately to allow multiple emoji selection\r\n    if (messageInputRef.current) {\r\n      messageInputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleCodeClick = (e) => {\r\n    // Add event parameter and stop propagation\r\n    e.stopPropagation();\r\n\r\n    if (showLanguageSelector) {\r\n      // Start exit animation\r\n      setLanguageSelectorHiding(true);\r\n      setTimeout(() => {\r\n        setShowLanguageSelector(false);\r\n        setIsCodeOn(false);\r\n        setLanguageSelectorHiding(false);\r\n      }, 300); // Match the animation duration\r\n    } else {\r\n      setShowLanguageSelector(true);\r\n      setIsCodeOn(true);\r\n      // Close other trays\r\n      setShowEmojiPicker(false);\r\n      setIsEmojiOn(false);\r\n      setShowMentionList(false);\r\n    }\r\n  };\r\n\r\n  // Function to leave room from the sidebar\r\n  const handleLeaveRoomFromSidebar = (roomIdToLeave) => {\r\n    // Remove user from participants in the room to leave\r\n    const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\r\n    const roomToLeave = rooms[roomIdToLeave];\r\n\r\n    if (roomToLeave) {\r\n      roomToLeave.participants = roomToLeave.participants.filter(\r\n        (p) => p.username !== user.username\r\n      );\r\n      rooms[roomIdToLeave] = roomToLeave;\r\n      localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\r\n    }\r\n\r\n    // Get all joined rooms\r\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n\r\n    // Remove the room from joined rooms\r\n    const updatedRooms = userRooms.filter(\r\n      (room) => room.roomId !== roomIdToLeave\r\n    );\r\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\r\n\r\n    // Update state to reflect changes\r\n    setJoinedRooms(updatedRooms);\r\n\r\n    // If the user is currently in the room they're leaving, navigate to another room\r\n    if (roomIdToLeave === roomId) {\r\n      // Find the next available room\r\n      if (updatedRooms.length > 0) {\r\n        const nextRoom = updatedRooms[0];\r\n\r\n        // Update active user info\r\n        localStorage.setItem(\r\n          \"chatUser\",\r\n          JSON.stringify({\r\n            ...user,\r\n            roomId: nextRoom.roomId,\r\n            joinedAt: new Date().toISOString(),\r\n          })\r\n        );\r\n\r\n        // Navigate to next room\r\n        navigate(`/room/${nextRoom.roomId}`);\r\n      } else {\r\n        // No rooms left, go to home\r\n        navigate(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    // Remove user from participants\r\n    const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\r\n    const room = rooms[roomId];\r\n\r\n    if (room) {\r\n      room.participants = room.participants.filter(\r\n        (p) => p.username !== user.username\r\n      );\r\n      rooms[roomId] = room;\r\n      localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\r\n    }\r\n\r\n    // Get all joined rooms BEFORE removing the current one\r\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n\r\n    // Find the current room to see its position\r\n    const currentRoomIndex = userRooms.findIndex(\r\n      (room) => room.roomId === roomId\r\n    );\r\n\r\n    // Get a copy of the rooms without the current one\r\n    const updatedRooms = userRooms.filter((room) => room.roomId !== roomId);\r\n\r\n    // Save the updated rooms list to localStorage\r\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\r\n\r\n    // Check if we have any rooms left to navigate to\r\n    if (updatedRooms.length > 0) {\r\n      console.log(\"Found other rooms, switching...\");\r\n\r\n      // Try to stay at the same index if possible, otherwise take the last room\r\n      const nextIndex = Math.min(currentRoomIndex, updatedRooms.length - 1);\r\n      const nextRoom = updatedRooms[nextIndex];\r\n\r\n      // Set the active user's roomId to the next room\r\n      localStorage.setItem(\r\n        \"chatUser\",\r\n        JSON.stringify({\r\n          ...user,\r\n          roomId: nextRoom.roomId,\r\n          joinedAt: new Date().toISOString(),\r\n        })\r\n      );\r\n\r\n      // Update last activity timestamp for the next room\r\n      const roomsWithUpdatedActivity = updatedRooms.map((room) => {\r\n        if (room.roomId === nextRoom.roomId) {\r\n          return { ...room, lastActivity: new Date().toISOString() };\r\n        }\r\n        return room;\r\n      });\r\n      localStorage.setItem(\r\n        \"joinedRooms\",\r\n        JSON.stringify(roomsWithUpdatedActivity)\r\n      );\r\n\r\n      // Use window.location instead of navigate for a guaranteed page change\r\n      navigate(`/room/${nextRoom.roomId}`);\r\n      return; // Exit function early to prevent navigate(\"/\") from executing\r\n    }\r\n\r\n    // Only reach here if no rooms are left\r\n    console.log(\"No rooms left, going to home page\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const switchRoom = (newRoomId) => {\r\n    // Update active user info\r\n    localStorage.setItem(\r\n      \"chatUser\",\r\n      JSON.stringify({\r\n        ...user,\r\n        roomId: newRoomId,\r\n      })\r\n    );\r\n\r\n    // Reset unread count for this room\r\n    setUnreadCounts((prev) => ({\r\n      ...prev,\r\n      [newRoomId]: 0,\r\n    }));\r\n\r\n    // Update last activity for the new room\r\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n    const updatedRooms = userRooms.map((room) => {\r\n      if (room.roomId === newRoomId) {\r\n        return { ...room, lastActivity: new Date().toISOString() };\r\n      }\r\n      return room;\r\n    });\r\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\r\n\r\n    // Clear tagged message when switching rooms\r\n    setTaggedMessage(null);\r\n\r\n    // Navigate to new room\r\n    navigate(`/room/${newRoomId}`);\r\n  };\r\n\r\n  const goToHome = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const copyRoomLink = () => {\r\n    const roomLink = `${window.location.origin}/room/${roomId}`;\r\n    navigator.clipboard\r\n      .writeText(roomLink)\r\n      .then(() => {\r\n        alert(\"Room link copied to clipboard!\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Failed to copy room link:\", err);\r\n      });\r\n  };\r\n\r\n  // UPDATED: Simplified toggleParticipants function\r\n  const toggleParticipants = (roomId, e) => {\r\n    e.stopPropagation();\r\n\r\n    // Simply toggle the expanded state\r\n    setExpandedRooms((prev) => ({\r\n      ...prev,\r\n      [roomId]: !prev[roomId],\r\n    }));\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading chat room...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <h2>Error</h2>\r\n        <p>{error}</p>\r\n        <button onClick={() => navigate(\"/\")}>Back to Home</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Generate palette based on room color\r\n  const roomPalette = roomInfo?.color\r\n    ? generateRoomPalette(roomInfo.color)\r\n    : null;\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <h2>My Rooms</h2>\r\n          <button\r\n            className=\"add-room-button\"\r\n            onClick={goToHome}\r\n            title=\"Join or Create Room\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"14\"\r\n              height=\"14\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"3\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"rooms-sidebar\">\r\n          {joinedRooms.length === 0 ? (\r\n            <div className=\"no-rooms-sidebar\">\r\n              <p>No rooms joined yet</p>\r\n              <button onClick={goToHome} className=\"join-room-btn\">\r\n                Join a Room\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <ul className=\"rooms-list-sidebar\" ref={roomsListRef}>\r\n              {joinedRooms\r\n                .slice()\r\n                .sort((a, b) => {\r\n                  const indexA = roomOrder.indexOf(a.roomId);\r\n                  const indexB = roomOrder.indexOf(b.roomId);\r\n                  return indexA - indexB;\r\n                })\r\n                .map((room, index) => {\r\n                  // Get room data including color\r\n                  const rooms = JSON.parse(\r\n                    localStorage.getItem(\"chatRooms\") || \"{}\"\r\n                  );\r\n                  return (\r\n                    <React.Fragment key={room.roomId}>\r\n                      <li\r\n                        className={`room-item-sidebar ${\r\n                          room.roomId === roomId ? \"active\" : \"\"\r\n                        } ${draggedRoom === room.roomId ? \"dragging\" : \"\"} ${\r\n                          dragOverRoom === room.roomId ? \"drag-over\" : \"\"\r\n                        } ${dragDirection === \"up\" ? \"shift-up\" : \"\"} ${\r\n                          dragDirection === \"down\" ? \"shift-down\" : \"\"\r\n                        }`}\r\n                        draggable=\"true\"\r\n                        onDragStart={(e) =>\r\n                          handleDragStart(e, room.roomId, index)\r\n                        }\r\n                        onDragOver={(e) =>\r\n                          handleDragOver(e, room.roomId, index)\r\n                        }\r\n                        onDrop={(e) => handleDrop(e, room.roomId)}\r\n                        onDragEnd={handleDragEnd}\r\n                        style={{\r\n                          transition: draggedRoom\r\n                            ? \"transform 0.3s ease, opacity 0.3s ease\"\r\n                            : \"none\",\r\n                          zIndex: draggedRoom === room.roomId ? \"10\" : \"1\",\r\n                          position: \"relative\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          className=\"room-item-content\"\r\n                          onClick={() => switchRoom(room.roomId)}\r\n                        >\r\n                          <div\r\n                            className=\"room-item-avatar\"\r\n                            style={{\r\n                              backgroundColor:\r\n                                rooms[room.roomId]?.color ||\r\n                                \"var(--primary-color)\",\r\n                            }}\r\n                          >\r\n                            <span\r\n                              className=\"unread-count\"\r\n                              style={{\r\n                                color: getContrastingColor(\r\n                                  rooms[room.roomId]?.color ||\r\n                                    \"var(--primary-color)\"\r\n                                ),\r\n                              }}\r\n                            >\r\n                              {unreadCounts[room.roomId] > 99\r\n                                ? \"99+\"\r\n                                : unreadCounts[room.roomId] || 0}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"room-item-details\">\r\n                            <div className=\"room-item-name\">\r\n                              Room #{room.roomId}\r\n                              {room.isPrivate && (\r\n                                <span className=\"private-badge mini\">P</span>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"room-item-info\">\r\n                              {allRoomsParticipants[room.roomId]?.length || 0}{\" \"}\r\n                              users\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <button\r\n                          className={`toggle-users-btn ${\r\n                            expandedRooms[room.roomId] ? \"active\" : \"\"\r\n                          }`}\r\n                          onClick={(e) => toggleParticipants(room.roomId, e)}\r\n                          title={\r\n                            expandedRooms[room.roomId]\r\n                              ? \"Hide users\"\r\n                              : \"Show users\"\r\n                          }\r\n                        >\r\n                          <span className=\"users-icon\"></span>\r\n                        </button>\r\n\r\n                        {/* Leave room button after toggle users button */}\r\n                        <button\r\n                          className=\"leave-room-btn\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleLeaveRoomFromSidebar(room.roomId);\r\n                          }}\r\n                          title=\"Leave Room\"\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"14\"\r\n                            height=\"14\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"3\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                          >\r\n                            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                          </svg>\r\n                        </button>\r\n                      </li>\r\n\r\n                      {/*sohamghosh-jellylemonshake-23bps1146 */\r\n                      /* UPDATED: Changed the participants panel to always render with conditional className */}\r\n                      <div\r\n                        className={`participants-panel ${\r\n                          expandedRooms[room.roomId] ? \"active\" : \"\"\r\n                        }`}\r\n                        ref={(el) =>\r\n                          (participantRefs.current[room.roomId] = el)\r\n                        }\r\n                      >\r\n                        <div className=\"participants-header\">\r\n                          <h3>\r\n                            Participants (\r\n                            {allRoomsParticipants[room.roomId]?.length || 0})\r\n                          </h3>\r\n                          <button\r\n                            className=\"close-participants\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              toggleParticipants(room.roomId, e);\r\n                            }}\r\n                          >\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              width=\"12\"\r\n                              height=\"12\"\r\n                              viewBox=\"0 0 24 24\"\r\n                              fill=\"none\"\r\n                              stroke=\"currentColor\"\r\n                              strokeWidth=\"2\"\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                            >\r\n                              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                        <ul className=\"participants-list\">\r\n                          {allRoomsParticipants[room.roomId]?.map(\r\n                            (participant, index) => (\r\n                              <li\r\n                                key={index}\r\n                                className={`participant-item ${\r\n                                  participant.username === user.username\r\n                                    ? \"current-user\"\r\n                                    : \"\"\r\n                                }`}\r\n                                style={{ \"--item-index\": index }}\r\n                              >\r\n                                <div\r\n                                  className=\"participant-avatar\"\r\n                                  style={{\r\n                                    backgroundColor: participant.avatar\r\n                                      ? \"transparent\"\r\n                                      : participant.color ||\r\n                                        \"var(--accent-color)\",\r\n                                  }}\r\n                                >\r\n                                  {participant.avatar ? (\r\n                                    <img\r\n                                      src={`${participant.avatar}${\r\n                                        participant.avatar.includes(\"?\")\r\n                                          ? \"&\"\r\n                                          : \"?\"\r\n                                      }v=${avatarVersion}`}\r\n                                      alt={participant.username}\r\n                                      className=\"participant-avatar-img\"\r\n                                      onError={(e) => {\r\n                                        e.target.style.display = \"none\";\r\n                                        // Show fallback first letter avatar\r\n                                        const parent = e.target.parentNode;\r\n                                        if (\r\n                                          !parent.querySelector(\r\n                                            \".participant-avatar-fallback\"\r\n                                          )\r\n                                        ) {\r\n                                          const fallback =\r\n                                            document.createElement(\"div\");\r\n                                          fallback.className =\r\n                                            \"participant-avatar-fallback\";\r\n                                          fallback.innerText =\r\n                                            participant.username\r\n                                              .charAt(0)\r\n                                              .toUpperCase();\r\n                                          parent.appendChild(fallback);\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                  ) : (\r\n                                    participant.username.charAt(0).toUpperCase()\r\n                                  )}\r\n                                </div>\r\n                                <div\r\n                                  className=\"participant-name\"\r\n                                  style={{\r\n                                    color:\r\n                                      participant.color ||\r\n                                      \"rgba(255, 255, 255, 0.9)\",\r\n                                  }}\r\n                                >\r\n                                  {participant.username}{\" \"}\r\n                                  {participant.username === user.username\r\n                                    ? \"(You)\"\r\n                                    : \"\"}\r\n                                  {participant.isCreator && \" (Creator)\"}\r\n                                </div>\r\n                              </li>\r\n                            )\r\n                          )}\r\n                        </ul>\r\n                      </div>\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"sidebar-footer\" ref={userMenuRef}>\r\n          <div\r\n            className=\"user-info\"\r\n            onMouseEnter={() => setUserDropupOpen(true)}\r\n            onMouseLeave={() => setUserDropupOpen(false)}\r\n          >\r\n            <button\r\n              className=\"user-menu-button\"\r\n              onClick={() => setUserDropupOpen(!userDropupOpen)}\r\n            >\r\n              {isAuthenticated && authUser?.avatar ? (\r\n                <img\r\n                  src={authUser.avatar}\r\n                  alt=\"Profile\"\r\n                  className=\"user-avatar\"\r\n                />\r\n              ) : (\r\n                <div\r\n                  className=\"user-avatar\"\r\n                  style={{\r\n                    backgroundColor: user?.color || \"var(--accent-color)\",\r\n                  }}\r\n                >\r\n                  {user?.username.charAt(0).toUpperCase()}\r\n                </div>\r\n              )}\r\n            </button>\r\n\r\n            <div\r\n              className=\"user-name\"\r\n              style={{ color: user?.color || \"rgba(255, 255, 255, 0.9)\" }}\r\n            >\r\n              {isAuthenticated\r\n                ? authUser?.name || user?.username\r\n                : user?.username}\r\n            </div>\r\n\r\n            {userDropupOpen && (\r\n              <div className=\"sidebar-dropup-menu\">\r\n                <div className=\"sidebar-user-info\">\r\n                  <div className=\"user-name\">\r\n                    {isAuthenticated ? authUser?.name : user?.username}\r\n                  </div>\r\n                  {isAuthenticated && (\r\n                    <div className=\"user-email\">{authUser?.email}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <Link\r\n                  to=\"/profile\"\r\n                  className=\"sidebar-menu-item\"\r\n                  onClick={() => setUserDropupOpen(false)}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                    <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                  </svg>\r\n                  Profile\r\n                </Link>\r\n\r\n                <button\r\n                  className=\"sidebar-menu-item logout\"\r\n                  onClick={handleMenuLogout}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path>\r\n                    <polyline points=\"16 17 21 12 16 7\"></polyline>\r\n                    <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>\r\n                  </svg>\r\n                  Log Out\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"chat-main\"\r\n        style={\r\n          roomPalette\r\n            ? {\r\n                \"--room-base-color\": roomPalette.baseColor,\r\n                \"--room-lighter-color\": roomPalette.lighterShade,\r\n                \"--room-darker-color\": roomPalette.darkerShade,\r\n                \"--room-mid-color\": roomPalette.midShade,\r\n                background: roomPalette.lighterShade,\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        <div className=\"chat-header\">\r\n          <div className=\"room-info\">\r\n            <h1>Room #{roomId}</h1>\r\n            {roomInfo?.isPrivate && (\r\n              <span className=\"private-badge\">Private</span>\r\n            )}\r\n            {/* Add save room button here */}\r\n            {isAuthenticated && (\r\n              <button\r\n                className={`save-room-button ${isRoomSaved ? \"saved\" : \"\"}`}\r\n                onClick={toggleSaveRoom}\r\n                title={isRoomSaved ? \"Unsave this room\" : \"Save this room\"}\r\n              >\r\n                {isRoomSaved ? (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"18\"\r\n                    height=\"18\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"currentColor\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <path d=\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"></path>\r\n                  </svg>\r\n                ) : (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"18\"\r\n                    height=\"18\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <path d=\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"></path>\r\n                  </svg>\r\n                )}\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"room-actions\">\r\n            {/* Add search button and container here */}\r\n            <div className=\"search-container\">\r\n              <button\r\n                className=\"search-button\"\r\n                onClick={toggleSearch}\r\n                title=\"Search messages\"\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"18\"\r\n                  height=\"18\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n                  <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n                </svg>\r\n              </button>\r\n              <div\r\n                ref={searchContainerRef}\r\n                className={`search-input-container ${\r\n                  isSearchOpen ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <svg\r\n                  className=\"search-icon\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n                  <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n                </svg>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"search-input\"\r\n                  placeholder=\"Search messages...\"\r\n                  value={searchQuery}\r\n                  onChange={handleSearch}\r\n                  autoFocus={isSearchOpen}\r\n                />\r\n\r\n                {searchQuery && (\r\n                  <>\r\n                    <div className=\"search-counter\">\r\n                      {searchResults.length > 0 ? (\r\n                        <span className=\"result-count\">\r\n                          {currentSearchResultIndex + 1} of{\" \"}\r\n                          {searchResults.length}\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"no-results\">No results</span>\r\n                      )}\r\n                    </div>\r\n\r\n                    {searchResults.length > 1 && (\r\n                      <div className=\"search-navigation\">\r\n                        <button\r\n                          className=\"search-nav-button\"\r\n                          onClick={() => navigateSearchResults(\"prev\")}\r\n                          title=\"Previous result\"\r\n                          disabled={searchResults.length <= 1}\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"2\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                          >\r\n                            <polyline points=\"18 15 12 9 6 15\"></polyline>\r\n                          </svg>\r\n                        </button>\r\n                        <button\r\n                          className=\"search-nav-button\"\r\n                          onClick={() => navigateSearchResults(\"next\")}\r\n                          title=\"Next result\"\r\n                          disabled={searchResults.length <= 1}\r\n                        >\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"2\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                          >\r\n                            <polyline points=\"6 9 12 15 18 9\"></polyline>\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <button onClick={copyRoomLink} className=\"copy-button\">\r\n              Share Room\r\n            </button>\r\n            <button onClick={leaveRoom} className=\"leave-button\">\r\n              Leave Room\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-content\">\r\n          <div className=\"messages-container\" style={{ position: \"relative\" }}>\r\n            {/*sohamghosh-jellylemonshake-23bps1146 */\r\n            /* IMPROVED: Added overflow-anchor: none to prevent browser's automatic scroll anchoring */}\r\n            <div\r\n              className=\"messages-list\"\r\n              ref={messagesContainerRef}\r\n              onScroll={handleScroll}\r\n              style={{ overflowAnchor: \"none\" }}\r\n            >\r\n              {messages.length === 0 ? (\r\n                <div className=\"no-messages\">\r\n                  No messages yet. Start the conversation!\r\n                </div>\r\n              ) : (\r\n                messages.map((message, index) => (\r\n                  <MessageItem\r\n                    key={index}\r\n                    message={message}\r\n                    isCurrentUser={message.sender === user.username}\r\n                    onTagMessage={handleTagMessage}\r\n                    isHovered={\r\n                      hoveredMessageId ===\r\n                      (message.id || new Date(message.timestamp).getTime())\r\n                    }\r\n                    isHighlighted={highlightedMessageIds.includes(\r\n                      message.id || new Date(message.timestamp).getTime()\r\n                    )}\r\n                    isActiveHighlight={\r\n                      searchResults.length > 0 &&\r\n                      currentSearchResultIndex >= 0 &&\r\n                      (message.id || new Date(message.timestamp).getTime()) ===\r\n                        (searchResults[currentSearchResultIndex]?.id ||\r\n                          new Date(\r\n                            searchResults[currentSearchResultIndex]?.timestamp\r\n                          ).getTime())\r\n                    }\r\n                    onMouseEnter={(id) => setHoveredMessageId(id)}\r\n                    onMouseLeave={() => setHoveredMessageId(null)}\r\n                    roomColor={roomInfo?.color}\r\n                  />\r\n                ))\r\n              )}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            {showScrollButton && (\r\n              <button\r\n                className={`scroll-down-button ${\r\n                  scrollButtonHiding ? \"hiding\" : \"\"\r\n                }`}\r\n                onClick={scrollToBottom}\r\n                title=\"Scroll to latest messages\"\r\n                style={{\r\n                  backgroundColor:\r\n                    roomPalette?.baseColor || \"var(--primary-color)\",\r\n                }}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"20\"\r\n                  height=\"20\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <polyline points=\"6 9 12 15 18 9\"></polyline>\r\n                </svg>\r\n              </button>\r\n            )}\r\n            <form onSubmit={sendMessage} className=\"message-form\">\r\n              {/* Tagged message preview */}\r\n              {taggedMessage && (\r\n                <div\r\n                  className={`tagged-message-preview ${\r\n                    taggedMessageHiding ? \"hiding\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div className=\"tagged-content\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <polyline points=\"9 14 4 9 9 4\"></polyline>\r\n                      <path d=\"M20 20v-7a4 4 0 0 0-4-4H4\"></path>\r\n                    </svg>\r\n                    <span>\r\n                      <strong>{taggedMessage.sender}:</strong>{\" \"}\r\n                      {taggedMessage.text.substring(0, 7) + \"...\"}\r\n                    </span>\r\n                  </div>\r\n                  <button\r\n                    className=\"clear-tag\"\r\n                    onClick={clearTaggedMessage}\r\n                    title=\"Cancel reply\"\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n                      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"message-tools\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`tool-button attachment-button ${\r\n                    isAttachmentOn ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={handleAttachmentClick}\r\n                  title=\"Attach File\"\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"20\"\r\n                    height=\"20\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <path d=\"M21.44 11.05l-9.19 9.19a6 6 0 01-8.49-8.49l9.19-9.19a4 4 0 015.66 5.66l-9.2 9.19a2 2 0 01-2.83-2.83l8.49-8.48\"></path>\r\n                  </svg>\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className={`tool-button emoji-button ${\r\n                    isEmojiOn ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={handleEmojiClick}\r\n                  title=\"Insert Emoji\"\r\n                >\r\n                  <span className=\"emoji-button-wrapper\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      pointerEvents=\"none\" /* This prevents the SVG from capturing clicks */\r\n                    >\r\n                      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                      <path d=\"M8 14s1.5 2 4 2 4-2 4-2\"></path>\r\n                      <line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line>\r\n                      <line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>\r\n                    </svg>\r\n                  </span>\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className={`tool-button code-button ${\r\n                    isCodeOn ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={handleCodeClick}\r\n                  title=\"Insert Code\"\r\n                >\r\n                  <span className=\"code-button-wrapper\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      pointerEvents=\"none\" // Prevent SVG from capturing clicks\r\n                    >\r\n                      <polyline points=\"16 18 22 12 16 6\"></polyline>\r\n                      <polyline points=\"8 6 2 12 8 18\"></polyline>\r\n                    </svg>\r\n                  </span>\r\n                </button>\r\n\r\n                {/* Emoji Picker */}\r\n                {showEmojiPicker && (\r\n                  <div\r\n                    className={`emoji-picker ${\r\n                      emojiPickerHiding ? \"hiding\" : \"\"\r\n                    }`}\r\n                    ref={emojiPickerRef}\r\n                  >\r\n                    {commonEmojis.map((emoji, index) => (\r\n                      <button\r\n                        key={index}\r\n                        type=\"button\"\r\n                        className=\"emoji-item\"\r\n                        onClick={() => insertEmoji(emoji)}\r\n                      >\r\n                        {emoji}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Language Selector */}\r\n                {showLanguageSelector && (\r\n                  <div\r\n                    className={`language-selector ${\r\n                      languageSelectorHiding ? \"hiding\" : \"\"\r\n                    }`}\r\n                    ref={languageSelectorRef}\r\n                  >\r\n                    <div className=\"language-dropdown\">\r\n                      {codeLanguages.map((lang) => (\r\n                        <button\r\n                          key={lang.id}\r\n                          type=\"button\"\r\n                          className={`language-option ${\r\n                            selectedLanguage === lang.id ? \"selected\" : \"\"\r\n                          }`}\r\n                          onClick={() => handleLanguageSelect(lang.id)}\r\n                        >\r\n                          {lang.name}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Mention User List */}\r\n                {showMentionList && filteredParticipants.length > 0 && (\r\n                  <div className=\"mention-list\" ref={mentionListRef}>\r\n                    {filteredParticipants.map((participant) => (\r\n                      <button\r\n                        key={participant.username}\r\n                        type=\"button\"\r\n                        className=\"mention-item\"\r\n                        onClick={() =>\r\n                          handleSelectMention(participant.username)\r\n                        }\r\n                      >\r\n                        <div\r\n                          className=\"mention-avatar\"\r\n                          style={{\r\n                            backgroundColor:\r\n                              participant.color || \"var(--accent-color)\",\r\n                          }}\r\n                        >\r\n                          {participant.username.charAt(0).toUpperCase()}\r\n                        </div>\r\n                        <span className=\"mention-name\">\r\n                          {participant.username}\r\n                        </span>\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Hidden file input */}\r\n                <input\r\n                  type=\"file\"\r\n                  ref={fileInputRef}\r\n                  style={{ display: \"none\" }}\r\n                  onChange={handleFileSelected}\r\n                />\r\n              </div>\r\n\r\n              {/* Textarea for message input */\r\n              /*sohamghosh-jellylemonshake-23bps1146 */}\r\n              <div\r\n                className={`message-input-container ${\r\n                  isCodeOn ? \"code-mode\" : \"\"\r\n                }`}\r\n              >\r\n                <textarea\r\n                  ref={messageInputRef}\r\n                  value={messageInput}\r\n                  onChange={handleInputChange}\r\n                  onKeyDown={handleKeyDown}\r\n                  placeholder={\r\n                    isCodeOn\r\n                      ? \"Type or paste code here...\"\r\n                      : \"Type a message... (use @ to mention)\"\r\n                  }\r\n                  className={`message-input ${isCodeOn ? \"code-input\" : \"\"}`}\r\n                  rows=\"1\"\r\n                  style={{\r\n                    overflowY: \"hidden\",\r\n                    backgroundColor: isCodeOn ? \"#282a36\" : \"\",\r\n                    color: isCodeOn ? \"white\" : \"\",\r\n                  }}\r\n                ></textarea>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"send-button\"\r\n                style={{\r\n                  backgroundColor:\r\n                    roomPalette?.baseColor || \"var(--primary-color)\",\r\n                }}\r\n              >\r\n                Send\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {showLoginPrompt && (\r\n        <div\r\n          className=\"login-prompt-overlay\"\r\n          onClick={() => setShowLoginPrompt(false)}\r\n        >\r\n          <div\r\n            className=\"login-prompt-modal\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <h3>Save your favorite rooms</h3>\r\n            <p>\r\n              Sign up or log in to save rooms and access them easily from your\r\n              profile.\r\n            </p>\r\n            <div className=\"login-prompt-buttons\">\r\n              <Link to=\"/register\" className=\"prompt-button register\">\r\n                Sign Up\r\n              </Link>\r\n              <Link to=\"/login\" className=\"prompt-button login\">\r\n                Log In\r\n              </Link>\r\n              <button\r\n                className=\"prompt-button cancel\"\r\n                onClick={() => setShowLoginPrompt(false)}\r\n              >\r\n                Not Now\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}