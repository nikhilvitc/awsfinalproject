{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkumar/aws project/ChatRoom-/jellylemonshake/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useAuth } from \"./AuthContext\";\nimport \"../styles/components/Home.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [roomsExpanded, setRoomsExpanded] = useState(false);\n  const myRoomsRef = useRef(null);\n  const {\n    isAuthenticated,\n    user\n  } = useAuth();\n  const [view, setView] = useState(\"select\");\n  const [showRoomsList, setShowRoomsList] = useState(false);\n  const [joinedRooms, setJoinedRooms] = useState([]);\n  const [roomPin, setRoomPin] = useState([\"\", \"\", \"\", \"\"]);\n  const [roomPassword, setRoomPassword] = useState(\"\");\n  const [savedRooms, setSavedRooms] = useState([]);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [showJoinForm, setShowJoinForm] = useState(false);\n  const [roomIdInput, setRoomIdInput] = useState(\"\");\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [pinInput, setPinInput] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [dialogVisible, setDialogVisible] = useState(false);\n\n  // Function to show a dialog view with animation\n  const showDialogView = newView => {\n    setDialogVisible(true);\n    setView(newView);\n  };\n\n  // Function to hide dialog and go back to select view\n  const hideDialogView = () => {\n    setDialogVisible(false);\n    setTimeout(() => {\n      setView(\"select\");\n    }, 300); // Match the CSS transition duration\n  };\n\n  // Function to generate random color\n  const generateRandomColor = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16).padStart(6, \"0\");\n  };\n\n  // Load joined rooms on component mount\n  useEffect(() => {\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n    setJoinedRooms(userRooms);\n\n    // If user has a stored username, use it\n    const savedUsername = localStorage.getItem(\"preferredUsername\");\n    if (savedUsername) {\n      setUsername(savedUsername);\n    }\n  }, []);\n  // Add useEffect for outside click detection\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (myRoomsRef.current && !myRoomsRef.current.contains(event.target) && roomsExpanded) {\n        setRoomsExpanded(false);\n      }\n    }\n\n    // Add event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    // Clean up\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [roomsExpanded]);\n  /*sohamghosh-jellylemonshake-23bps1146 */\n  // Function to handle room creation\n  const handleCreateRoom = e => {\n    e.preventDefault();\n    if (!username.trim()) {\n      setError(\"Username is required\");\n      return;\n    }\n    try {\n      // Save preferred username\n      localStorage.setItem(\"preferredUsername\", username);\n\n      // Generate a random 4-digit PIN\n      const pin = Math.floor(1000 + Math.random() * 9000).toString();\n\n      // Generate colors for room and user\n      const roomColor = generateRandomColor();\n      const userColor = generateRandomColor();\n\n      // Create mock room data and store in localStorage\n      const newRoom = {\n        id: pin,\n        createdBy: username,\n        isPrivate: isPrivate,\n        password: isPrivate ? password : null,\n        createdAt: new Date().toISOString(),\n        color: roomColor,\n        // Assign random color to room\n        participants: [{\n          username,\n          isCreator: true,\n          color: userColor // Assign random color to user\n        }]\n      };\n\n      // Save room to localStorage\n      const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n      rooms[pin] = newRoom;\n      localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\n\n      // Initialize empty messages array for this room\n      const allMessages = JSON.parse(localStorage.getItem(\"chatMessages\") || \"{}\");\n      allMessages[pin] = [];\n      localStorage.setItem(\"chatMessages\", JSON.stringify(allMessages));\n\n      // Add room to user's joined rooms\n      const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n      userRooms.push({\n        roomId: pin,\n        name: `Room #${pin}`,\n        joinedAt: new Date().toISOString(),\n        isPrivate: isPrivate,\n        isCreator: true,\n        lastActivity: new Date().toISOString()\n      });\n      localStorage.setItem(\"joinedRooms\", JSON.stringify(userRooms));\n\n      // Store active user info including color\n      localStorage.setItem(\"chatUser\", JSON.stringify({\n        username,\n        roomId: pin,\n        joinedAt: new Date().toISOString(),\n        color: userColor // Store user's color\n      }));\n\n      // Navigate to the room\n      navigate(`/room/${pin}`);\n    } catch (err) {\n      setError(\"Error creating room\");\n      console.error(err);\n    }\n  };\n\n  // Handle PIN input changes\n  const handlePinChange = e => {\n    const index = parseInt(e.target.dataset.index);\n    // Only allow digits and limit to single character\n    const value = e.target.value.replace(/[^0-9]/g, \"\").slice(0, 1);\n\n    // Create a copy of the array and update just this position\n    const newPin = [...roomPin];\n    newPin[index] = value;\n    setRoomPin(newPin);\n\n    // Auto-focus to next input if a digit was entered\n    if (value && index < 3) {\n      const nextInput = document.querySelector(`.pin-digit[data-index=\"${index + 1}\"]`);\n      if (nextInput) {\n        nextInput.focus();\n      }\n    }\n  };\n\n  // Handle key presses in PIN inputs\n  const handlePinKeyDown = e => {\n    const index = parseInt(e.target.dataset.index);\n    if (e.key === \"Backspace\") {\n      // Create a copy of the array\n      const newPin = [...roomPin];\n      if (roomPin[index] === \"\") {\n        // If current input is already empty and backspace was pressed,\n        // move focus to previous input\n        if (index > 0) {\n          const prevInput = document.querySelector(`.pin-digit[data-index=\"${index - 1}\"]`);\n          if (prevInput) {\n            prevInput.focus();\n          }\n        }\n      } else {\n        // Clear the current input\n        newPin[index] = \"\";\n        setRoomPin(newPin);\n      }\n    }\n  };\n\n  // Function to handle joining a room\n  const handleJoinRoom = e => {\n    e.preventDefault();\n    if (!username.trim()) {\n      setError(\"Username is required\");\n      return;\n    }\n    const pinString = roomPin.join(\"\");\n    if (!pinString || pinString.length !== 4) {\n      setError(\"Valid 4-digit room PIN is required\");\n      return;\n    }\n    try {\n      // Save preferred username\n      localStorage.setItem(\"preferredUsername\", username);\n\n      // Get rooms from localStorage\n      const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n      const room = rooms[pinString];\n\n      // Check if room exists\n      if (!room) {\n        setError(\"Room not found\");\n        return;\n      }\n\n      // Check if room is private and verify password\n      if (room.isPrivate) {\n        if (!roomPassword) {\n          setError(\"This room requires a password\");\n          return;\n        }\n        if (room.password !== roomPassword) {\n          setError(\"Incorrect password\");\n          return;\n        }\n      }\n\n      // Generate a random color for the user\n      let userColor = generateRandomColor();\n\n      // Add user to room participants if not already there\n      if (!room.participants.some(p => p.username === username)) {\n        room.participants.push({\n          username,\n          joinedAt: new Date().toISOString(),\n          color: userColor // Assign color to new user\n        });\n        rooms[roomPin] = room;\n        localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\n      } else {\n        // User already exists in the room - retrieve their color\n        const existingUser = room.participants.find(p => p.username === username);\n        if (existingUser && existingUser.color) {\n          userColor = existingUser.color;\n        }\n      }\n\n      // Add room to user's joined rooms if not already there\n      const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n      if (!userRooms.some(r => r.roomId === roomPin)) {\n        userRooms.push({\n          roomId: roomPin,\n          name: `Room #${roomPin}`,\n          joinedAt: new Date().toISOString(),\n          isPrivate: room.isPrivate,\n          isCreator: room.createdBy === username,\n          lastActivity: new Date().toISOString()\n        });\n        localStorage.setItem(\"joinedRooms\", JSON.stringify(userRooms));\n      }\n      /*sohamghosh-jellylemonshake-23bps1146 */\n      // Store active user info with color\n      localStorage.setItem(\"chatUser\", JSON.stringify({\n        username,\n        roomId: roomPin,\n        joinedAt: new Date().toISOString(),\n        color: userColor // Store user's color\n      }));\n\n      // Navigate to room\n      navigate(`/room/${roomPin}`);\n    } catch (err) {\n      setError(\"Error joining room\");\n      console.error(err);\n    }\n  };\n\n  // Handle entering a joined room\n  const enterRoom = roomId => {\n    // Get user data to preserve color\n    const userData = JSON.parse(localStorage.getItem(\"chatUser\") || \"{}\");\n\n    // Get room data\n    const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n    const room = rooms[roomId];\n\n    // Find user's color in this room if it exists\n    let userColor = userData.color;\n    if (room && room.participants) {\n      const participant = room.participants.find(p => p.username === username);\n      if (participant && participant.color) {\n        userColor = participant.color;\n      }\n    }\n\n    // If no color found, generate a new one\n    if (!userColor) {\n      userColor = generateRandomColor();\n    }\n\n    // Update active user info\n    localStorage.setItem(\"chatUser\", JSON.stringify({\n      username,\n      roomId,\n      joinedAt: new Date().toISOString(),\n      color: userColor // Include user's color\n    }));\n\n    // Update last activity\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n    const updatedRooms = userRooms.map(room => {\n      if (room.roomId === roomId) {\n        return {\n          ...room,\n          lastActivity: new Date().toISOString()\n        };\n      }\n      return room;\n      /*sohamghosh-jellylemonshake-23bps1146 */\n    });\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\n\n    // Navigate to room\n    navigate(`/room/${roomId}`);\n  };\n\n  // Handle removing a room from joined rooms\n  const removeRoom = (roomId, e) => {\n    e.stopPropagation(); // Prevent clicking through to the room\n\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\n    const updatedRooms = userRooms.filter(room => room.roomId !== roomId);\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\n    setJoinedRooms(updatedRooms);\n\n    // Also remove user from room participants if they're in there\n    const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n    if (rooms[roomId]) {\n      rooms[roomId].participants = rooms[roomId].participants.filter(p => p.username !== username);\n      localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\n    }\n  };\n  const toggleRoomsExpanded = e => {\n    e.stopPropagation();\n    setRoomsExpanded(!roomsExpanded);\n  };\n  const renderSelectView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `home-options ${dialogVisible ? \"hidden\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Chat Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"option-button create\",\n        onClick: () => showDialogView(\"create\"),\n        children: \"Create a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"option-button join\",\n        onClick: () => showDialogView(\"join\"),\n        children: \"Join a Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), joinedRooms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-button my-rooms\",\n        ref: myRoomsRef,\n        onClick: toggleRoomsExpanded,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-rooms-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"My Rooms\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rooms-count\",\n              children: joinedRooms.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"expand-icon\",\n            children: roomsExpanded ? \"▲\" : \"▼\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rooms-list-container ${roomsExpanded ? \"expanded\" : \"\"}`,\n          children: [joinedRooms.sort((a, b) => new Date(b.lastActivity) - new Date(a.lastActivity)).map(room => {\n            // Get room data including color\n            const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n            const roomData = rooms[room.roomId];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-room-item\",\n              onClick: e => {\n                e.stopPropagation();\n                enterRoom(room.roomId);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"home-room-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"home-room-name\",\n                  children: [\"Room #\", room.roomId, room.isPrivate && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"private-badge mini\",\n                    children: \"P\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"home-room-details\",\n                  children: [\"Last active: \", formatLastActivity(room.lastActivity)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-room\",\n                onClick: e => removeRoom(room.roomId, e),\n                title: \"Remove this room\",\n                style: roomData !== null && roomData !== void 0 && roomData.color ? {\n                  color: roomData.color\n                } : {},\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"10\",\n                  height: \"10\",\n                  viewBox: \"0 0 10 10\",\n                  fill: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M1 1L9 9M9 1L1 9\",\n                    stroke: \"currentColor\",\n                    \"stroke-width\": \"1.5\",\n                    \"stroke-linecap\": \"round\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 23\n              }, this)]\n            }, room.roomId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 21\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"join-new-room\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"join-new-room-btn\",\n              onClick: e => {\n                e.stopPropagation();\n                setView(\"join\");\n              },\n              children: \"Join Another Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n  const renderCreateRoomView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a New Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateRoom,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Your Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Enter your display name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"isPrivate\",\n          checked: isPrivate,\n          onChange: e => setIsPrivate(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"isPrivate\",\n          children: \"Private Room (Password Protected)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), isPrivate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Room Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter room password\",\n          required: isPrivate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"back-button\",\n          onClick: hideDialogView,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"create-button\",\n          children: \"Create Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 5\n  }, this);\n  /*sohamghosh-jellylemonshake-23bps1146 */\n  const renderJoinRoomView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Join a Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleJoinRoom,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"join-username\",\n          children: \"Your Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"join-username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Enter your display name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"roomPin\",\n          children: \"Room PIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pin-container\",\n          children: [0, 1, 2, 3].map(i => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"pin-digit\",\n            maxLength: \"1\",\n            pattern: \"[0-9]\",\n            inputMode: \"numeric\",\n            autoComplete: \"off\",\n            onChange: handlePinChange,\n            onKeyDown: handlePinKeyDown,\n            \"data-index\": i,\n            value: roomPin[i] || \"\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          id: \"roomPin\",\n          value: roomPin.join(\"\"),\n          className: \"pin-input-hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"roomPassword\",\n          children: \"Room Password (if required)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"roomPassword\",\n          value: roomPassword,\n          onChange: e => setRoomPassword(e.target.value),\n          placeholder: \"Enter room password if needed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"back-button\",\n          onClick: hideDialogView,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"join-button\",\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 546,\n    columnNumber: 5\n  }, this);\n  const renderMyRoomsView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container rooms-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 7\n    }, this), joinedRooms.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-rooms\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You haven't joined any rooms yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView(\"select\"),\n        className: \"back-button mt-20\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rooms-list\",\n        children: joinedRooms.sort((a, b) => new Date(b.lastActivity) - new Date(a.lastActivity)).map(room => {\n          // Get room data including color\n          const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\n          const roomData = rooms[room.roomId];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-button my-rooms\",\n            ref: myRoomsRef,\n            onClick: toggleRoomsExpanded,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"room-item\",\n              onClick: () => enterRoom(room.roomId),\n              style: roomData !== null && roomData !== void 0 && roomData.color ? {\n                borderLeft: `4px solid ${roomData.color}`\n              } : {},\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"room-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"room-id\",\n                  children: [room.name, room.isPrivate && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"private-badge small\",\n                    children: \"Private\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"room-details\",\n                  children: [room.isCreator ? \"Created by you\" : \"Joined\", \" \\u2022 Last activity: \", formatLastActivity(room.lastActivity)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-room\",\n                onClick: e => removeRoom(room.roomId, e),\n                title: \"Remove this room\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"10\",\n                  height: \"10\",\n                  viewBox: \"0 0 10 10\",\n                  fill: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M1 1L9 9M9 1L1 9\",\n                    stroke: \"currentColor\",\n                    \"stroke-width\": \"1.5\",\n                    \"stroke-linecap\": \"round\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 23\n              }, this)]\n            }, room.roomId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rooms-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView(\"select\"),\n          className: \"back-button\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setView(\"create\"),\n            className: \"create-button\",\n            children: \"Create New Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setView(\"join\"),\n            className: \"join-button\",\n            children: \"Join Another Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 617,\n    columnNumber: 5\n  }, this);\n\n  // Helper function to format the last activity time\n  const formatLastActivity = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now - date;\n    const diffMins = Math.floor(diffMs / 60000);\n    if (diffMins < 1) return \"Just now\";\n    if (diffMins < 60) return `${diffMins} min ago`;\n    const diffHours = Math.floor(diffMins / 60);\n    if (diffHours < 24) return `${diffHours} hr ago`;\n    const diffDays = Math.floor(diffHours / 24);\n    return `${diffDays} day${diffDays > 1 ? \"s\" : \"\"} ago`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: [renderSelectView(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dialog-overlay ${dialogVisible ? \"visible\" : \"\"}`,\n        onClick: hideDialogView,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          onClick: e => e.stopPropagation(),\n          children: [view === \"create\" && renderCreateRoomView(), view === \"join\" && renderJoinRoomView(), view === \"myRooms\" && renderMyRoomsView()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/jellylemonshake\",\n      className: \"github-profile-link\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": \"GitHub Profile\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        width: \"36\",\n        height: \"36\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 0.3C5.37 0.3 0 5.67 0 12.3c0 5.29 \\r 3.438 9.779 8.205 11.387 0.6 0.113 0.82-0.256 \\r 0.82-0.572 0-0.281-0.011-1.028-0.017-2.019-3.338 \\r 0.726-4.042-1.611-4.042-1.611-0.545-1.384-1.332-1.753-1.332-1.753-1.089-0.745 \\r 0.083-0.73 0.083-0.73 1.205 0.084 1.84 1.237 1.84 1.237 1.07 1.834 \\r 2.809 1.304 3.495 0.997 0.108-0.775 0.418-1.305 0.762-1.606-2.665-0.304-5.467-1.332-5.467-5.932 \\r 0-1.312 0.469-2.382 1.235-3.221-0.124-0.303-0.535-1.523 0.117-3.176 \\r 0 0 1.008-0.323 3.301 1.23a11.5 11.5 0 0 1 3.003-0.404c1.019 0.005 2.048 0.138 3.003 0.404\\r 2.291-1.553 3.297-1.23 3.297-1.23 0.654 1.653 0.243 2.873 0.12 3.176\\r 0.77 0.839 1.234 1.909 1.234 3.221 0 4.61-2.807 5.625-5.479 5.921\\r 0.43 0.37 0.823 1.099 0.823 2.217 0 1.6-0.015 2.892-0.015 3.287 0 0.319 0.216 0.689 0.825 0.572\\r C20.565 22.075 24 17.586 24 12.3c0-6.63-5.37-12-12-12z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 733,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"AZG8C/DB/niYuPVm79n6zVlMTTE=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Link","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","navigate","username","setUsername","password","setPassword","roomsExpanded","setRoomsExpanded","myRoomsRef","isAuthenticated","user","view","setView","showRoomsList","setShowRoomsList","joinedRooms","setJoinedRooms","roomPin","setRoomPin","roomPassword","setRoomPassword","savedRooms","setSavedRooms","showCreateForm","setShowCreateForm","showJoinForm","setShowJoinForm","roomIdInput","setRoomIdInput","isPrivate","setIsPrivate","pinInput","setPinInput","error","setError","dialogVisible","setDialogVisible","showDialogView","newView","hideDialogView","setTimeout","generateRandomColor","Math","floor","random","toString","padStart","userRooms","JSON","parse","localStorage","getItem","savedUsername","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleCreateRoom","e","preventDefault","trim","setItem","pin","roomColor","userColor","newRoom","id","createdBy","createdAt","Date","toISOString","color","participants","isCreator","rooms","stringify","allMessages","push","roomId","name","joinedAt","lastActivity","err","console","handlePinChange","index","parseInt","dataset","value","replace","slice","newPin","nextInput","querySelector","focus","handlePinKeyDown","key","prevInput","handleJoinRoom","pinString","join","length","room","some","p","existingUser","find","r","enterRoom","userData","participant","updatedRooms","map","removeRoom","stopPropagation","filter","toggleRoomsExpanded","renderSelectView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","sort","a","b","roomData","formatLastActivity","title","style","width","height","viewBox","fill","d","stroke","renderCreateRoomView","onSubmit","htmlFor","type","onChange","placeholder","required","checked","renderJoinRoomView","i","maxLength","pattern","inputMode","autoComplete","onKeyDown","renderMyRoomsView","borderLeft","timestamp","date","now","diffMs","diffMins","diffHours","diffDays","href","rel","_c","$RefreshReg$"],"sources":["/Users/nikhilkumar/aws project/ChatRoom-/jellylemonshake/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport \"../styles/components/Home.css\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [roomsExpanded, setRoomsExpanded] = useState(false);\r\n  const myRoomsRef = useRef(null);\r\n  const { isAuthenticated, user } = useAuth();\r\n  const [view, setView] = useState(\"select\");\r\n  const [showRoomsList, setShowRoomsList] = useState(false);\r\n  const [joinedRooms, setJoinedRooms] = useState([]);\r\n  const [roomPin, setRoomPin] = useState([\"\", \"\", \"\", \"\"]);\r\n  const [roomPassword, setRoomPassword] = useState(\"\");\r\n  const [savedRooms, setSavedRooms] = useState([]);\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [showJoinForm, setShowJoinForm] = useState(false);\r\n  const [roomIdInput, setRoomIdInput] = useState(\"\");\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [pinInput, setPinInput] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [dialogVisible, setDialogVisible] = useState(false);\r\n\r\n  // Function to show a dialog view with animation\r\n  const showDialogView = (newView) => {\r\n    setDialogVisible(true);\r\n    setView(newView);\r\n  };\r\n\r\n  // Function to hide dialog and go back to select view\r\n  const hideDialogView = () => {\r\n    setDialogVisible(false);\r\n    setTimeout(() => {\r\n      setView(\"select\");\r\n    }, 300); // Match the CSS transition duration\r\n  };\r\n\r\n  // Function to generate random color\r\n  const generateRandomColor = () => {\r\n    return (\r\n      \"#\" +\r\n      Math.floor(Math.random() * 16777215)\r\n        .toString(16)\r\n        .padStart(6, \"0\")\r\n    );\r\n  };\r\n\r\n  // Load joined rooms on component mount\r\n  useEffect(() => {\r\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n    setJoinedRooms(userRooms);\r\n\r\n    // If user has a stored username, use it\r\n    const savedUsername = localStorage.getItem(\"preferredUsername\");\r\n    if (savedUsername) {\r\n      setUsername(savedUsername);\r\n    }\r\n  }, []);\r\n  // Add useEffect for outside click detection\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (\r\n        myRoomsRef.current &&\r\n        !myRoomsRef.current.contains(event.target) &&\r\n        roomsExpanded\r\n      ) {\r\n        setRoomsExpanded(false);\r\n      }\r\n    }\r\n\r\n    // Add event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    // Clean up\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [roomsExpanded]);\r\n/*sohamghosh-jellylemonshake-23bps1146 */\r\n  // Function to handle room creation\r\n  const handleCreateRoom = (e) => {\r\n    e.preventDefault();\r\n    if (!username.trim()) {\r\n      setError(\"Username is required\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Save preferred username\r\n      localStorage.setItem(\"preferredUsername\", username);\r\n\r\n      // Generate a random 4-digit PIN\r\n      const pin = Math.floor(1000 + Math.random() * 9000).toString();\r\n\r\n      // Generate colors for room and user\r\n      const roomColor = generateRandomColor();\r\n      const userColor = generateRandomColor();\r\n\r\n      // Create mock room data and store in localStorage\r\n      const newRoom = {\r\n        id: pin,\r\n        createdBy: username,\r\n        isPrivate: isPrivate,\r\n        password: isPrivate ? password : null,\r\n        createdAt: new Date().toISOString(),\r\n        color: roomColor, // Assign random color to room\r\n        participants: [\r\n          {\r\n            username,\r\n            isCreator: true,\r\n            color: userColor, // Assign random color to user\r\n          },\r\n        ],\r\n      };\r\n\r\n      // Save room to localStorage\r\n      const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\r\n      rooms[pin] = newRoom;\r\n      localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\r\n\r\n      // Initialize empty messages array for this room\r\n      const allMessages = JSON.parse(\r\n        localStorage.getItem(\"chatMessages\") || \"{}\"\r\n      );\r\n      allMessages[pin] = [];\r\n      localStorage.setItem(\"chatMessages\", JSON.stringify(allMessages));\r\n\r\n      // Add room to user's joined rooms\r\n      const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n      userRooms.push({\r\n        roomId: pin,\r\n        name: `Room #${pin}`,\r\n        joinedAt: new Date().toISOString(),\r\n        isPrivate: isPrivate,\r\n        isCreator: true,\r\n        lastActivity: new Date().toISOString(),\r\n      });\r\n      localStorage.setItem(\"joinedRooms\", JSON.stringify(userRooms));\r\n\r\n      // Store active user info including color\r\n      localStorage.setItem(\r\n        \"chatUser\",\r\n        JSON.stringify({\r\n          username,\r\n          roomId: pin,\r\n          joinedAt: new Date().toISOString(),\r\n          color: userColor, // Store user's color\r\n        })\r\n      );\r\n\r\n      // Navigate to the room\r\n      navigate(`/room/${pin}`);\r\n    } catch (err) {\r\n      setError(\"Error creating room\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Handle PIN input changes\r\n  const handlePinChange = (e) => {\r\n    const index = parseInt(e.target.dataset.index);\r\n    // Only allow digits and limit to single character\r\n    const value = e.target.value.replace(/[^0-9]/g, \"\").slice(0, 1);\r\n\r\n    // Create a copy of the array and update just this position\r\n    const newPin = [...roomPin];\r\n    newPin[index] = value;\r\n    setRoomPin(newPin);\r\n\r\n    // Auto-focus to next input if a digit was entered\r\n    if (value && index < 3) {\r\n      const nextInput = document.querySelector(\r\n        `.pin-digit[data-index=\"${index + 1}\"]`\r\n      );\r\n      if (nextInput) {\r\n        nextInput.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle key presses in PIN inputs\r\n  const handlePinKeyDown = (e) => {\r\n    const index = parseInt(e.target.dataset.index);\r\n\r\n    if (e.key === \"Backspace\") {\r\n      // Create a copy of the array\r\n      const newPin = [...roomPin];\r\n\r\n      if (roomPin[index] === \"\") {\r\n        // If current input is already empty and backspace was pressed,\r\n        // move focus to previous input\r\n        if (index > 0) {\r\n          const prevInput = document.querySelector(\r\n            `.pin-digit[data-index=\"${index - 1}\"]`\r\n          );\r\n          if (prevInput) {\r\n            prevInput.focus();\r\n          }\r\n        }\r\n      } else {\r\n        // Clear the current input\r\n        newPin[index] = \"\";\r\n        setRoomPin(newPin);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Function to handle joining a room\r\n  const handleJoinRoom = (e) => {\r\n    e.preventDefault();\r\n    if (!username.trim()) {\r\n      setError(\"Username is required\");\r\n      return;\r\n    }\r\n    const pinString = roomPin.join(\"\");\r\n    if (!pinString || pinString.length !== 4) {\r\n      setError(\"Valid 4-digit room PIN is required\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Save preferred username\r\n      localStorage.setItem(\"preferredUsername\", username);\r\n\r\n      // Get rooms from localStorage\r\n      const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\r\n      const room = rooms[pinString];\r\n\r\n      // Check if room exists\r\n      if (!room) {\r\n        setError(\"Room not found\");\r\n        return;\r\n      }\r\n\r\n      // Check if room is private and verify password\r\n      if (room.isPrivate) {\r\n        if (!roomPassword) {\r\n          setError(\"This room requires a password\");\r\n          return;\r\n        }\r\n        if (room.password !== roomPassword) {\r\n          setError(\"Incorrect password\");\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Generate a random color for the user\r\n      let userColor = generateRandomColor();\r\n\r\n      // Add user to room participants if not already there\r\n      if (!room.participants.some((p) => p.username === username)) {\r\n        room.participants.push({\r\n          username,\r\n          joinedAt: new Date().toISOString(),\r\n          color: userColor, // Assign color to new user\r\n        });\r\n        rooms[roomPin] = room;\r\n        localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\r\n      } else {\r\n        // User already exists in the room - retrieve their color\r\n        const existingUser = room.participants.find(\r\n          (p) => p.username === username\r\n        );\r\n        if (existingUser && existingUser.color) {\r\n          userColor = existingUser.color;\r\n        }\r\n      }\r\n\r\n      // Add room to user's joined rooms if not already there\r\n      const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n      if (!userRooms.some((r) => r.roomId === roomPin)) {\r\n        userRooms.push({\r\n          roomId: roomPin,\r\n          name: `Room #${roomPin}`,\r\n          joinedAt: new Date().toISOString(),\r\n          isPrivate: room.isPrivate,\r\n          isCreator: room.createdBy === username,\r\n          lastActivity: new Date().toISOString(),\r\n        });\r\n        localStorage.setItem(\"joinedRooms\", JSON.stringify(userRooms));\r\n      }\r\n/*sohamghosh-jellylemonshake-23bps1146 */\r\n      // Store active user info with color\r\n      localStorage.setItem(\r\n        \"chatUser\",\r\n        JSON.stringify({\r\n          username,\r\n          roomId: roomPin,\r\n          joinedAt: new Date().toISOString(),\r\n          color: userColor, // Store user's color\r\n        })\r\n      );\r\n\r\n      // Navigate to room\r\n      navigate(`/room/${roomPin}`);\r\n    } catch (err) {\r\n      setError(\"Error joining room\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Handle entering a joined room\r\n  const enterRoom = (roomId) => {\r\n    // Get user data to preserve color\r\n    const userData = JSON.parse(localStorage.getItem(\"chatUser\") || \"{}\");\r\n\r\n    // Get room data\r\n    const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\r\n    const room = rooms[roomId];\r\n\r\n    // Find user's color in this room if it exists\r\n    let userColor = userData.color;\r\n\r\n    if (room && room.participants) {\r\n      const participant = room.participants.find(\r\n        (p) => p.username === username\r\n      );\r\n      if (participant && participant.color) {\r\n        userColor = participant.color;\r\n      }\r\n    }\r\n\r\n    // If no color found, generate a new one\r\n    if (!userColor) {\r\n      userColor = generateRandomColor();\r\n    }\r\n\r\n    // Update active user info\r\n    localStorage.setItem(\r\n      \"chatUser\",\r\n      JSON.stringify({\r\n        username,\r\n        roomId,\r\n        joinedAt: new Date().toISOString(),\r\n        color: userColor, // Include user's color\r\n      })\r\n    );\r\n\r\n    // Update last activity\r\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n    const updatedRooms = userRooms.map((room) => {\r\n      if (room.roomId === roomId) {\r\n        return { ...room, lastActivity: new Date().toISOString() };\r\n      }\r\n      return room;\r\n      /*sohamghosh-jellylemonshake-23bps1146 */\r\n    });\r\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\r\n\r\n    // Navigate to room\r\n    navigate(`/room/${roomId}`);\r\n  };\r\n\r\n  // Handle removing a room from joined rooms\r\n  const removeRoom = (roomId, e) => {\r\n    e.stopPropagation(); // Prevent clicking through to the room\r\n\r\n    const userRooms = JSON.parse(localStorage.getItem(\"joinedRooms\") || \"[]\");\r\n    const updatedRooms = userRooms.filter((room) => room.roomId !== roomId);\r\n    localStorage.setItem(\"joinedRooms\", JSON.stringify(updatedRooms));\r\n    setJoinedRooms(updatedRooms);\r\n\r\n    // Also remove user from room participants if they're in there\r\n    const rooms = JSON.parse(localStorage.getItem(\"chatRooms\") || \"{}\");\r\n    if (rooms[roomId]) {\r\n      rooms[roomId].participants = rooms[roomId].participants.filter(\r\n        (p) => p.username !== username\r\n      );\r\n      localStorage.setItem(\"chatRooms\", JSON.stringify(rooms));\r\n    }\r\n  };\r\n\r\n  const toggleRoomsExpanded = (e) => {\r\n    e.stopPropagation();\r\n    setRoomsExpanded(!roomsExpanded);\r\n  };\r\n\r\n  const renderSelectView = () => (\r\n    <div className={`home-options ${dialogVisible ? \"hidden\" : \"\"}`}>\r\n      <h1>Welcome to Chat Rooms</h1>\r\n      <div className=\"options-container\">\r\n        <button\r\n          className=\"option-button create\"\r\n          onClick={() => showDialogView(\"create\")}\r\n        >\r\n          Create a Room\r\n        </button>\r\n        <button\r\n          className=\"option-button join\"\r\n          onClick={() => showDialogView(\"join\")}\r\n        >\r\n          Join a Room\r\n        </button>\r\n        {joinedRooms.length > 0 && (\r\n          <div\r\n            className=\"option-button my-rooms\"\r\n            ref={myRoomsRef}\r\n            onClick={toggleRoomsExpanded}\r\n          >\r\n            <div className=\"my-rooms-header\">\r\n              <div>\r\n                My Rooms{\" \"}\r\n                <span className=\"rooms-count\">{joinedRooms.length}</span>\r\n              </div>\r\n              <span className=\"expand-icon\">{roomsExpanded ? \"▲\" : \"▼\"}</span>\r\n            </div>\r\n\r\n            <div\r\n              className={`rooms-list-container ${\r\n                roomsExpanded ? \"expanded\" : \"\"\r\n              }`}\r\n            >\r\n              {joinedRooms\r\n                .sort(\r\n                  (a, b) => new Date(b.lastActivity) - new Date(a.lastActivity)\r\n                )\r\n                .map((room) => {\r\n                  // Get room data including color\r\n                  const rooms = JSON.parse(\r\n                    localStorage.getItem(\"chatRooms\") || \"{}\"\r\n                  );\r\n                  const roomData = rooms[room.roomId];\r\n                  return (\r\n                    <div\r\n                      key={room.roomId}\r\n                      className=\"home-room-item\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        enterRoom(room.roomId);\r\n                      }}\r\n                    >\r\n                      <div className=\"home-room-info\">\r\n                        <div className=\"home-room-name\">\r\n                          Room #{room.roomId}\r\n                          {room.isPrivate && (\r\n                            <span className=\"private-badge mini\">P</span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"home-room-details\">\r\n                          Last active: {formatLastActivity(room.lastActivity)}\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        className=\"remove-room\"\r\n                        onClick={(e) => removeRoom(room.roomId, e)}\r\n                        title=\"Remove this room\"\r\n                        style={roomData?.color ? { color: roomData.color } : {}}\r\n                      >\r\n                        <svg\r\n                          width=\"10\"\r\n                          height=\"10\"\r\n                          viewBox=\"0 0 10 10\"\r\n                          fill=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            d=\"M1 1L9 9M9 1L1 9\"\r\n                            stroke=\"currentColor\"\r\n                            stroke-width=\"1.5\"\r\n                            stroke-linecap=\"round\"\r\n                          />\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n              <div className=\"join-new-room\">\r\n                <button\r\n                  className=\"join-new-room-btn\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setView(\"join\");\r\n                  }}\r\n                >\r\n                  Join Another Room\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderCreateRoomView = () => (\r\n    <div>\r\n      <h1>Create a New Room</h1>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      <form onSubmit={handleCreateRoom}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"username\">Your Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Enter your display name\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"checkbox-group\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"isPrivate\"\r\n            checked={isPrivate}\r\n            onChange={(e) => setIsPrivate(e.target.checked)}\r\n          />\r\n          <label htmlFor=\"isPrivate\">Private Room (Password Protected)</label>\r\n        </div>\r\n\r\n        {isPrivate && (\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"password\">Room Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Enter room password\"\r\n              required={isPrivate}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"button-group\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"back-button\"\r\n            onClick={hideDialogView}\r\n          >\r\n            Back\r\n          </button>\r\n          <button type=\"submit\" className=\"create-button\">\r\n            Create Room\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n/*sohamghosh-jellylemonshake-23bps1146 */\r\n  const renderJoinRoomView = () => (\r\n    <div>\r\n      <h1>Join a Room</h1>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      <form onSubmit={handleJoinRoom}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"join-username\">Your Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"join-username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Enter your display name\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"roomPin\">Room PIN</label>\r\n          <div className=\"pin-container\">\r\n            {[0, 1, 2, 3].map((i) => (\r\n              <input\r\n                key={i}\r\n                type=\"text\"\r\n                className=\"pin-digit\"\r\n                maxLength=\"1\"\r\n                pattern=\"[0-9]\"\r\n                inputMode=\"numeric\"\r\n                autoComplete=\"off\"\r\n                onChange={handlePinChange}\r\n                onKeyDown={handlePinKeyDown}\r\n                data-index={i}\r\n                value={roomPin[i] || \"\"}\r\n              />\r\n            ))}\r\n          </div>\r\n          <input\r\n            type=\"hidden\"\r\n            id=\"roomPin\"\r\n            value={roomPin.join(\"\")}\r\n            className=\"pin-input-hidden\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"roomPassword\">Room Password (if required)</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"roomPassword\"\r\n            value={roomPassword}\r\n            onChange={(e) => setRoomPassword(e.target.value)}\r\n            placeholder=\"Enter room password if needed\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"button-group\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"back-button\"\r\n            onClick={hideDialogView}\r\n          >\r\n            Back\r\n          </button>\r\n          <button type=\"submit\" className=\"join-button\">\r\n            Join Room\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  const renderMyRoomsView = () => (\r\n    <div className=\"form-container rooms-container\">\r\n      <h1>My Rooms</h1>\r\n      {joinedRooms.length === 0 ? (\r\n        <div className=\"no-rooms\">\r\n          <p>You haven't joined any rooms yet.</p>\r\n          <button\r\n            onClick={() => setView(\"select\")}\r\n            className=\"back-button mt-20\"\r\n          >\r\n            Back\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"rooms-list\">\r\n            {joinedRooms\r\n              .sort(\r\n                (a, b) => new Date(b.lastActivity) - new Date(a.lastActivity)\r\n              )\r\n              .map((room) => {\r\n                // Get room data including color\r\n                const rooms = JSON.parse(\r\n                  localStorage.getItem(\"chatRooms\") || \"{}\"\r\n                );\r\n                const roomData = rooms[room.roomId];\r\n                return (\r\n                  <div\r\n                    className=\"option-button my-rooms\"\r\n                    ref={myRoomsRef}\r\n                    onClick={toggleRoomsExpanded}\r\n                  >\r\n                    <div\r\n                      key={room.roomId}\r\n                      className=\"room-item\"\r\n                      onClick={() => enterRoom(room.roomId)}\r\n                      style={\r\n                        roomData?.color\r\n                          ? { borderLeft: `4px solid ${roomData.color}` }\r\n                          : {}\r\n                      }\r\n                    >\r\n                      <div className=\"room-info\">\r\n                        <div className=\"room-id\">\r\n                          {room.name}\r\n                          {room.isPrivate && (\r\n                            <span className=\"private-badge small\">Private</span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"room-details\">\r\n                          {room.isCreator ? \"Created by you\" : \"Joined\"} • Last\r\n                          activity: {formatLastActivity(room.lastActivity)}\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        className=\"remove-room\"\r\n                        onClick={(e) => removeRoom(room.roomId, e)}\r\n                        title=\"Remove this room\"\r\n                      >\r\n                        <svg\r\n                          width=\"10\"\r\n                          height=\"10\"\r\n                          viewBox=\"0 0 10 10\"\r\n                          fill=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            d=\"M1 1L9 9M9 1L1 9\"\r\n                            stroke=\"currentColor\"\r\n                            stroke-width=\"1.5\"\r\n                            stroke-linecap=\"round\"\r\n                          />\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n          <div className=\"rooms-actions\">\r\n            <button onClick={() => setView(\"select\")} className=\"back-button\">\r\n              Back\r\n            </button>\r\n            <div className=\"action-buttons\">\r\n              <button\r\n                onClick={() => setView(\"create\")}\r\n                className=\"create-button\"\r\n              >\r\n                Create New Room\r\n              </button>\r\n              <button onClick={() => setView(\"join\")} className=\"join-button\">\r\n                Join Another Room\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // Helper function to format the last activity time\r\n  const formatLastActivity = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    const diffMs = now - date;\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n\r\n    if (diffMins < 1) return \"Just now\";\r\n    if (diffMins < 60) return `${diffMins} min ago`;\r\n\r\n    const diffHours = Math.floor(diffMins / 60);\r\n    if (diffHours < 24) return `${diffHours} hr ago`;\r\n\r\n    const diffDays = Math.floor(diffHours / 24);\r\n    return `${diffDays} day${diffDays > 1 ? \"s\" : \"\"} ago`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"home-background\"></div>\r\n      <div className=\"home-container\">\r\n        {renderSelectView()}\r\n\r\n        {/* Dialog overlay with click-outside-to-close functionality */}\r\n        <div\r\n          className={`dialog-overlay ${dialogVisible ? \"visible\" : \"\"}`}\r\n          onClick={hideDialogView}\r\n        >\r\n          <div className=\"form-container\" onClick={(e) => e.stopPropagation()}>\r\n            {view === \"create\" && renderCreateRoomView()}\r\n            {view === \"join\" && renderJoinRoomView()}\r\n            {view === \"myRooms\" && renderMyRoomsView()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* GitHub Profile Logo - Bottom Left */}\r\n      <a\r\n        href=\"https://github.com/jellylemonshake\"\r\n        className=\"github-profile-link\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        aria-label=\"GitHub Profile\"\r\n      >\r\n        <svg\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"currentColor\"\r\n          width=\"36\"\r\n          height=\"36\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <path\r\n            d=\"M12 0.3C5.37 0.3 0 5.67 0 12.3c0 5.29 \r\n               3.438 9.779 8.205 11.387 0.6 0.113 0.82-0.256 \r\n               0.82-0.572 0-0.281-0.011-1.028-0.017-2.019-3.338 \r\n               0.726-4.042-1.611-4.042-1.611-0.545-1.384-1.332-1.753-1.332-1.753-1.089-0.745 \r\n               0.083-0.73 0.083-0.73 1.205 0.084 1.84 1.237 1.84 1.237 1.07 1.834 \r\n               2.809 1.304 3.495 0.997 0.108-0.775 0.418-1.305 0.762-1.606-2.665-0.304-5.467-1.332-5.467-5.932 \r\n               0-1.312 0.469-2.382 1.235-3.221-0.124-0.303-0.535-1.523 0.117-3.176 \r\n               0 0 1.008-0.323 3.301 1.23a11.5 11.5 0 0 1 3.003-0.404c1.019 0.005 2.048 0.138 3.003 0.404\r\n               2.291-1.553 3.297-1.23 3.297-1.23 0.654 1.653 0.243 2.873 0.12 3.176\r\n               0.77 0.839 1.234 1.909 1.234 3.221 0 4.61-2.807 5.625-5.479 5.921\r\n               0.43 0.37 0.823 1.099 0.823 2.217 0 1.6-0.015 2.892-0.015 3.287 0 0.319 0.216 0.689 0.825 0.572\r\n               C20.565 22.075 24 17.586 24 12.3c0-6.63-5.37-12-12-12z\"\r\n          />\r\n        </svg>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}